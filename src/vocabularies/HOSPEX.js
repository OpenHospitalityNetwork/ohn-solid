/**
 * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]
 * as part of artifact: [generated-vocab-hospex], version: [0.0.1]
 * on 'Tuesday, November 9, 2021 9:34 AM'.
 *
 * Vocabulary built from input: [vocabulary.ttl].
 *
 * The hospitality exchange ontology describes hospitality exchange
 */

// We prefix our local variables with underscores to (hopefully!) prevent
// potential names clashes with terms from vocabularies.
const { VocabTerm: _VocabTerm, getLocalStore } = require("@inrupt/solid-common-vocab");
const _DataFactory = require("@rdfjs/data-model");

const { namedNode: _namedNode } = _DataFactory;

function _NS(localName) {
  return _namedNode(`http://w3id.org/hospex/ns#${localName}`);
}

/**
 * The hospitality exchange ontology describes hospitality exchange
 */
const HOSPEX = {
  PREFIX: "hospex",
  NAMESPACE: "http://w3id.org/hospex/ns#",
  PREFIX_AND_NAMESPACE: { "hospex": "http://w3id.org/hospex/ns#" },
  NS: _NS,

  // *****************
  // All the Classes.
  // *****************

  /**
   * A document containing hospitality exchange data of a person
   *
   * This term provides descriptions only in English.
   */
  PersonalHospexDocument: new _VocabTerm(
    _NS("PersonalHospexDocument"),
    _DataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Personal Hospex Document`, "en")
    .addComment(`A document containing hospitality exchange data of a person`, "en"),

  /**
   * Accommodation that is offered to travellers
   *
   * This term provides descriptions only in English.
   */
  Accommodation: new _VocabTerm(
    _NS("Accommodation"),
    _DataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Accommodation`, "en")
    .addComment(`Accommodation that is offered to travellers`, "en"),

  /**
   * A hospitality exchange community
   *
   * This term provides descriptions only in English.
   */
  Community: new _VocabTerm(
    _NS("Community"),
    _DataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Hospitality Exchange Community`, "en")
    .addComment(`A hospitality exchange community`, "en"),


  // *******************
  // All the Properties.
  // *******************

  /**
   * 
    Membership of a person in a hospitality exchange community.
    Hospitality exchange community has user group which has members. This property loosely expresses the inverse of that relationship between community and a member of its usergroup.
    
   *
   * This term provides descriptions only in English.
   */
  memberOf: new _VocabTerm(
    _NS("memberOf"),
    _DataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`member of`, "en")
    .addComment(`
    Membership of a person in a hospitality exchange community.
    Hospitality exchange community has user group which has members. This property loosely expresses the inverse of that relationship between community and a member of its usergroup.
    `, "en"),

  /**
   * Person offers accommodation
   *
   * This term provides descriptions only in English.
   */
  offers: new _VocabTerm(
    _NS("offers"),
    _DataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`offers`, "en")
    .addComment(`Person offers accommodation`, "en"),

  /**
   * Accommodation is offered by a person
   *
   * This term provides descriptions only in English.
   */
  offeredBy: new _VocabTerm(
    _NS("offeredBy"),
    _DataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`offers`, "en")
    .addComment(`Accommodation is offered by a person`, "en"),

}

export default HOSPEX;
