{"version":3,"sources":["../node_modules/n3/src/N3Util.js","../node_modules/n3/src/N3DataFactory.js","../node_modules/n3/src/N3Parser.js","../node_modules/n3/src/N3Writer.js","../node_modules/n3/src/N3Store.js","../node_modules/n3/src/N3StreamParser.js","../node_modules/n3/src/N3StreamWriter.js","../node_modules/n3/node_modules/readable-stream/errors-browser.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/n3/src/IRIs.js","../node_modules/inherits/inherits_browser.js","../node_modules/n3/src/N3Lexer.js","../node_modules/n3/node_modules/readable-stream/readable-browser.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_readable.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/state.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_writable.js","../node_modules/string_decoder/lib/string_decoder.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_transform.js","../node_modules/queue-microtask/index.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/buffer_list.js","../node_modules/util-deprecate/browser.js","../node_modules/safe-buffer/index.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/async_iterator.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/from-browser.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/pipeline.js"],"names":["isNamedNode","term","termType","isBlankNode","isLiteral","isVariable","isDefaultGraph","inDefaultGraph","quad","graph","prefix","iri","factory","prefixes","defaultPrefixes","Object","create","processPrefix","cache","local","namedNode","Error","N3DataFactory","DEFAULTGRAPH","rdf","namespaces","xsd","_blankNodeCounter","escapedLiteral","quadId","DataFactory","NamedNode","blankNode","name","BlankNode","variable","Variable","literal","value","languageOrDataType","Literal","toLowerCase","datatype","boolean","Number","isFinite","isInteger","integer","double","isNaN","string","defaultGraph","triple","Term","id","this","other","substring","lastIndexOf","atPos","length","substr","datatypeString","dtPos","char","langString","language","DefaultGraph","termFromId","endPos","components","exec","unescapeQuotes","termToId","escapeQuotes","subject","predicate","object","Quad","_subject","_predicate","_object","_graph","toJSON","equals","replace","_","quoted","blankNodePrefix","N3Parser","options","_contextStack","_setBase","baseIRI","initDataFactory","format","match","isTurtle","test","isTriG","isNTriples","isNQuads","isN3","_n3Mode","isLineMode","_supportsNamedGraphs","_readPredicateOrNamedGraph","_readPredicate","_supportsQuads","_supportsRDFStar","_resolveRelativeIRI","_blankNodePrefix","_lexer","lexer","N3Lexer","lineMode","n3","_explicitQuantifiers","explicitQuantifiers","fragmentPos","indexOf","_base","_basePath","_baseRoot","_baseScheme","type","n3Mode","push","inverse","_inversePredicate","blankPrefix","_prefixes","quantified","_quantified","context","pop","token","_error","_callback","_sparqlStyle","_readPrefix","_readBaseIRI","_readSubject","_readNamedGraphLabel","quantifier","_resolveIRI","_namedNode","undefined","_blankNode","_variable","_saveContext","_readBlankNodeHead","RDF_NIL","_readListItem","_readPunctuation","N3_FORSOME","_quantifier","_readQuantifierList","N3_FORALL","_literalValue","_completeSubjectLiteral","_literal","_readEntity","_getPathReader","ABBREVIATIONS","_readBlankNodeTail","_readObject","_readDataTypeOrLang","_getContextEndReader","_readGraph","_readBlankNodePunctuation","_emit","empty","_restoreContext","_readPredicateAfterBlank","item","list","next","previousList","stack","parent","RDF_FIRST","_readListItemDataTypeOrLang","RDF_REST","_completeObjectLiteral","_completeLiteral","listItem","completed","_readCallback","inversePredicate","_readFormulaTail","_readInTopContext","_readQuadPunctuation","_prefix","_readPrefixIRI","prefixNode","_prefixCallback","_readDeclarationPunctuation","_readNamedGraphBlankLabel","entity","QUANTIFIERS_GRAPH","_readQuantifierPunctuation","afterPath","_afterPath","_readPath","_readForwardPath","_readBackwardPath","_readRDFStarTail","_quad","contextStack","_readRDFStarTailOrGraph","message","err","line","previousToken","noop","_removeDotSegments","result","i","pathStart","segmentStart","input","quadCallback","prefixCallback","error","quads","e","t","tokenize","every","parser","first","rest","nil","r","forAll","forSome","owl","sameAs","log","implies","prototype","escape","escapeAll","escapedCharacters","SerializedTerm","N3Writer","outputStream","_prefixRegex","write","_lists","lists","_outputStream","_endStream","end","output","chunk","encoding","done","_lineMode","_writeQuad","_writeQuadLine","_baseIRI","_prefixIRIs","addPrefixes","callback","_write","_inDefaultGraph","_encodeIriOrBlank","_encodeObject","_encodePredicate","_encodeSubject","_prefixMatch","quadToString","map","join","_encodeQuad","startsWith","characterReplacer","prefixMatch","decimal","_encodeLiteral","addQuad","hasPrefixes","IRIlist","prefixList","prefixIRI","RegExp","child","children","contents","elements","Array","_blockedWrite","singleDone","character","charCodeAt","toString","N3Store","_size","_graphs","_id","_ids","_entities","_blankNodeIndex","_factory","addQuads","size","subjects","graphs","graphKey","subjectKey","predicateKey","keys","index0","key0","key1","key2","index1","index2","existed","key","name0","name1","name2","array","tmp","entityKeys","value0","entity0","value1","entity1","values","l","parts","count","isString","uniqueIds","graphItem","predicates","objects","freeze","ids","entities","changed","_addToIndex","removeQuad","getQuads","stream","on","_removeFromIndex","Readable","objectMode","_read","remove","removeMatches","content","subjectId","predicateId","objectId","_getGraphs","graphId","_findInIndex","DatasetCoreAndReadableStream","_countInIndex","some","results","forSubjects","s","_uniqueEntities","_loopBy2Keys","_loopByKey1","_loopByKey0","_loop","forPredicates","p","forObjects","o","forGraphs","g","suggestedName","index","ignoreErrors","onError","node","tails","toRemove","forEach","tailQuad","head","headPos","items","malformed","current","objectQuads","subjectQuads","unshift","removeQuads","Symbol","iterator","String","n3Store","assign","_filtered","filtered","add","delete","has","N3StreamParser","onData","onEnd","decodeStrings","_readableState","parse","event","emit","uri","_transform","_flush","Transform","N3StreamWriter","writer","writableObjectMode","_writer","addPrefix","codes","createErrorType","code","Base","NodeError","_Base","subClass","superClass","arg1","arg2","arg3","call","getMessage","constructor","__proto__","oneOf","expected","thing","isArray","len","concat","slice","TypeError","actual","determiner","search","pos","msg","str","this_len","endsWith","start","includes","arg","module","exports","objectKeys","obj","Duplex","require","Writable","v","method","allowHalfOpen","readable","writable","once","onend","_writableState","ended","process","nextTick","onEndNT","self","defineProperty","enumerable","get","highWaterMark","getBuffer","destroyed","set","RDF","XSD","SWAP","ctor","superCtor","super_","configurable","TempCtor","escapeSequence","escapeReplacements","illegalIriChars","lineModeRegExps","_iri","_unescapedIri","_simpleQuotedString","_langcode","_blank","_newline","_comment","_whitespace","_endOfFile","invalidRegExp","_simpleApostropheString","_prefixed","_number","_boolean","_keyword","_sparqlKeyword","_shortPredicates","_comments","comments","_literalClosingPos","inputFinished","_input","outputComments","whiteSpaceMatch","comment","_line","firstChar","matchLength","inconclusive","_previousMarker","_unescape","reportSyntaxError","_parseLiteral","toUpperCase","_syntaxError","invalid","replaced","sequence","unicode4","unicode8","escapedChar","fromCharCode","parseInt","charCode","opening","openingLength","closingPos","Math","max","backslashCount","raw","lines","split","issue","_readStartingBom","tokens","_tokenizeToEnd","queueMicrotask","_pendingBuffer","setEncoding","data","Buffer","Stream","PassThrough","finished","pipeline","ERR_STREAM_PREMATURE_CLOSE","eos","opts","called","_len","arguments","args","_key","apply","onlegacyfinish","onfinish","writableEnded","readableEnded","endEmitted","onerror","onclose","onrequest","req","setHeader","abort","isRequest","removeListener","ReadableState","EventEmitter","EElistenerCount","emitter","listeners","OurUint8Array","global","Uint8Array","debug","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","from","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_INVALID_ARG_TYPE","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","isDuplex","readableObjectMode","buffer","pipes","pipesCount","flowing","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","decoder","read","destroy","_destroy","readableAddChunk","addToFront","skipChunkCheck","er","state","emitReadable","emitReadable_","onEofChunk","isBuffer","chunkInvalid","getPrototypeOf","_uint8ArrayToBuffer","addChunk","maybeReadMore","_undestroy","undestroy","cb","isPaused","enc","clear","MAX_HWM","howMuchToRead","n","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","listenerCount","resume","nReadingNextTick","resume_","fromList","ret","shift","consume","endReadable","endReadableNT","wState","xs","x","nOrig","doRead","pipe","dest","pipeOpts","src","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","ondrain","ondata","cleanedUp","needDrain","pipeOnDrain","pause","fn","prependListener","_events","dests","splice","ev","res","addListener","removeAllListeners","wrap","_this","bind","asyncIterator","_fromList","iterable","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","errorEmitted","ending","finalCalled","prefinished","rState","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","floor","CorkedRequest","entry","finish","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","WritableState","internalUtil","deprecate","realHasInstance","ERR_MULTIPLE_CALLBACK","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","noDecode","writing","corked","bufferProcessing","onwrite","writecb","writelen","onwriteStateUpdate","finishMaybe","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","bufferedRequestCount","writev","_writev","final","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","prefinish","out","hasInstance","Function","writeAfterEnd","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","isEncoding","nb","nenc","retried","_normalizeEncoding","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","allocUnsafe","utf8CheckByte","byte","buf","utf8CheckExtraBytes","copy","c","total","j","utf8CheckIncomplete","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","transform","flush","err2","promise","window","Promise","resolve","then","catch","setTimeout","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_defineProperty","_defineProperties","target","props","descriptor","inspect","custom","instance","Constructor","_classCallCheck","tail","protoProps","staticProps","alloc","offset","hasStrings","_getString","_getBuffer","source","getOwnPropertyDescriptors","defineProperties","_objectSpread","depth","customInspect","config","localStorage","val","warned","console","trace","warn","copyProps","dst","SafeBuffer","encodingOrOffset","allocUnsafeSlow","fill","SlowBuffer","_Object$setPrototypeO","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","setPrototypeOf","reject","lastPromise","wrapForNext","_this2","_Object$create","ERR_MISSING_ARGS","destroyer","closed","to","popCallback","streams","destroys","reduce"],"mappings":"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","file":"static/js/3.b6eeb274.chunk.js","sourcesContent":["// **N3Util** provides N3 utility functions.\n\nimport N3DataFactory from './N3DataFactory';\n\n// Tests whether the given term represents an IRI\nexport function isNamedNode(term) {\n  return !!term && term.termType === 'NamedNode';\n}\n\n// Tests whether the given term represents a blank node\nexport function isBlankNode(term) {\n  return !!term && term.termType === 'BlankNode';\n}\n\n// Tests whether the given term represents a literal\nexport function isLiteral(term) {\n  return !!term && term.termType === 'Literal';\n}\n\n// Tests whether the given term represents a variable\nexport function isVariable(term) {\n  return !!term && term.termType === 'Variable';\n}\n\n// Tests whether the given term represents the default graph\nexport function isDefaultGraph(term) {\n  return !!term && term.termType === 'DefaultGraph';\n}\n\n// Tests whether the given quad is in the default graph\nexport function inDefaultGraph(quad) {\n  return isDefaultGraph(quad.graph);\n}\n\n// Creates a function that prepends the given IRI to a local name\nexport function prefix(iri, factory) {\n  return prefixes({ '': iri }, factory)('');\n}\n\n// Creates a function that allows registering and expanding prefixes\nexport function prefixes(defaultPrefixes, factory) {\n  // Add all of the default prefixes\n  const prefixes = Object.create(null);\n  for (const prefix in defaultPrefixes)\n    processPrefix(prefix, defaultPrefixes[prefix]);\n  // Set the default factory if none was specified\n  factory = factory || N3DataFactory;\n\n  // Registers a new prefix (if an IRI was specified)\n  // or retrieves a function that expands an existing prefix (if no IRI was specified)\n  function processPrefix(prefix, iri) {\n    // Create a new prefix if an IRI is specified or the prefix doesn't exist\n    if (typeof iri === 'string') {\n      // Create a function that expands the prefix\n      const cache = Object.create(null);\n      prefixes[prefix] = local => {\n        return cache[local] || (cache[local] = factory.namedNode(iri + local));\n      };\n    }\n    else if (!(prefix in prefixes)) {\n      throw new Error(`Unknown prefix: ${prefix}`);\n    }\n    return prefixes[prefix];\n  }\n  return processPrefix;\n}\n","// N3.js implementations of the RDF/JS core data types\n// See https://github.com/rdfjs/representation-task-force/blob/master/interface-spec.md\n\nimport namespaces from './IRIs';\nimport { isDefaultGraph } from './N3Util';\nconst { rdf, xsd } = namespaces;\n\n// eslint-disable-next-line prefer-const\nlet DEFAULTGRAPH;\nlet _blankNodeCounter = 0;\n\nconst escapedLiteral = /^\"(.*\".*)(?=\"[^\"]*$)/;\nconst quadId = /^<<(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) ?(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+)?>>$/;\n\n// ## DataFactory singleton\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  variable,\n  literal,\n  defaultGraph,\n  quad,\n  triple: quad,\n};\nexport default DataFactory;\n\n// ## Term constructor\nexport class Term {\n  constructor(id) {\n    this.id = id;\n  }\n\n  // ### The value of this term\n  get value() {\n    return this.id;\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Term)\n      return this.id === other.id;\n    // Otherwise, compare term type and value\n    return !!other && this.termType === other.termType &&\n                      this.value    === other.value;\n  }\n\n  // ### Returns a plain object representation of this term\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n    };\n  }\n}\n\n\n// ## NamedNode constructor\nexport class NamedNode extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'NamedNode';\n  }\n}\n\n// ## Literal constructor\nexport class Literal extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'Literal';\n  }\n\n  // ### The text value of this literal\n  get value() {\n    return this.id.substring(1, this.id.lastIndexOf('\"'));\n  }\n\n  // ### The language of this literal\n  get language() {\n    // Find the last quotation mark (e.g., '\"abc\"@en-us')\n    const id = this.id;\n    let atPos = id.lastIndexOf('\"') + 1;\n    // If \"@\" it follows, return the remaining substring; empty otherwise\n    return atPos < id.length && id[atPos++] === '@' ? id.substr(atPos).toLowerCase() : '';\n  }\n\n  // ### The datatype IRI of this literal\n  get datatype() {\n    return new NamedNode(this.datatypeString);\n  }\n\n  // ### The datatype string of this literal\n  get datatypeString() {\n    // Find the last quotation mark (e.g., '\"abc\"^^http://ex.org/types#t')\n    const id = this.id, dtPos = id.lastIndexOf('\"') + 1;\n    const char = dtPos < id.length ? id[dtPos] : '';\n    // If \"^\" it follows, return the remaining substring\n    return char === '^' ? id.substr(dtPos + 2) :\n           // If \"@\" follows, return rdf:langString; xsd:string otherwise\n           (char !== '@' ? xsd.string : rdf.langString);\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both literals were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Literal)\n      return this.id === other.id;\n    // Otherwise, compare term type, value, language, and datatype\n    return !!other && !!other.datatype &&\n                      this.termType === other.termType &&\n                      this.value    === other.value    &&\n                      this.language === other.language &&\n                      this.datatype.value === other.datatype.value;\n  }\n\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n      language: this.language,\n      datatype: { termType: 'NamedNode', value: this.datatypeString },\n    };\n  }\n}\n\n// ## BlankNode constructor\nexport class BlankNode extends Term {\n  constructor(name) {\n    super(`_:${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'BlankNode';\n  }\n\n  // ### The name of this blank node\n  get value() {\n    return this.id.substr(2);\n  }\n}\n\nexport class Variable extends Term {\n  constructor(name) {\n    super(`?${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Variable';\n  }\n\n  // ### The name of this variable\n  get value() {\n    return this.id.substr(1);\n  }\n}\n\n// ## DefaultGraph constructor\nexport class DefaultGraph extends Term {\n  constructor() {\n    super('');\n    return DEFAULTGRAPH || this;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'DefaultGraph';\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through strict equality;\n    // otherwise, compare term types.\n    return (this === other) || (!!other && (this.termType === other.termType));\n  }\n}\n\n// ## DefaultGraph singleton\nDEFAULTGRAPH = new DefaultGraph();\n\n\n// ### Constructs a term from the given internal string ID\nexport function termFromId(id, factory) {\n  factory = factory || DataFactory;\n\n  // Falsy value or empty string indicate the default graph\n  if (!id)\n    return factory.defaultGraph();\n\n  // Identify the term type based on the first character\n  switch (id[0]) {\n  case '?':\n    return factory.variable(id.substr(1));\n  case '_':\n    return factory.blankNode(id.substr(2));\n  case '\"':\n    // Shortcut for internal literals\n    if (factory === DataFactory)\n      return new Literal(id);\n    // Literal without datatype or language\n    if (id[id.length - 1] === '\"')\n      return factory.literal(id.substr(1, id.length - 2));\n    // Literal with datatype or language\n    const endPos = id.lastIndexOf('\"', id.length - 1);\n    return factory.literal(id.substr(1, endPos - 1),\n            id[endPos + 1] === '@' ? id.substr(endPos + 2)\n                                   : factory.namedNode(id.substr(endPos + 3)));\n  case '<':\n    const components = quadId.exec(id);\n    return factory.quad(\n      termFromId(unescapeQuotes(components[1]), factory),\n      termFromId(unescapeQuotes(components[2]), factory),\n      termFromId(unescapeQuotes(components[3]), factory),\n      components[4] && termFromId(unescapeQuotes(components[4]), factory)\n    );\n  default:\n    return factory.namedNode(id);\n  }\n}\n\n// ### Constructs an internal string ID from the given term or ID string\nexport function termToId(term) {\n  if (typeof term === 'string')\n    return term;\n  if (term instanceof Term && term.termType !== 'Quad')\n    return term.id;\n  if (!term)\n    return DEFAULTGRAPH.id;\n\n  // Term instantiated with another library\n  switch (term.termType) {\n  case 'NamedNode':    return term.value;\n  case 'BlankNode':    return `_:${term.value}`;\n  case 'Variable':     return `?${term.value}`;\n  case 'DefaultGraph': return '';\n  case 'Literal':      return `\"${term.value}\"${\n    term.language ? `@${term.language}` :\n      (term.datatype && term.datatype.value !== xsd.string ? `^^${term.datatype.value}` : '')}`;\n  case 'Quad':\n    // To identify RDF* quad components, we escape quotes by doubling them.\n    // This avoids the overhead of backslash parsing of Turtle-like syntaxes.\n    return `<<${\n        escapeQuotes(termToId(term.subject))\n      } ${\n        escapeQuotes(termToId(term.predicate))\n      } ${\n        escapeQuotes(termToId(term.object))\n      }${\n        (isDefaultGraph(term.graph)) ? '' : ` ${termToId(term.graph)}`\n      }>>`;\n  default: throw new Error(`Unexpected termType: ${term.termType}`);\n  }\n}\n\n\n// ## Quad constructor\nexport class Quad extends Term {\n  constructor(subject, predicate, object, graph) {\n    super('');\n    this._subject   = subject;\n    this._predicate = predicate;\n    this._object    = object;\n    this._graph     = graph || DEFAULTGRAPH;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Quad';\n  }\n\n  get subject() {\n    return this._subject;\n  }\n\n  get predicate() {\n    return this._predicate;\n  }\n\n  get object() {\n    return this._object;\n  }\n\n  get graph() {\n    return this._graph;\n  }\n\n  // ### Returns a plain object representation of this quad\n  toJSON() {\n    return {\n      termType:  this.termType,\n      subject:   this._subject.toJSON(),\n      predicate: this._predicate.toJSON(),\n      object:    this._object.toJSON(),\n      graph:     this._graph.toJSON(),\n    };\n  }\n\n  // ### Returns whether this object represents the same quad as the other\n  equals(other) {\n    return !!other && this._subject.equals(other.subject)     &&\n                      this._predicate.equals(other.predicate) &&\n                      this._object.equals(other.object)       &&\n                      this._graph.equals(other.graph);\n  }\n}\nexport { Quad as Triple };\n\n// ### Escapes the quotes within the given literal\nexport function escapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"/g, '\"\"')}`);\n}\n\n// ### Unescapes the quotes within the given literal\nexport function unescapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"\"/g, '\"')}`);\n}\n\n// ### Creates an IRI\nfunction namedNode(iri) {\n  return new NamedNode(iri);\n}\n\n// ### Creates a blank node\nfunction blankNode(name) {\n  return new BlankNode(name || `n3-${_blankNodeCounter++}`);\n}\n\n// ### Creates a literal\nfunction literal(value, languageOrDataType) {\n  // Create a language-tagged string\n  if (typeof languageOrDataType === 'string')\n    return new Literal(`\"${value}\"@${languageOrDataType.toLowerCase()}`);\n\n  // Automatically determine datatype for booleans and numbers\n  let datatype = languageOrDataType ? languageOrDataType.value : '';\n  if (datatype === '') {\n    // Convert a boolean\n    if (typeof value === 'boolean')\n      datatype = xsd.boolean;\n    // Convert an integer or double\n    else if (typeof value === 'number') {\n      if (Number.isFinite(value))\n        datatype = Number.isInteger(value) ? xsd.integer : xsd.double;\n      else {\n        datatype = xsd.double;\n        if (!Number.isNaN(value))\n          value = value > 0 ? 'INF' : '-INF';\n      }\n    }\n  }\n\n  // Create a datatyped literal\n  return (datatype === '' || datatype === xsd.string) ?\n    new Literal(`\"${value}\"`) :\n    new Literal(`\"${value}\"^^${datatype}`);\n}\n\n// ### Creates a variable\nfunction variable(name) {\n  return new Variable(name);\n}\n\n// ### Returns the default graph\nfunction defaultGraph() {\n  return DEFAULTGRAPH;\n}\n\n// ### Creates a quad\nfunction quad(subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph);\n}\n","// **N3Parser** parses N3 documents.\nimport N3Lexer from './N3Lexer';\nimport N3DataFactory from './N3DataFactory';\nimport namespaces from './IRIs';\n\nlet blankNodePrefix = 0;\n\n// ## Constructor\nexport default class N3Parser {\n  constructor(options) {\n    this._contextStack = [];\n    this._graph = null;\n\n    // Set the document IRI\n    options = options || {};\n    this._setBase(options.baseIRI);\n    options.factory && initDataFactory(this, options.factory);\n\n    // Set supported features depending on the format\n    const format = (typeof options.format === 'string') ?\n                 options.format.match(/\\w*$/)[0].toLowerCase() : '',\n        isTurtle = /turtle/.test(format), isTriG = /trig/.test(format),\n        isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n        isN3 = this._n3Mode = /n3/.test(format),\n        isLineMode = isNTriples || isNQuads;\n    if (!(this._supportsNamedGraphs = !(isTurtle || isN3)))\n      this._readPredicateOrNamedGraph = this._readPredicate;\n    // Support triples in other graphs\n    this._supportsQuads = !(isTurtle || isTriG || isNTriples || isN3);\n    // Support nesting of triples\n    this._supportsRDFStar = format === '' || /star|\\*$/.test(format);\n    // Disable relative IRIs in N-Triples or N-Quads mode\n    if (isLineMode)\n      this._resolveRelativeIRI = iri => { return null; };\n    this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :\n                              options.blankNodePrefix.replace(/^(?!_:)/, '_:');\n    this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode, n3: isN3 });\n    // Disable explicit quantifiers by default\n    this._explicitQuantifiers = !!options.explicitQuantifiers;\n  }\n\n  // ## Static class methods\n\n  // ### `_resetBlankNodePrefix` restarts blank node prefix identification\n  static _resetBlankNodePrefix() {\n    blankNodePrefix = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_setBase` sets the base IRI to resolve relative IRIs\n  _setBase(baseIRI) {\n    if (!baseIRI) {\n      this._base = '';\n      this._basePath = '';\n    }\n    else {\n      // Remove fragment if present\n      const fragmentPos = baseIRI.indexOf('#');\n      if (fragmentPos >= 0)\n        baseIRI = baseIRI.substr(0, fragmentPos);\n      // Set base IRI and its components\n      this._base = baseIRI;\n      this._basePath   = baseIRI.indexOf('/') < 0 ? baseIRI :\n                         baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(/^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i);\n      this._baseRoot   = baseIRI[0];\n      this._baseScheme = baseIRI[1];\n    }\n  }\n\n  // ### `_saveContext` stores the current parsing context\n  // when entering a new scope (list, blank node, formula)\n  _saveContext(type, graph, subject, predicate, object) {\n    const n3Mode = this._n3Mode;\n    this._contextStack.push({\n      subject: subject, predicate: predicate, object: object,\n      graph: graph, type: type,\n      inverse: n3Mode ? this._inversePredicate : false,\n      blankPrefix: n3Mode ? this._prefixes._ : '',\n      quantified: n3Mode ? this._quantified : null,\n    });\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      // Every new scope resets the predicate direction\n      this._inversePredicate = false;\n      // In N3, blank nodes are scoped to a formula\n      // (using a dot as separator, as a blank node label cannot start with it)\n      this._prefixes._ = (this._graph ? `${this._graph.id.substr(2)}.` : '.');\n      // Quantifiers are scoped to a formula\n      this._quantified = Object.create(this._quantified);\n    }\n  }\n\n  // ### `_restoreContext` restores the parent context\n  // when leaving a scope (list, blank node, formula)\n  _restoreContext() {\n    const context = this._contextStack.pop(), n3Mode = this._n3Mode;\n    this._subject   = context.subject;\n    this._predicate = context.predicate;\n    this._object    = context.object;\n    this._graph     = context.graph;\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      this._inversePredicate = context.inverse;\n      this._prefixes._ = context.blankPrefix;\n      this._quantified = context.quantified;\n    }\n  }\n\n  // ### `_readInTopContext` reads a token when in the top context\n  _readInTopContext(token) {\n    switch (token.type) {\n    // If an EOF token arrives in the top context, signal that we're done\n    case 'eof':\n      if (this._graph !== null)\n        return this._error('Unclosed graph', token);\n      delete this._prefixes._;\n      return this._callback(null, null, this._prefixes);\n    // It could be a prefix declaration\n    case 'PREFIX':\n      this._sparqlStyle = true;\n    case '@prefix':\n      return this._readPrefix;\n    // It could be a base declaration\n    case 'BASE':\n      this._sparqlStyle = true;\n    case '@base':\n      return this._readBaseIRI;\n    // It could be a graph\n    case '{':\n      if (this._supportsNamedGraphs) {\n        this._graph = '';\n        this._subject = null;\n        return this._readSubject;\n      }\n    case 'GRAPH':\n      if (this._supportsNamedGraphs)\n        return this._readNamedGraphLabel;\n    // Otherwise, the next token must be a subject\n    default:\n      return this._readSubject(token);\n    }\n  }\n\n  // ### `_readEntity` reads an IRI, prefixed name, blank node, or variable\n  _readEntity(token, quantifier) {\n    let value;\n    switch (token.type) {\n    // Read a relative or absolute IRI\n    case 'IRI':\n    case 'typeIRI':\n      const iri = this._resolveIRI(token.value);\n      if (iri === null)\n        return this._error('Invalid IRI', token);\n      value = this._namedNode(iri);\n      break;\n    // Read a prefixed name\n    case 'type':\n    case 'prefixed':\n      const prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error(`Undefined prefix \"${token.prefix}:\"`, token);\n      value = this._namedNode(prefix + token.value);\n      break;\n    // Read a blank node\n    case 'blank':\n      value = this._blankNode(this._prefixes[token.prefix] + token.value);\n      break;\n    // Read a variable\n    case 'var':\n      value = this._variable(token.value.substr(1));\n      break;\n    // Everything else is not an entity\n    default:\n      return this._error(`Expected entity but got ${token.type}`, token);\n    }\n    // In N3 mode, replace the entity if it is quantified\n    if (!quantifier && this._n3Mode && (value.id in this._quantified))\n      value = this._quantified[value.id];\n    return value;\n  }\n\n  // ### `_readSubject` reads a quad's subject\n  _readSubject(token) {\n    this._predicate = null;\n    switch (token.type) {\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph,\n                        this._subject = this._blankNode(), null, null);\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this.RDF_NIL, null, null);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph,\n                        this._graph = this._blankNode(), null, null);\n      return this._readSubject;\n    case '}':\n       // No subject; the graph in which we are reading is closed instead\n      return this._readPunctuation(token);\n    case '@forSome':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forSome\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORSOME;\n      this._quantifier = this._blankNode;\n      return this._readQuantifierList;\n    case '@forAll':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forAll\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORALL;\n      this._quantifier = this._variable;\n      return this._readQuantifierList;\n    case 'literal':\n      if (!this._n3Mode)\n        return this._error('Unexpected literal', token);\n\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._completeSubjectLiteral;\n      }\n      else\n        this._subject = this._literal(token.value, this._namedNode(token.prefix));\n\n      break;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, null, null, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the subject entity\n      if ((this._subject = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the subject might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._readPredicateOrNamedGraph);\n    }\n\n    // The next token must be a predicate,\n    // or, if the subject was actually a graph IRI, a named graph\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // ### `_readPredicate` reads a quad's predicate\n  _readPredicate(token) {\n    const type = token.type;\n    switch (type) {\n    case 'inverse':\n      this._inversePredicate = true;\n    case 'abbreviation':\n      this._predicate = this.ABBREVIATIONS[token.value];\n      break;\n    case '.':\n    case ']':\n    case '}':\n      // Expected predicate didn't come, must have been trailing semicolon\n      if (this._predicate === null)\n        return this._error(`Unexpected ${type}`, token);\n      this._subject = null;\n      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n    case ';':\n      // Additional semicolons can be safely ignored\n      return this._predicate !== null ? this._readPredicate :\n             this._error('Expected predicate but got ;', token);\n    case 'blank':\n      if (!this._n3Mode)\n        return this._error('Disallowed blank node as predicate', token);\n    default:\n      if ((this._predicate = this._readEntity(token)) === undefined)\n        return;\n    }\n    // The next token must be an object\n    return this._readObject;\n  }\n\n  // ### `_readObject` reads a quad's object\n  _readObject(token) {\n    switch (token.type) {\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._readDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else\n        this._object = this._literal(token.value, this._namedNode(token.prefix));\n      break;\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph, this._subject, this._predicate,\n                        this._subject = this._blankNode());\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this._subject, this._predicate, this.RDF_NIL);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, this._subject, this._predicate, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the object entity\n      if ((this._object = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the object might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._getContextEndReader());\n    }\n    return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateOrNamedGraph` reads a quad's predicate, or a named graph\n  _readPredicateOrNamedGraph(token) {\n    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n  }\n\n  // ### `_readGraph` reads a graph\n  _readGraph(token) {\n    if (token.type !== '{')\n      return this._error(`Expected graph but got ${token.type}`, token);\n    // The \"subject\" we read is actually the GRAPH's label\n    this._graph = this._subject, this._subject = null;\n    return this._readSubject;\n  }\n\n  // ### `_readBlankNodeHead` reads the head of a blank node\n  _readBlankNodeHead(token) {\n    if (token.type === ']') {\n      this._subject = null;\n      return this._readBlankNodeTail(token);\n    }\n    else {\n      this._predicate = null;\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readBlankNodeTail` reads the end of a blank node\n  _readBlankNodeTail(token) {\n    if (token.type !== ']')\n      return this._readBlankNodePunctuation(token);\n\n    // Store blank node quad\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this blank node\n    const empty = this._predicate === null;\n    this._restoreContext();\n    // If the blank node was the subject, continue reading the predicate\n    if (this._object === null)\n      // If the blank node was empty, it could be a named graph label\n      return empty ? this._readPredicateOrNamedGraph : this._readPredicateAfterBlank;\n    // If the blank node was the object, restore previous context and read punctuation\n    else\n      return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateAfterBlank` reads a predicate after an anonymous blank node\n  _readPredicateAfterBlank(token) {\n    switch (token.type) {\n    case '.':\n    case '}':\n      // No predicate is coming if the triple is terminated here\n      this._subject = null;\n      return this._readPunctuation(token);\n    default:\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readListItem` reads items from a list\n  _readListItem(token) {\n    let item = null,                      // The item of the list\n        list = null,                      // The list itself\n        next = this._readListItem;        // The next function to execute\n    const previousList = this._subject,   // The previous list that contains this list\n        stack = this._contextStack,       // The stack of parent contexts\n        parent = stack[stack.length - 1]; // The parent containing the current list\n\n    switch (token.type) {\n    case '[':\n      // Stack the current list quad and start a new quad with a blank node as subject\n      this._saveContext('blank', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST,\n                        this._subject = item = this._blankNode());\n      next = this._readBlankNodeHead;\n      break;\n    case '(':\n      // Stack the current list quad and start a new list\n      this._saveContext('list', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST, this.RDF_NIL);\n      this._subject = null;\n      break;\n    case ')':\n      // Closing the list; restore the parent context\n      this._restoreContext();\n      // If this list is contained within a parent list, return the membership quad here.\n      // This will be `<parent list element> rdf:first <this list>.`.\n      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n        this._emit(this._subject, this._predicate, this._object, this._graph);\n      // Was this list the parent's subject?\n      if (this._predicate === null) {\n        // The next token is the predicate\n        next = this._readPredicate;\n        // No list tail if this was an empty list\n        if (this._subject === this.RDF_NIL)\n          return next;\n      }\n      // The list was in the parent context's object\n      else {\n        next = this._getContextEndReader();\n        // No list tail if this was an empty list\n        if (this._object === this.RDF_NIL)\n          return next;\n      }\n      // Close the list by making the head nil\n      list = this.RDF_NIL;\n      break;\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        next = this._readListItemDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else {\n        item = this._literal(token.value, this._namedNode(token.prefix));\n        next = this._getContextEndReader();\n      }\n      break;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    default:\n      if ((item = this._readEntity(token)) === undefined)\n        return;\n    }\n\n     // Create a new blank node if no item head was assigned yet\n    if (list === null)\n      this._subject = list = this._blankNode();\n\n    // Is this the first element of the list?\n    if (previousList === null) {\n      // This list is either the subject or the object of its parent\n      if (parent.predicate === null)\n        parent.subject = list;\n      else\n        parent.object = list;\n    }\n    else {\n      // Continue the previous list with the current list\n      this._emit(previousList, this.RDF_REST, list, this._graph);\n    }\n    // If an item was read, add it to the list\n    if (item !== null) {\n      // In N3 mode, the item might be a path\n      if (this._n3Mode && (token.type === 'IRI' || token.type === 'prefixed')) {\n        // Create a new context to add the item's path\n        this._saveContext('item', this._graph, list, this.RDF_FIRST, item);\n        this._subject = item, this._predicate = null;\n        // _readPath will restore the context and output the item\n        return this._getPathReader(this._readListItem);\n      }\n      // Output the item\n      this._emit(list, this.RDF_FIRST, item, this._graph);\n    }\n    return next;\n  }\n\n  // ### `_readDataTypeOrLang` reads an _optional_ datatype or language\n  _readDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, false);\n  }\n\n\n  // ### `_readListItemDataTypeOrLang` reads an _optional_ datatype or language in a list\n  _readListItemDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, true);\n  }\n\n  // ### `_completeLiteral` completes a literal with an optional datatype or language\n  _completeLiteral(token) {\n    // Create a simple string literal by default\n    let literal = this._literal(this._literalValue);\n\n    switch (token.type) {\n    // Create a datatyped literal\n    case 'type':\n    case 'typeIRI':\n      const datatype = this._readEntity(token);\n      if (datatype === undefined) return; // No datatype means an error occurred\n      literal = this._literal(this._literalValue, datatype);\n      token = null;\n      break;\n    // Create a language-tagged string\n    case 'langcode':\n      literal = this._literal(this._literalValue, token.value);\n      token = null;\n      break;\n    }\n\n    return { token, literal };\n  }\n\n  // Completes a literal in subject position\n  _completeSubjectLiteral(token) {\n    this._subject = this._completeLiteral(token).literal;\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // Completes a literal in object position\n  _completeObjectLiteral(token, listItem) {\n    const completed = this._completeLiteral(token);\n    if (!completed)\n      return;\n    this._object = completed.literal;\n\n    // If this literal was part of a list, write the item\n    // (we could also check the context stack, but passing in a flag is faster)\n    if (listItem)\n      this._emit(this._subject, this.RDF_FIRST, this._object, this._graph);\n    // If the token was consumed, continue with the rest of the input\n    if (completed.token === null)\n      return this._getContextEndReader();\n    // Otherwise, consume the token now\n    else {\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(completed.token);\n    }\n  }\n\n  // ### `_readFormulaTail` reads the end of a formula\n  _readFormulaTail(token) {\n    if (token.type !== '}')\n      return this._readPunctuation(token);\n\n    // Store the last quad of the formula\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this formula\n    this._restoreContext();\n    // If the formula was the subject, continue reading the predicate.\n    // If the formula was the object, read punctuation.\n    return this._object === null ? this._readPredicate : this._getContextEndReader();\n  }\n\n  // ### `_readPunctuation` reads punctuation between quads or quad parts\n  _readPunctuation(token) {\n    let next, graph = this._graph;\n    const subject = this._subject, inversePredicate = this._inversePredicate;\n    switch (token.type) {\n    // A closing brace ends a graph\n    case '}':\n      if (this._graph === null)\n        return this._error('Unexpected graph closing', token);\n      if (this._n3Mode)\n        return this._readFormulaTail(token);\n      this._graph = null;\n    // A dot just ends the statement, without sharing anything with the next\n    case '.':\n      this._subject = null;\n      next = this._contextStack.length ? this._readSubject : this._readInTopContext;\n      if (inversePredicate) this._inversePredicate = false;\n      break;\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (graph = this._readEntity(token)) !== undefined) {\n        next = this._readQuadPunctuation;\n        break;\n      }\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    if (subject !== null) {\n      const predicate = this._predicate, object = this._object;\n      if (!inversePredicate)\n        this._emit(subject, predicate, object,  graph);\n      else\n        this._emit(object,  predicate, subject, graph);\n    }\n    return next;\n  }\n\n    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n  _readBlankNodePunctuation(token) {\n    let next;\n    switch (token.type) {\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    this._emit(this._subject, this._predicate, this._object, this._graph);\n    return next;\n  }\n\n  // ### `_readQuadPunctuation` reads punctuation after a quad\n  _readQuadPunctuation(token) {\n    if (token.type !== '.')\n      return this._error('Expected dot to follow quad', token);\n    return this._readInTopContext;\n  }\n\n  // ### `_readPrefix` reads the prefix of a prefix declaration\n  _readPrefix(token) {\n    if (token.type !== 'prefix')\n      return this._error('Expected prefix to follow @prefix', token);\n    this._prefix = token.value;\n    return this._readPrefixIRI;\n  }\n\n  // ### `_readPrefixIRI` reads the IRI of a prefix declaration\n  _readPrefixIRI(token) {\n    if (token.type !== 'IRI')\n      return this._error(`Expected IRI to follow prefix \"${this._prefix}:\"`, token);\n    const prefixNode = this._readEntity(token);\n    this._prefixes[this._prefix] = prefixNode.value;\n    this._prefixCallback(this._prefix, prefixNode);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readBaseIRI` reads the IRI of a base declaration\n  _readBaseIRI(token) {\n    const iri = token.type === 'IRI' && this._resolveIRI(token.value);\n    if (!iri)\n      return this._error('Expected valid IRI to follow base declaration', token);\n    this._setBase(iri);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readNamedGraphLabel` reads the label of a named graph\n  _readNamedGraphLabel(token) {\n    switch (token.type) {\n    case 'IRI':\n    case 'blank':\n    case 'prefixed':\n      return this._readSubject(token), this._readGraph;\n    case '[':\n      return this._readNamedGraphBlankLabel;\n    default:\n      return this._error('Invalid graph label', token);\n    }\n  }\n\n  // ### `_readNamedGraphLabel` reads a blank node label of a named graph\n  _readNamedGraphBlankLabel(token) {\n    if (token.type !== ']')\n      return this._error('Invalid graph label', token);\n    this._subject = this._blankNode();\n    return this._readGraph;\n  }\n\n  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration\n  _readDeclarationPunctuation(token) {\n    // SPARQL-style declarations don't have punctuation\n    if (this._sparqlStyle) {\n      this._sparqlStyle = false;\n      return this._readInTopContext(token);\n    }\n\n    if (token.type !== '.')\n      return this._error('Expected declaration to end with a dot', token);\n    return this._readInTopContext;\n  }\n\n  // Reads a list of quantified symbols from a @forSome or @forAll statement\n  _readQuantifierList(token) {\n    let entity;\n    switch (token.type) {\n    case 'IRI':\n    case 'prefixed':\n      if ((entity = this._readEntity(token, true)) !== undefined)\n        break;\n    default:\n      return this._error(`Unexpected ${token.type}`, token);\n    }\n    // Without explicit quantifiers, map entities to a quantified entity\n    if (!this._explicitQuantifiers)\n      this._quantified[entity.id] = this._quantifier(this._blankNode().value);\n    // With explicit quantifiers, output the reified quantifier\n    else {\n      // If this is the first item, start a new quantifier list\n      if (this._subject === null)\n        this._emit(this._graph || this.DEFAULTGRAPH, this._predicate,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Otherwise, continue the previous list\n      else\n        this._emit(this._subject, this.RDF_REST,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Output the list item\n      this._emit(this._subject, this.RDF_FIRST, entity, this.QUANTIFIERS_GRAPH);\n    }\n    return this._readQuantifierPunctuation;\n  }\n\n  // Reads punctuation from a @forSome or @forAll statement\n  _readQuantifierPunctuation(token) {\n    // Read more quantifiers\n    if (token.type === ',')\n      return this._readQuantifierList;\n    // End of the quantifier list\n    else {\n      // With explicit quantifiers, close the quantifier list\n      if (this._explicitQuantifiers) {\n        this._emit(this._subject, this.RDF_REST, this.RDF_NIL, this.QUANTIFIERS_GRAPH);\n        this._subject = null;\n      }\n      // Read a dot\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(token);\n    }\n  }\n\n  // ### `_getPathReader` reads a potential path and then resumes with the given function\n  _getPathReader(afterPath) {\n    this._afterPath = afterPath;\n    return this._readPath;\n  }\n\n  // ### `_readPath` reads a potential path\n  _readPath(token) {\n    switch (token.type) {\n    // Forward path\n    case '!': return this._readForwardPath;\n    // Backward path\n    case '^': return this._readBackwardPath;\n    // Not a path; resume reading where we left off\n    default:\n      const stack = this._contextStack, parent = stack.length && stack[stack.length - 1];\n      // If we were reading a list item, we still need to output it\n      if (parent && parent.type === 'item') {\n        // The list item is the remaining subejct after reading the path\n        const item = this._subject;\n        // Switch back to the context of the list\n        this._restoreContext();\n        // Output the list item\n        this._emit(this._subject, this.RDF_FIRST, item, this._graph);\n      }\n      return this._afterPath(token);\n    }\n  }\n\n  // ### `_readForwardPath` reads a '!' path\n  _readForwardPath(token) {\n    let subject, predicate;\n    const object = this._blankNode();\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's object\n    if (this._predicate === null)\n      subject = this._subject, this._subject = object;\n    // If we were reading an object, replace the subject by the path's object\n    else\n      subject = this._object,  this._object  = object;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readBackwardPath` reads a '^' path\n  _readBackwardPath(token) {\n    const subject = this._blankNode();\n    let predicate, object;\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's subject\n    if (this._predicate === null)\n      object = this._subject, this._subject = subject;\n    // If we were reading an object, replace the subject by the path's subject\n    else\n      object = this._object,  this._object  = subject;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readRDFStarTailOrGraph` reads the graph of a nested RDF* quad or the end of a nested RDF* triple\n  _readRDFStarTailOrGraph(token) {\n    if (token.type !== '>>') {\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (this._graph = this._readEntity(token)) !== undefined)\n        return this._readRDFStarTail;\n      return this._error(`Expected >> to follow \"${this._object.id}\"`, token);\n    }\n    return this._readRDFStarTail(token);\n  }\n\n  // ### `_readRDFStarTail` reads the end of a nested RDF* triple\n  _readRDFStarTail(token) {\n    if (token.type !== '>>')\n      return this._error(`Expected >> but got ${token.type}`, token);\n    // Read the quad and restore the previous context\n    const quad = this._quad(this._subject, this._predicate, this._object,\n      this._graph || this.DEFAULTGRAPH);\n    this._restoreContext();\n    // If the triple was the subject, continue by reading the predicate.\n    if (this._subject === null) {\n      this._subject = quad;\n      return this._readPredicate;\n    }\n    // If the triple was the object, read context end.\n    else {\n      this._object = quad;\n      return this._getContextEndReader();\n    }\n  }\n\n  // ### `_getContextEndReader` gets the next reader function at the end of a context\n  _getContextEndReader() {\n    const contextStack = this._contextStack;\n    if (!contextStack.length)\n      return this._readPunctuation;\n\n    switch (contextStack[contextStack.length - 1].type) {\n    case 'blank':\n      return this._readBlankNodeTail;\n    case 'list':\n      return this._readListItem;\n    case 'formula':\n      return this._readFormulaTail;\n    case '<<':\n      return this._readRDFStarTailOrGraph;\n    }\n  }\n\n  // ### `_emit` sends a quad through the callback\n  _emit(subject, predicate, object, graph) {\n    this._callback(null, this._quad(subject, predicate, object, graph || this.DEFAULTGRAPH));\n  }\n\n  // ### `_error` emits an error message through the callback\n  _error(message, token) {\n    const err = new Error(`${message} on line ${token.line}.`);\n    err.context = {\n      token: token,\n      line: token.line,\n      previousToken: this._lexer.previousToken,\n    };\n    this._callback(err);\n    this._callback = noop;\n  }\n\n  // ### `_resolveIRI` resolves an IRI against the base path\n  _resolveIRI(iri) {\n    return /^[a-z][a-z0-9+.-]*:/i.test(iri) ? iri : this._resolveRelativeIRI(iri);\n  }\n\n  // ### `_resolveRelativeIRI` resolves an IRI against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative\n  _resolveRelativeIRI(iri) {\n    // An empty relative IRI indicates the base IRI\n    if (!iri.length)\n      return this._base;\n    // Decide resolving strategy based in the first character\n    switch (iri[0]) {\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return this._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return this._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      // Relative IRIs cannot contain a colon in the first path segment\n      return (/^[^/:]*:/.test(iri)) ? null : this._removeDotSegments(this._basePath + iri);\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986\n  _removeDotSegments(iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!/(^|\\/)\\.\\.?($|[/#?])/.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    const length = iri.length;\n    let result = '', i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return `${result}/${iri.substr(i + 1)}`;\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  // ## Public methods\n\n  // ### `parse` parses the N3 input and emits each parsed quad through the callback\n  parse(input, quadCallback, prefixCallback) {\n    // The read callback is the next function to be executed when a token arrives.\n    // We start reading in the top context.\n    this._readCallback = this._readInTopContext;\n    this._sparqlStyle = false;\n    this._prefixes = Object.create(null);\n    this._prefixes._ = this._blankNodePrefix ? this._blankNodePrefix.substr(2)\n                                             : `b${blankNodePrefix++}_`;\n    this._prefixCallback = prefixCallback || noop;\n    this._inversePredicate = false;\n    this._quantified = Object.create(null);\n\n    // Parse synchronously if no quad callback is given\n    if (!quadCallback) {\n      const quads = [];\n      let error;\n      this._callback = (e, t) => { e ? (error = e) : t && quads.push(t); };\n      this._lexer.tokenize(input).every(token => {\n        return this._readCallback = this._readCallback(token);\n      });\n      if (error) throw error;\n      return quads;\n    }\n\n    // Parse asynchronously otherwise, executing the read callback when a token arrives\n    this._callback = quadCallback;\n    this._lexer.tokenize(input, (error, token) => {\n      if (error !== null)\n        this._callback(error), this._callback = noop;\n      else if (this._readCallback)\n        this._readCallback = this._readCallback(token);\n    });\n  }\n}\n\n// The empty function\nfunction noop() {}\n\n// Initializes the parser with the given data factory\nfunction initDataFactory(parser, factory) {\n  // Set factory methods\n  const namedNode = factory.namedNode;\n  parser._namedNode   = namedNode;\n  parser._blankNode   = factory.blankNode;\n  parser._literal     = factory.literal;\n  parser._variable    = factory.variable;\n  parser._quad        = factory.quad;\n  parser.DEFAULTGRAPH = factory.defaultGraph();\n\n  // Set common named nodes\n  parser.RDF_FIRST  = namedNode(namespaces.rdf.first);\n  parser.RDF_REST   = namedNode(namespaces.rdf.rest);\n  parser.RDF_NIL    = namedNode(namespaces.rdf.nil);\n  parser.N3_FORALL  = namedNode(namespaces.r.forAll);\n  parser.N3_FORSOME = namedNode(namespaces.r.forSome);\n  parser.ABBREVIATIONS = {\n    'a': namedNode(namespaces.rdf.type),\n    '=': namedNode(namespaces.owl.sameAs),\n    '>': namedNode(namespaces.log.implies),\n  };\n  parser.QUANTIFIERS_GRAPH = namedNode('urn:n3:quantifiers');\n}\ninitDataFactory(N3Parser.prototype, N3DataFactory);\n","// **N3Writer** writes N3 documents.\nimport namespaces from './IRIs';\nimport { default as N3DataFactory, Term } from './N3DataFactory';\nimport { isDefaultGraph } from './N3Util';\n\nconst DEFAULTGRAPH = N3DataFactory.defaultGraph();\n\nconst { rdf, xsd } = namespaces;\n\n// Characters in literals that require escaping\nconst escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapedCharacters = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n// ## Placeholder class to represent already pretty-printed terms\nclass SerializedTerm extends Term {\n  // Pretty-printed nodes are not equal to any other node\n  // (e.g., [] does not equal [])\n  equals() {\n    return false;\n  }\n}\n\n// ## Constructor\nexport default class N3Writer {\n  constructor(outputStream, options) {\n    // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n    this._prefixRegex = /$0^/;\n\n    // Shift arguments if the first argument is not a stream\n    if (outputStream && typeof outputStream.write !== 'function')\n      options = outputStream, outputStream = null;\n    options = options || {};\n    this._lists = options.lists;\n\n    // If no output stream given, send the output as string through the end callback\n    if (!outputStream) {\n      let output = '';\n      this._outputStream = {\n        write(chunk, encoding, done) { output += chunk; done && done(); },\n        end: done => { done && done(null, output); },\n      };\n      this._endStream = true;\n    }\n    else {\n      this._outputStream = outputStream;\n      this._endStream = options.end === undefined ? true : !!options.end;\n    }\n\n    // Initialize writer, depending on the format\n    this._subject = null;\n    if (!(/triple|quad/i).test(options.format)) {\n      this._lineMode = false;\n      this._graph = DEFAULTGRAPH;\n      this._baseIRI = options.baseIRI;\n      this._prefixIRIs = Object.create(null);\n      options.prefixes && this.addPrefixes(options.prefixes);\n    }\n    else {\n      this._lineMode = true;\n      this._writeQuad = this._writeQuadLine;\n    }\n  }\n\n  // ## Private methods\n\n  // ### Whether the current graph is the default graph\n  get _inDefaultGraph() {\n    return DEFAULTGRAPH.equals(this._graph);\n  }\n\n  // ### `_write` writes the argument to the output stream\n  _write(string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  }\n\n  // ### `_writeQuad` writes the quad to the output stream\n  _writeQuad(subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (!graph.equals(this._graph)) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._inDefaultGraph ? '.\\n' : '\\n}\\n')) +\n                    (DEFAULTGRAPH.equals(graph) ? '' : `${this._encodeIriOrBlank(graph)} {\\n`));\n        this._graph = graph;\n        this._subject = null;\n      }\n      // Don't repeat the subject if it's the same\n      if (subject.equals(this._subject)) {\n        // Don't repeat the predicate if it's the same\n        if (predicate.equals(this._predicate))\n          this._write(`, ${this._encodeObject(object)}`, done);\n        // Same subject, different predicate\n        else\n          this._write(`;\\n    ${\n                      this._encodePredicate(this._predicate = predicate)} ${\n                      this._encodeObject(object)}`, done);\n      }\n      // Different subject; write the whole quad\n      else\n        this._write(`${(this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject)} ${\n                    this._encodePredicate(this._predicate = predicate)} ${\n                    this._encodeObject(object)}`, done);\n    }\n    catch (error) { done && done(error); }\n  }\n\n  // ### `_writeQuadLine` writes the quad to the output stream as a single line\n  _writeQuadLine(subject, predicate, object, graph, done) {\n    // Write the quad without prefixes\n    delete this._prefixMatch;\n    this._write(this.quadToString(subject, predicate, object, graph), done);\n  }\n\n  // ### `quadToString` serializes a quad as a string\n  quadToString(subject, predicate, object, graph) {\n    return  `${this._encodeSubject(subject)} ${\n            this._encodeIriOrBlank(predicate)} ${\n            this._encodeObject(object)\n            }${graph && graph.value ? ` ${this._encodeIriOrBlank(graph)} .\\n` : ' .\\n'}`;\n  }\n\n  // ### `quadsToString` serializes an array of quads as a string\n  quadsToString(quads) {\n    return quads.map(t => {\n      return this.quadToString(t.subject, t.predicate, t.object, t.graph);\n    }).join('');\n  }\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject(entity) {\n    return entity.termType === 'Quad' ?\n      this._encodeQuad(entity) : this._encodeIriOrBlank(entity);\n  }\n\n  // ### `_encodeIriOrBlank` represents an IRI or blank node\n  _encodeIriOrBlank(entity) {\n    // A blank node or list is represented as-is\n    if (entity.termType !== 'NamedNode') {\n      // If it is a list head, pretty-print it\n      if (this._lists && (entity.value in this._lists))\n        entity = this.list(this._lists[entity.value]);\n      return 'id' in entity ? entity.id : `_:${entity.value}`;\n    }\n    let iri = entity.value;\n    // Use relative IRIs if requested and possible\n    if (this._baseIRI && iri.startsWith(this._baseIRI))\n      iri = iri.substr(this._baseIRI.length);\n    // Escape special characters\n    if (escape.test(iri))\n      iri = iri.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    const prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? `<${iri}>` :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  }\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral(literal) {\n    // Escape special characters\n    let value = literal.value;\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n\n    // Write a language-tagged literal\n    if (literal.language)\n      return `\"${value}\"@${literal.language}`;\n\n    // Write dedicated literals per data type\n    if (this._lineMode) {\n      // Only abbreviate strings in N-Triples or N-Quads\n      if (literal.datatype.value === xsd.string)\n        return `\"${value}\"`;\n    }\n    else {\n      // Use common datatype abbreviations in Turtle or TriG\n      switch (literal.datatype.value) {\n      case xsd.string:\n        return `\"${value}\"`;\n      case xsd.boolean:\n        if (value === 'true' || value === 'false')\n          return value;\n        break;\n      case xsd.integer:\n        if (/^[+-]?\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.decimal:\n        if (/^[+-]?\\d*\\.\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.double:\n        if (/^[+-]?(?:\\d+\\.\\d*|\\.?\\d+)[eE][+-]?\\d+$/.test(value))\n          return value;\n        break;\n      }\n    }\n\n    // Write a regular datatyped literal\n    return `\"${value}\"^^${this._encodeIriOrBlank(literal.datatype)}`;\n  }\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate(predicate) {\n    return predicate.value === rdf.type ? 'a' : this._encodeIriOrBlank(predicate);\n  }\n\n  // ### `_encodeObject` represents an object\n  _encodeObject(object) {\n    switch (object.termType) {\n    case 'Quad':\n      return this._encodeQuad(object);\n    case 'Literal':\n      return this._encodeLiteral(object);\n    default:\n      return this._encodeIriOrBlank(object);\n    }\n  }\n\n  // ### `_encodeQuad` encodes an RDF* quad\n  _encodeQuad({ subject, predicate, object, graph }) {\n    return `<<${\n      this._encodeSubject(subject)} ${\n      this._encodePredicate(predicate)} ${\n      this._encodeObject(object)}${\n      isDefaultGraph(graph) ? '' : ` ${this._encodeIriOrBlank(graph)}`}>>`;\n  }\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite() {\n    throw new Error('Cannot write because the writer has been closed.');\n  }\n\n  // ### `addQuad` adds the quad to the output stream\n  addQuad(subject, predicate, object, graph, done) {\n    // The quad was given as an object, so shift parameters\n    if (object === undefined)\n      this._writeQuad(subject.subject, subject.predicate, subject.object, subject.graph, predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph === 'function')\n      this._writeQuad(subject, predicate, object, DEFAULTGRAPH, graph);\n    // The `graph` parameter was provided\n    else\n      this._writeQuad(subject, predicate, object, graph || DEFAULTGRAPH, done);\n  }\n\n  // ### `addQuads` adds the quads to the output stream\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix(prefix, iri, done) {\n    const prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  }\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes(prefixes, done) {\n    // Ignore prefixes if not supported by the serialization\n    if (!this._prefixIRIs)\n      return done && done();\n\n    // Write all new prefixes\n    let hasPrefixes = false;\n    for (let prefix in prefixes) {\n      let iri = prefixes[prefix];\n      if (typeof iri !== 'string')\n        iri = iri.value;\n      hasPrefixes = true;\n      // Finish a possible pending quad\n      if (this._subject !== null) {\n        this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n        this._subject = null, this._graph = '';\n      }\n      // Store and write the prefix\n      this._prefixIRIs[iri] = (prefix += ':');\n      this._write(`@prefix ${prefix} <${iri}>.\\n`);\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      let IRIlist = '', prefixList = '';\n      for (const prefixIRI in this._prefixIRIs) {\n        IRIlist += IRIlist ? `|${prefixIRI}` : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + this._prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp(`^(?:${prefixList})[^\\/]*$|` +\n                                     `^(${IRIlist})([a-zA-Z][\\\\-_a-zA-Z0-9]*)$`);\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  }\n\n  // ### `blank` creates a blank node with the given content\n  blank(predicate, object) {\n    let children = predicate, child, length;\n    // Empty blank node\n    if (predicate === undefined)\n      children = [];\n    // Blank node passed as blank(Term(\"predicate\"), Term(\"object\"))\n    else if (predicate.termType)\n      children = [{ predicate: predicate, object: object }];\n    // Blank node passed as blank({ predicate: predicate, object: object })\n    else if (!('length' in predicate))\n      children = [predicate];\n\n    switch (length = children.length) {\n    // Generate an empty blank node\n    case 0:\n      return new SerializedTerm('[]');\n    // Generate a non-nested one-triple blank node\n    case 1:\n      child = children[0];\n      if (!(child.object instanceof SerializedTerm))\n        return new SerializedTerm(`[ ${this._encodePredicate(child.predicate)} ${\n                                  this._encodeObject(child.object)} ]`);\n    // Generate a multi-triple or nested blank node\n    default:\n      let contents = '[';\n      // Write all triples in order\n      for (let i = 0; i < length; i++) {\n        child = children[i];\n        // Write only the object is the predicate is the same as the previous\n        if (child.predicate.equals(predicate))\n          contents += `, ${this._encodeObject(child.object)}`;\n        // Otherwise, write the predicate and the object\n        else {\n          contents += `${(i ? ';\\n  ' : '\\n  ') +\n                      this._encodePredicate(child.predicate)} ${\n                      this._encodeObject(child.object)}`;\n          predicate = child.predicate;\n        }\n      }\n      return new SerializedTerm(`${contents}\\n]`);\n    }\n  }\n\n  // ### `list` creates a list node with the given content\n  list(elements) {\n    const length = elements && elements.length || 0, contents = new Array(length);\n    for (let i = 0; i < length; i++)\n      contents[i] = this._encodeObject(elements[i]);\n    return new SerializedTerm(`(${contents.join(' ')})`);\n  }\n\n  // ### `end` signals the end of the output stream\n  end(done) {\n    // Finish a possible pending quad\n    if (this._subject !== null) {\n      this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    let singleDone = done && ((error, result) => { singleDone = null, done(error, result); });\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  }\n}\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  let result = escapedCharacters[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n","// **N3Store** objects store N3 quads by graph in memory.\nimport { default as N3DataFactory, termToId, termFromId } from './N3DataFactory';\nimport { Readable } from 'readable-stream';\nimport namespaces from './IRIs';\n\n// ## Constructor\nexport default class N3Store {\n  constructor(quads, options) {\n    // The number of quads is initially zero\n    this._size = 0;\n    // `_graphs` contains subject, predicate, and object indexes per graph\n    this._graphs = Object.create(null);\n    // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n    // saving memory by using only numbers as keys in `_graphs`\n    this._id = 0;\n    this._ids = Object.create(null);\n    this._ids['><'] = 0; // dummy entry, so the first actual key is non-zero\n    this._entities = Object.create(null); // inverse of `_ids`\n    // `_blankNodeIndex` is the index of the last automatically named blank node\n    this._blankNodeIndex = 0;\n\n    // Shift parameters if `quads` is not given\n    if (!options && quads && !quads[0])\n      options = quads, quads = null;\n    options = options || {};\n    this._factory = options.factory || N3DataFactory;\n\n    // Add quads if passed\n    if (quads)\n      this.addQuads(quads);\n  }\n\n  // ## Public properties\n\n  // ### `size` returns the number of quads in the store\n  get size() {\n    // Return the quad count if if was cached\n    let size = this._size;\n    if (size !== null)\n      return size;\n\n    // Calculate the number of quads by counting to the deepest level\n    size = 0;\n    const graphs = this._graphs;\n    let subjects, subject;\n    for (const graphKey in graphs)\n      for (const subjectKey in (subjects = graphs[graphKey].subjects))\n        for (const predicateKey in (subject = subjects[subjectKey]))\n          size += Object.keys(subject[predicateKey]).length;\n    return this._size = size;\n  }\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a quad to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex(index0, key0, key1, key2) {\n    // Create layers as necessary\n    const index1 = index0[key0] || (index0[key0] = {});\n    const index2 = index1[key1] || (index1[key1] = {});\n    // Setting the key to _any_ value signals the presence of the quad\n    const existed = key2 in index2;\n    if (!existed)\n      index2[key2] = null;\n    return !existed;\n  }\n\n  // ### `_removeFromIndex` removes a quad from a three-layered index\n  _removeFromIndex(index0, key0, key1, key2) {\n    // Remove the quad from the index\n    const index1 = index0[key0], index2 = index1[key1];\n    delete index2[key2];\n\n    // Remove intermediary index layers if they are empty\n    for (const key in index2) return;\n    delete index1[key1];\n    for (const key in index1) return;\n    delete index0[key0];\n  }\n\n  // ### `_findInIndex` finds a set of quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting quad\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graph` will be the graph of the created quads.\n  // If `callback` is given, each result is passed through it\n  // and iteration halts when it returns truthy for any quad.\n  // If instead `array` is given, each result is added to the array.\n  _findInIndex(index0, key0, key1, key2, name0, name1, name2, graph, callback, array) {\n    let tmp, index1, index2;\n    // Depending on the number of variables, keys or reverse index are faster\n    const varCount = !key0 + !key1 + !key2,\n        entityKeys = varCount > 1 ? Object.keys(this._ids) : this._entities;\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      const entity0 = entityKeys[value0];\n\n      if (index1 = index0[value0]) {\n        // If a key is specified, use only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          const entity1 = entityKeys[value1];\n\n          if (index2 = index1[value1]) {\n            // If a key is specified, use only that part of index 2, if it exists.\n            const values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n            // Create quads for all items found in index 2.\n            for (let l = 0; l < values.length; l++) {\n              const parts = { subject: null, predicate: null, object: null };\n              parts[name0] = termFromId(entity0, this._factory);\n              parts[name1] = termFromId(entity1, this._factory);\n              parts[name2] = termFromId(entityKeys[values[l]], this._factory);\n              const quad = this._factory.quad(\n                parts.subject, parts.predicate, parts.object, termFromId(graph, this._factory));\n              if (array)\n                array.push(quad);\n              else if (callback(quad))\n                return true;\n            }\n          }\n        }\n      }\n    }\n    return array;\n  }\n\n  // ### `_loop` executes the callback on all keys of index 0\n  _loop(index0, callback) {\n    for (const key0 in index0)\n      callback(key0);\n  }\n\n  // ### `_loopByKey0` executes the callback on all keys of a certain entry in index 0\n  _loopByKey0(index0, key0, callback) {\n    let index1, key1;\n    if (index1 = index0[key0]) {\n      for (key1 in index1)\n        callback(key1);\n    }\n  }\n\n  // ### `_loopByKey1` executes the callback on given keys of all entries in index 0\n  _loopByKey1(index0, key1, callback) {\n    let key0, index1;\n    for (key0 in index0) {\n      index1 = index0[key0];\n      if (index1[key1])\n        callback(key0);\n    }\n  }\n\n  // ### `_loopBy2Keys` executes the callback on given keys of certain entries in index 2\n  _loopBy2Keys(index0, key0, key1, callback) {\n    let index1, index2, key2;\n    if ((index1 = index0[key0]) && (index2 = index1[key1])) {\n      for (key2 in index2)\n        callback(key2);\n    }\n  }\n\n  // ### `_countInIndex` counts matching quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  _countInIndex(index0, key0, key1, key2) {\n    let count = 0, tmp, index1, index2;\n\n    // If a key is specified, count only that part of index 0\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      if (index1 = index0[value0]) {\n        // If a key is specified, count only that part of index 1\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          if (index2 = index1[value1]) {\n            // If a key is specified, count the quad if it exists\n            if (key2) (key2 in index2) && count++;\n            // Otherwise, count all quads\n            else count += Object.keys(index2).length;\n          }\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `_getGraphs` returns an array with the given graph,\n  // or all graphs if the argument is null or undefined.\n  _getGraphs(graph) {\n    if (!isString(graph))\n      return this._graphs;\n    const graphs = {};\n    graphs[graph] = this._graphs[graph];\n    return graphs;\n  }\n\n  // ### `_uniqueEntities` returns a function that accepts an entity ID\n  // and passes the corresponding entity to callback if it hasn't occurred before.\n  _uniqueEntities(callback) {\n    const uniqueIds = Object.create(null);\n    return id => {\n      if (!(id in uniqueIds)) {\n        uniqueIds[id] = true;\n        callback(termFromId(this._entities[id], this._factory));\n      }\n    };\n  }\n\n  // ## Public methods\n\n  // ### `add` adds the specified quad to the dataset.\n  // Returns the dataset instance it was called on.\n  // Existing quads, as defined in Quad.equals, will be ignored.\n  add(quad) {\n    this.addQuad(quad);\n    return this;\n  }\n\n  // ### `addQuad` adds a new quad to the store.\n  // Returns if the quad index has changed, if the quad did not already exist.\n  addQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find the graph that will contain the triple\n    let graphItem = this._graphs[graph];\n    // Create the graph if it doesn't exist yet\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway\n      Object.freeze(graphItem);\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    const ids = this._ids;\n    const entities = this._entities;\n    subject   = ids[subject]   || (ids[entities[++this._id] = subject]   = this._id);\n    predicate = ids[predicate] || (ids[entities[++this._id] = predicate] = this._id);\n    object    = ids[object]    || (ids[entities[++this._id] = object]    = this._id);\n\n    const changed = this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\n    // The cached quad count is now invalid\n    this._size = null;\n    return changed;\n  }\n\n  // ### `addQuads` adds multiple quads to the store\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `delete` removes the specified quad from the dataset.\n  // Returns the dataset instance it was called on.\n  delete(quad) {\n    this.removeQuad(quad);\n    return this;\n  }\n\n  // ### `has` determines whether a dataset includes a certain quad.\n  // Returns true or false as appropriate.\n  has(quad) {\n    const quads = this.getQuads(quad.subject, quad.predicate, quad.object, quad.graph);\n    return quads.length !== 0;\n  }\n\n  // ### `import` adds a stream of quads to the store\n  import(stream) {\n    stream.on('data', quad => { this.addQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeQuad` removes a quad from the store if it exists\n  removeQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find internal identifiers for all components\n    // and verify the quad exists.\n    const ids = this._ids, graphs = this._graphs;\n    let graphItem, subjects, predicates;\n    if (!(subject    = ids[subject]) || !(predicate = ids[predicate]) ||\n        !(object     = ids[object])  || !(graphItem = graphs[graph])  ||\n        !(subjects   = graphItem.subjects[subject]) ||\n        !(predicates = subjects[predicate]) ||\n        !(object in predicates))\n      return false;\n\n    // Remove it from all indexes\n    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n    if (this._size !== null) this._size--;\n\n    // Remove the graph if it is empty\n    for (subject in graphItem.subjects) return true;\n    delete graphs[graph];\n    return true;\n  }\n\n  // ### `removeQuads` removes multiple quads from the store\n  removeQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.removeQuad(quads[i]);\n  }\n\n  // ### `remove` removes a stream of quads from the store\n  remove(stream) {\n    stream.on('data', quad => { this.removeQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeMatches` removes all matching quads from the store\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  removeMatches(subject, predicate, object, graph) {\n    const stream = new Readable({ objectMode: true });\n\n    stream._read = () => {\n      for (const quad of this.getQuads(subject, predicate, object, graph))\n        stream.push(quad);\n      stream.push(null);\n    };\n\n    return this.remove(stream);\n  }\n\n  // ### `deleteGraph` removes all triples with the given graph from the store\n  deleteGraph(graph) {\n    return this.removeMatches(null, null, null, graph);\n  }\n\n  // ### `getQuads` returns an array of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const quads = [], graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return quads;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the object index will be the fastest\n            this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                              'object', 'subject', 'predicate', graphId, null, quads);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            this._findInIndex(content.subjects, subjectId, predicateId, null,\n                              'subject', 'predicate', 'object', graphId, null, quads);\n        }\n        else if (predicateId)\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          this._findInIndex(content.predicates, predicateId, objectId, null,\n                            'predicate', 'object', 'subject', graphId, null, quads);\n        else if (objectId)\n          // If only object is given, the object index will be the fastest\n          this._findInIndex(content.objects, objectId, null, null,\n                            'object', 'subject', 'predicate', graphId, null, quads);\n        else\n          // If nothing is given, iterate subjects and predicates first\n          this._findInIndex(content.subjects, null, null, null,\n                            'subject', 'predicate', 'object', graphId, null, quads);\n      }\n    }\n    return quads;\n  }\n\n  // ### `match` returns a new dataset that is comprised of all quads in the current instance matching the given arguments.\n  // The logic described in Quad Matching is applied for each quad in this dataset to check if it should be included in the output dataset.\n  // Note: This method always returns a new DatasetCore, even if that dataset contains no quads.\n  // Note: Since a DatasetCore is an unordered set, the order of the quads within the returned sequence is arbitrary.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  // For backwards compatibility, the object return also implements the Readable stream interface.\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this, subject, predicate, object, graph);\n  }\n\n  // ### `countQuads` returns the number of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  countQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let count = 0, content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return 0;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subject) {\n          if (object)\n            // If subject and object are given, the object index will be the fastest\n            count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            count += this._countInIndex(content.subjects, subjectId, predicateId, objectId);\n        }\n        else if (predicate) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          count += this._countInIndex(content.predicates, predicateId, objectId, subjectId);\n        }\n        else {\n          // If only object is possibly given, the object index will be the fastest\n          count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `forEach` executes the callback on all quads.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forEach(callback, subject, predicate, object, graph) {\n    this.some(quad => {\n      callback(quad);\n      return false;\n    }, subject, predicate, object, graph);\n  }\n\n  // ### `every` executes the callback on all quads,\n  // and returns `true` if it returns truthy for all them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  every(callback, subject, predicate, object, graph) {\n    let some = false;\n    const every = !this.some(quad => {\n      some = true;\n      return !callback(quad);\n    }, subject, predicate, object, graph);\n    return some && every;\n  }\n\n  // ### `some` executes the callback on all quads,\n  // and returns `true` if it returns truthy for any of them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  some(callback, subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return false;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId) {\n          // If subject and object are given, the object index will be the fastest\n            if (this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                                  'object', 'subject', 'predicate', graphId, callback, null))\n              return true;\n          }\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            if (this._findInIndex(content.subjects, subjectId, predicateId, null,\n                                  'subject', 'predicate', 'object', graphId, callback, null))\n              return true;\n        }\n        else if (predicateId) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          if (this._findInIndex(content.predicates, predicateId, objectId, null,\n                                'predicate', 'object', 'subject', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else if (objectId) {\n          // If only object is given, the object index will be the fastest\n          if (this._findInIndex(content.objects, objectId, null, null,\n                                'object', 'subject', 'predicate', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else\n        // If nothing is given, iterate subjects and predicates first\n        if (this._findInIndex(content.subjects, null, null, null,\n                              'subject', 'predicate', 'object', graphId, callback, null)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  // ### `getSubjects` returns all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getSubjects(predicate, object, graph) {\n    const results = [];\n    this.forSubjects(s => { results.push(s); }, predicate, object, graph);\n    return results;\n  }\n\n  // ### `forSubjects` executes the callback on all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forSubjects(callback, predicate, object, graph) {\n    // Convert terms to internal string representation\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, predicateId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (predicateId) {\n          if (objectId)\n            // If predicate and object are given, the POS index is best.\n            this._loopBy2Keys(content.predicates, predicateId, objectId, callback);\n          else\n            // If only predicate is given, the SPO index is best.\n            this._loopByKey1(content.subjects, predicateId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the OSP index is best.\n          this._loopByKey0(content.objects, objectId, callback);\n        else\n          // If no params given, iterate all the subjects\n          this._loop(content.subjects, callback);\n      }\n    }\n  }\n\n  // ### `getPredicates` returns all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getPredicates(subject, object, graph) {\n    const results = [];\n    this.forPredicates(p => { results.push(p); }, subject, object, graph);\n    return results;\n  }\n\n  // ### `forPredicates` executes the callback on all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forPredicates(callback, subject, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject) && !(subjectId = ids[subject]) ||\n        isString(object)  && !(objectId  = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the OSP index is best.\n            this._loopBy2Keys(content.objects, objectId, subjectId, callback);\n          else\n            // If only subject is given, the SPO index is best.\n            this._loopByKey0(content.subjects, subjectId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the POS index is best.\n          this._loopByKey1(content.predicates, objectId, callback);\n        else\n          // If no params given, iterate all the predicates.\n          this._loop(content.predicates, callback);\n      }\n    }\n  }\n\n  // ### `getObjects` returns all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getObjects(subject, predicate, graph) {\n    const results = [];\n    this.forObjects(o => { results.push(o); }, subject, predicate, graph);\n    return results;\n  }\n\n  // ### `forObjects` executes the callback on all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forObjects(callback, subject, predicate, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, predicateId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject]) ||\n        isString(predicate) && !(predicateId = ids[predicate]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (predicateId)\n            // If subject and predicate are given, the SPO index is best.\n            this._loopBy2Keys(content.subjects, subjectId, predicateId, callback);\n          else\n            // If only subject is given, the OSP index is best.\n            this._loopByKey1(content.objects, subjectId, callback);\n        }\n        else if (predicateId)\n          // If only predicate is given, the POS index is best.\n          this._loopByKey0(content.predicates, predicateId, callback);\n        else\n          // If no params given, iterate all the objects.\n          this._loop(content.objects, callback);\n      }\n    }\n  }\n\n  // ### `getGraphs` returns all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getGraphs(subject, predicate, object) {\n    const results = [];\n    this.forGraphs(g => { results.push(g); }, subject, predicate, object);\n    return results;\n  }\n\n  // ### `forGraphs` executes the callback on all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forGraphs(callback, subject, predicate, object) {\n    for (const graph in this._graphs) {\n      this.some(quad => {\n        callback(quad.graph);\n        return true; // Halt iteration of some()\n      }, subject, predicate, object, graph);\n    }\n  }\n\n  // ### `createBlankNode` creates a new blank node, returning its name\n  createBlankNode(suggestedName) {\n    let name, index;\n    // Generate a name based on the suggested name\n    if (suggestedName) {\n      name = suggestedName = `_:${suggestedName}`, index = 1;\n      while (this._ids[name])\n        name = suggestedName + index++;\n    }\n    // Generate a generic blank node name\n    else {\n      do { name = `_:b${this._blankNodeIndex++}`; }\n      while (this._ids[name]);\n    }\n    // Add the blank node to the entities, avoiding the generation of duplicates\n    this._ids[name] = ++this._id;\n    this._entities[this._id] = name;\n    return this._factory.blankNode(name.substr(2));\n  }\n\n  // ### `extractLists` finds and removes all list triples\n  // and returns the items per list.\n  extractLists({ remove = false, ignoreErrors = false } = {}) {\n    const lists = {}; // has scalar keys so could be a simple Object\n    const onError = ignoreErrors ? (() => true) :\n                  ((node, message) => { throw new Error(`${node.value} ${message}`); });\n\n    // Traverse each list from its tail\n    const tails = this.getQuads(null, namespaces.rdf.rest, namespaces.rdf.nil, null);\n    const toRemove = remove ? [...tails] : [];\n    tails.forEach(tailQuad => {\n      const items = [];             // the members found as objects of rdf:first quads\n      let malformed = false;      // signals whether the current list is malformed\n      let head;                   // the head of the list (_:b1 in above example)\n      let headPos;                // set to subject or object when head is set\n      const graph = tailQuad.graph; // make sure list is in exactly one graph\n\n      // Traverse the list from tail to end\n      let current = tailQuad.subject;\n      while (current && !malformed) {\n        const objectQuads = this.getQuads(null, null, current, null);\n        const subjectQuads = this.getQuads(current, null, null, null);\n        let quad, first = null, rest = null, parent = null;\n\n        // Find the first and rest of this list node\n        for (let i = 0; i < subjectQuads.length && !malformed; i++) {\n          quad = subjectQuads[i];\n          if (!quad.graph.equals(graph))\n            malformed = onError(current, 'not confined to single graph');\n          else if (head)\n            malformed = onError(current, 'has non-list arcs out');\n\n          // one rdf:first\n          else if (quad.predicate.value === namespaces.rdf.first) {\n            if (first)\n              malformed = onError(current, 'has multiple rdf:first arcs');\n            else\n              toRemove.push(first = quad);\n          }\n\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (rest)\n              malformed = onError(current, 'has multiple rdf:rest arcs');\n            else\n              toRemove.push(rest = quad);\n          }\n\n          // alien triple\n          else if (objectQuads.length)\n            malformed = onError(current, 'can\\'t be subject and object');\n          else {\n            head = quad; // e.g. { (1 2 3) :p :o }\n            headPos = 'subject';\n          }\n        }\n\n        // { :s :p (1 2) } arrives here with no head\n        // { (1 2) :p :o } arrives here with head set to the list.\n        for (let i = 0; i < objectQuads.length && !malformed; ++i) {\n          quad = objectQuads[i];\n          if (head)\n            malformed = onError(current, 'can\\'t have coreferences');\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (parent)\n              malformed = onError(current, 'has incoming rdf:rest arcs');\n            else\n              parent = quad;\n          }\n          else {\n            head = quad; // e.g. { :s :p (1 2) }\n            headPos = 'object';\n          }\n        }\n\n        // Store the list item and continue with parent\n        if (!first)\n          malformed = onError(current, 'has no list head');\n        else\n          items.unshift(first.object);\n        current = parent && parent.subject;\n      }\n\n      // Don't remove any quads if the list is malformed\n      if (malformed)\n        remove = false;\n      // Store the list under the value of its head\n      else if (head)\n        lists[head[headPos].value] = items;\n    });\n\n    // Remove list quads if requested\n    if (remove)\n      this.removeQuads(toRemove);\n    return lists;\n  }\n\n  // ### Store is an iterable.\n  // Can be used where iterables are expected: for...of loops, array spread operator,\n  // `yield*`, and destructuring assignment (order is not guaranteed).\n  *[Symbol.iterator]() {\n    yield* this.getQuads();\n  }\n}\n\n// Determines whether the argument is a string\nfunction isString(s) {\n  return typeof s === 'string' || s instanceof String;\n}\n\n/**\n * A class that implements both DatasetCore and Readable.\n */\nclass DatasetCoreAndReadableStream extends Readable {\n  constructor(n3Store, subject, predicate, object, graph) {\n    super({ objectMode: true });\n    Object.assign(this, { n3Store, subject, predicate, object, graph });\n  }\n\n  get filtered() {\n    if (!this._filtered) {\n      const { n3Store, graph, object, predicate, subject } = this;\n      const quads = n3Store.getQuads(subject, predicate, object, graph);\n      this._filtered = new N3Store(quads, { factory: n3Store._factory });\n    }\n    return this._filtered;\n  }\n  get size() {\n    return this.filtered.size;\n  }\n\n  _read() {\n    for (const quad of this.filtered.getQuads())\n      this.push(quad);\n    this.push(null);\n  }\n\n  add(quad) {\n    return this.filtered.add(quad);\n  }\n\n  delete(quad) {\n    return this.filtered.delete(quad);\n  }\n\n  has(quad) {\n    return this.filtered.has(quad);\n  }\n\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this.filtered, subject, predicate, object, graph);\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.filtered.getQuads();\n  }\n}\n","// **N3StreamParser** parses a text stream into a quad stream.\nimport N3Parser from './N3Parser';\nimport { Transform } from 'readable-stream';\n\n// ## Constructor\nexport default class N3StreamParser extends Transform {\n  constructor(options) {\n    super({ decodeStrings: true });\n    this._readableState.objectMode = true;\n\n    // Set up parser with dummy stream to obtain `data` and `end` callbacks\n    const parser = new N3Parser(options);\n    let onData, onEnd;\n    parser.parse({\n      on: (event, callback) => {\n        switch (event) {\n        case 'data': onData = callback; break;\n        case 'end':   onEnd = callback; break;\n        }\n      },\n    },\n      // Handle quads by pushing them down the pipeline\n      (error, quad) => { error && this.emit('error', error) || quad && this.push(quad); },\n      // Emit prefixes through the `prefix` event\n      (prefix, uri) => { this.emit('prefix', prefix, uri); }\n    );\n\n    // Implement Transform methods through parser callbacks\n    this._transform = (chunk, encoding, done) => { onData(chunk); done(); };\n    this._flush = done => { onEnd(); done(); };\n  }\n\n  // ### Parses a stream of strings\n  import(stream) {\n    stream.on('data',  chunk => { this.write(chunk); });\n    stream.on('end',   ()      => { this.end(); });\n    stream.on('error', error => { this.emit('error', error); });\n    return this;\n  }\n}\n","// **N3StreamWriter** serializes a quad stream into a text stream.\nimport { Transform } from 'readable-stream';\nimport N3Writer from './N3Writer';\n\n// ## Constructor\nexport default class N3StreamWriter extends Transform {\n  constructor(options) {\n    super({ encoding: 'utf8', writableObjectMode: true });\n\n    // Set up writer with a dummy stream object\n    const writer = this._writer = new N3Writer({\n      write: (quad, encoding, callback) => { this.push(quad); callback && callback(); },\n      end: callback => { this.push(null); callback && callback(); },\n    }, options);\n\n    // Implement Transform methods on top of writer\n    this._transform = (quad, encoding, done) => { writer.addQuad(quad, done); };\n    this._flush = done => { writer.end(done); };\n  }\n\n// ### Serializes a stream of quads\n  import(stream) {\n    stream.on('data',   quad => { this.write(quad); });\n    stream.on('end',    () => { this.end(); });\n    stream.on('error',  error => { this.emit('error', error); });\n    stream.on('prefix', (prefix, iri) => { this._writer.addPrefix(prefix, iri); });\n    return this;\n  }\n}\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","const RDF  = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    XSD  = 'http://www.w3.org/2001/XMLSchema#',\n    SWAP = 'http://www.w3.org/2000/10/swap/';\n\nexport default {\n  xsd: {\n    decimal: `${XSD}decimal`,\n    boolean: `${XSD}boolean`,\n    double:  `${XSD}double`,\n    integer: `${XSD}integer`,\n    string:  `${XSD}string`,\n  },\n  rdf: {\n    type:       `${RDF}type`,\n    nil:        `${RDF}nil`,\n    first:      `${RDF}first`,\n    rest:       `${RDF}rest`,\n    langString: `${RDF}langString`,\n  },\n  owl: {\n    sameAs: 'http://www.w3.org/2002/07/owl#sameAs',\n  },\n  r: {\n    forSome: `${SWAP}reify#forSome`,\n    forAll:  `${SWAP}reify#forAll`,\n  },\n  log: {\n    implies: `${SWAP}log#implies`,\n  },\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// **N3Lexer** tokenizes N3 documents.\nimport namespaces from './IRIs';\nimport queueMicrotask from 'queue-microtask';\n\nconst { xsd } = namespaces;\n\n// Regular expression and replacement string to escape N3 strings\nconst escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\([^])/g;\nconst escapeReplacements = {\n  '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n  'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n  '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n  '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n  '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n};\nconst illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\nconst lineModeRegExps = {\n  _iri: true,\n  _unescapedIri: true,\n  _simpleQuotedString: true,\n  _langcode: true,\n  _blank: true,\n  _newline: true,\n  _comment: true,\n  _whitespace: true,\n  _endOfFile: true,\n};\nconst invalidRegExp = /$0^/;\n\n// ## Constructor\nexport default class N3Lexer {\n  constructor(options) {\n    // ## Regular expressions\n    // It's slightly faster to have these as properties than as in-scope variables\n    this._iri = /^<((?:[^ <>{}\\\\]|\\\\[uU])+)>[ \\t]*/; // IRI with escape sequences; needs sanity check after unescaping\n    this._unescapedIri = /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>[ \\t]*/; // IRI without escape sequences; no unescaping\n    this._simpleQuotedString = /^\"([^\"\\\\\\r\\n]*)\"(?=[^\"])/; // string without escape sequences\n    this._simpleApostropheString = /^'([^'\\\\\\r\\n]*)'(?=[^'])/;\n    this._langcode = /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i;\n    this._prefix = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/;\n    this._prefixed = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?:[ \\t]+|(?=\\.?[,;!\\^\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._variable = /^\\?(?:(?:[A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=[.,;!\\^\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._blank = /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?:[ \\t]+|(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._number = /^[\\-+]?(?:(\\d+\\.\\d*|\\.?\\d+)[eE][\\-+]?|\\d*(\\.)?)\\d+(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._boolean = /^(?:true|false)(?=[.,;\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._keyword = /^@[a-z]+(?=[\\s#<:])/i;\n    this._sparqlKeyword = /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<])/i;\n    this._shortPredicates = /^a(?=[\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._newline = /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/;\n    this._comment = /#([^\\n\\r]*)/;\n    this._whitespace = /^[ \\t]+/;\n    this._endOfFile = /^(?:#[^\\n\\r]*)?$/;\n    options = options || {};\n\n    // In line mode (N-Triples or N-Quads), only simple features may be parsed\n    if (this._lineMode = !!options.lineMode) {\n      this._n3Mode = false;\n      // Don't tokenize special literals\n      for (const key in this) {\n        if (!(key in lineModeRegExps) && this[key] instanceof RegExp)\n          this[key] = invalidRegExp;\n      }\n    }\n    // When not in line mode, enable N3 functionality by default\n    else {\n      this._n3Mode = options.n3 !== false;\n    }\n    // Don't output comment tokens by default\n    this._comments = !!options.comments;\n    // Cache the last tested closing position of long literals\n    this._literalClosingPos = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback\n  _tokenizeToEnd(callback, inputFinished) {\n    // Continue parsing as far as possible; the loop will return eventually\n    let input = this._input;\n    const outputComments = this._comments;\n    while (true) {\n      // Count and skip whitespace lines\n      let whiteSpaceMatch, comment;\n      while (whiteSpaceMatch = this._newline.exec(input)) {\n        // Try to find a comment\n        if (outputComments && (comment = this._comment.exec(whiteSpaceMatch[0])))\n          callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n        // Advance the input\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n        this._line++;\n      }\n      // Skip whitespace on current line\n      if (!whiteSpaceMatch && (whiteSpaceMatch = this._whitespace.exec(input)))\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\n      // Stop for now if we're at the end\n      if (this._endOfFile.test(input)) {\n        // If the input is finished, emit EOF\n        if (inputFinished) {\n          // Try to find a final comment\n          if (outputComments && (comment = this._comment.exec(input)))\n            callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n          callback(input = null, { line: this._line, type: 'eof', value: '', prefix: '' });\n        }\n        return this._input = input;\n      }\n\n      // Look for specific token types based on the first character\n      const line = this._line, firstChar = input[0];\n      let type = '', value = '', prefix = '',\n          match = null, matchLength = 0, inconclusive = false;\n      switch (firstChar) {\n      case '^':\n        // We need at least 3 tokens lookahead to distinguish ^^<IRI> and ^^pre:fixed\n        if (input.length < 3)\n          break;\n        // Try to match a type\n        else if (input[1] === '^') {\n          this._previousMarker = '^^';\n          // Move to type IRI or prefixed name\n          input = input.substr(2);\n          if (input[0] !== '<') {\n            inconclusive = true;\n            break;\n          }\n        }\n        // If no type, it must be a path expression\n        else {\n          if (this._n3Mode) {\n            matchLength = 1;\n            type = '^';\n          }\n          break;\n        }\n        // Fall through in case the type is an IRI\n      case '<':\n        // Try to find a full IRI without escape sequences\n        if (match = this._unescapedIri.exec(input))\n          type = 'IRI', value = match[1];\n        // Try to find a full IRI with escape sequences\n        else if (match = this._iri.exec(input)) {\n          value = this._unescape(match[1]);\n          if (value === null || illegalIriChars.test(value))\n            return reportSyntaxError(this);\n          type = 'IRI';\n        }\n        // Try to find a nested triple\n        else if (input.length > 1 && input[1] === '<')\n          type = '<<', matchLength = 2;\n        // Try to find a backwards implication arrow\n        else if (this._n3Mode && input.length > 1 && input[1] === '=')\n          type = 'inverse', matchLength = 2, value = '>';\n        break;\n\n      case '>':\n        if (input.length > 1 && input[1] === '>')\n          type = '>>', matchLength = 2;\n        break;\n\n      case '_':\n        // Try to find a blank node. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a blank node.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if ((match = this._blank.exec(input)) ||\n            inputFinished && (match = this._blank.exec(`${input} `)))\n          type = 'blank', prefix = '_', value = match[1];\n        break;\n\n      case '\"':\n        // Try to find a literal without escape sequences\n        if (match = this._simpleQuotedString.exec(input))\n          value = match[1];\n        // Try to find a literal wrapped in three pairs of quotes\n        else {\n          ({ value, matchLength } = this._parseLiteral(input));\n          if (value === null)\n            return reportSyntaxError(this);\n        }\n        if (match !== null || matchLength !== 0) {\n          type = 'literal';\n          this._literalClosingPos = 0;\n        }\n        break;\n\n      case \"'\":\n        if (!this._lineMode) {\n          // Try to find a literal without escape sequences\n          if (match = this._simpleApostropheString.exec(input))\n            value = match[1];\n          // Try to find a literal wrapped in three pairs of quotes\n          else {\n            ({ value, matchLength } = this._parseLiteral(input));\n            if (value === null)\n              return reportSyntaxError(this);\n          }\n          if (match !== null || matchLength !== 0) {\n            type = 'literal';\n            this._literalClosingPos = 0;\n          }\n        }\n        break;\n\n      case '?':\n        // Try to find a variable\n        if (this._n3Mode && (match = this._variable.exec(input)))\n          type = 'var', value = match[0];\n        break;\n\n      case '@':\n        // Try to find a language code\n        if (this._previousMarker === 'literal' && (match = this._langcode.exec(input)))\n          type = 'langcode', value = match[1];\n        // Try to find a keyword\n        else if (match = this._keyword.exec(input))\n          type = match[0];\n        break;\n\n      case '.':\n        // Try to find a dot as punctuation\n        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n          type = '.';\n          matchLength = 1;\n          break;\n        }\n        // Fall through to numerical case (could be a decimal dot)\n\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n        // Try to find a number. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a number.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if (match = this._number.exec(input) ||\n            inputFinished && (match = this._number.exec(`${input} `))) {\n          type = 'literal', value = match[0];\n          prefix = (typeof match[1] === 'string' ? xsd.double :\n                    (typeof match[2] === 'string' ? xsd.decimal : xsd.integer));\n        }\n        break;\n\n      case 'B':\n      case 'b':\n      case 'p':\n      case 'P':\n      case 'G':\n      case 'g':\n        // Try to find a SPARQL-style keyword\n        if (match = this._sparqlKeyword.exec(input))\n          type = match[0].toUpperCase();\n        else\n          inconclusive = true;\n        break;\n\n      case 'f':\n      case 't':\n        // Try to match a boolean\n        if (match = this._boolean.exec(input))\n          type = 'literal', value = match[0], prefix = xsd.boolean;\n        else\n          inconclusive = true;\n        break;\n\n      case 'a':\n        // Try to find an abbreviated predicate\n        if (match = this._shortPredicates.exec(input))\n          type = 'abbreviation', value = 'a';\n        else\n          inconclusive = true;\n        break;\n\n      case '=':\n        // Try to find an implication arrow or equals sign\n        if (this._n3Mode && input.length > 1) {\n          type = 'abbreviation';\n          if (input[1] !== '>')\n            matchLength = 1, value = '=';\n          else\n            matchLength = 2, value = '>';\n        }\n        break;\n\n      case '!':\n        if (!this._n3Mode)\n          break;\n      case ',':\n      case ';':\n      case '[':\n      case ']':\n      case '(':\n      case ')':\n      case '{':\n      case '}':\n        if (!this._lineMode) {\n          matchLength = 1;\n          type = firstChar;\n        }\n        break;\n\n      default:\n        inconclusive = true;\n      }\n\n      // Some first characters do not allow an immediate decision, so inspect more\n      if (inconclusive) {\n        // Try to find a prefix\n        if ((this._previousMarker === '@prefix' || this._previousMarker === 'PREFIX') &&\n            (match = this._prefix.exec(input)))\n          type = 'prefix', value = match[1] || '';\n        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        else if ((match = this._prefixed.exec(input)) ||\n                 inputFinished && (match = this._prefixed.exec(`${input} `)))\n          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);\n      }\n\n      // A type token is special: it can only be emitted after an IRI or prefixed name is read\n      if (this._previousMarker === '^^') {\n        switch (type) {\n        case 'prefixed': type = 'type';    break;\n        case 'IRI':      type = 'typeIRI'; break;\n        default:         type = '';\n        }\n      }\n\n      // What if nothing of the above was found?\n      if (!type) {\n        // We could be in streaming mode, and then we just wait for more input to arrive.\n        // Otherwise, a syntax error has occurred in the input.\n        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n          return reportSyntaxError(this);\n        else\n          return this._input = input;\n      }\n\n      // Emit the parsed token\n      const token = { line: line, type: type, value: value, prefix: prefix };\n      callback(null, token);\n      this.previousToken = token;\n      this._previousMarker = type;\n      // Advance to next part to tokenize\n      input = input.substr(matchLength || match[0].length, input.length);\n    }\n\n    // Signals the syntax error through the callback\n    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n  }\n\n  // ### `_unescape` replaces N3 escape codes by their corresponding characters\n  _unescape(item) {\n    let invalid = false;\n    const replaced = item.replace(escapeSequence, (sequence, unicode4, unicode8, escapedChar) => {\n      // 4-digit unicode character\n      if (typeof unicode4 === 'string')\n        return String.fromCharCode(Number.parseInt(unicode4, 16));\n      // 8-digit unicode character\n      if (typeof unicode8 === 'string') {\n        let charCode = Number.parseInt(unicode8, 16);\n        return charCode <= 0xFFFF ? String.fromCharCode(Number.parseInt(unicode8, 16)) :\n          String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n      }\n      // fixed escape sequence\n      if (escapedChar in escapeReplacements)\n        return escapeReplacements[escapedChar];\n      // invalid escape sequence\n      invalid = true;\n      return '';\n    });\n    return invalid ? null : replaced;\n  }\n\n  // ### `_parseLiteral` parses a literal into an unescaped value\n  _parseLiteral(input) {\n    // Ensure we have enough lookahead to identify triple-quoted strings\n    if (input.length >= 3) {\n      // Identify the opening quote(s)\n      const opening = input.match(/^(?:\"\"\"|\"|'''|'|)/)[0];\n      const openingLength = opening.length;\n\n      // Find the next candidate closing quotes\n      let closingPos = Math.max(this._literalClosingPos, openingLength);\n      while ((closingPos = input.indexOf(opening, closingPos)) > 0) {\n        // Count backslashes right before the closing quotes\n        let backslashCount = 0;\n        while (input[closingPos - backslashCount - 1] === '\\\\')\n          backslashCount++;\n\n        // An even number of backslashes (in particular 0)\n        // means these are actual, non-escaped closing quotes\n        if (backslashCount % 2 === 0) {\n          // Extract and unescape the value\n          const raw = input.substring(openingLength, closingPos);\n          const lines = raw.split(/\\r\\n|\\r|\\n/).length - 1;\n          const matchLength = closingPos + openingLength;\n          // Only triple-quoted strings can be multi-line\n          if (openingLength === 1 && lines !== 0 ||\n              openingLength === 3 && this._lineMode)\n            break;\n          this._line += lines;\n          return { value: this._unescape(raw), matchLength };\n        }\n        closingPos++;\n      }\n      this._literalClosingPos = input.length - openingLength + 1;\n    }\n    return { value: '', matchLength: 0 };\n  }\n\n  // ### `_syntaxError` creates a syntax error for the given issue\n  _syntaxError(issue) {\n    this._input = null;\n    const err = new Error(`Unexpected \"${issue}\" on line ${this._line}.`);\n    err.context = {\n      token: undefined,\n      line: this._line,\n      previousToken: this.previousToken,\n    };\n    return err;\n  }\n\n  // ### Strips off any starting UTF BOM mark.\n  _readStartingBom(input) {\n    return input.startsWith('\\ufeff') ? input.substr(1) : input;\n  }\n\n  // ## Public methods\n\n  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n  // The input can be a string or a stream.\n  tokenize(input, callback) {\n    this._line = 1;\n\n    // If the input is a string, continuously emit tokens through the callback until the end\n    if (typeof input === 'string') {\n      this._input = this._readStartingBom(input);\n      // If a callback was passed, asynchronously call it\n      if (typeof callback === 'function')\n        queueMicrotask(() => this._tokenizeToEnd(callback, true));\n      // If no callback was passed, tokenize synchronously and return\n      else {\n        const tokens = [];\n        let error;\n        this._tokenizeToEnd((e, t) => e ? (error = e) : tokens.push(t), true);\n        if (error) throw error;\n        return tokens;\n      }\n    }\n    // Otherwise, the input must be a stream\n    else {\n      this._pendingBuffer = null;\n      if (typeof input.setEncoding === 'function')\n        input.setEncoding('utf8');\n      // Adds the data chunk to the buffer and parses as far as possible\n      input.on('data', data => {\n        if (this._input !== null && data.length !== 0) {\n          // Prepend any previous pending writes\n          if (this._pendingBuffer) {\n            data = Buffer.concat([this._pendingBuffer, data]);\n            this._pendingBuffer = null;\n          }\n          // Hold if the buffer ends in an incomplete unicode sequence\n          if (data[data.length - 1] & 0x80) {\n            this._pendingBuffer = data;\n          }\n          // Otherwise, tokenize as far as possible\n          else {\n            // Only read a BOM at the start\n            if (typeof this._input === 'undefined')\n              this._input = this._readStartingBom(typeof data === 'string' ? data : data.toString());\n            else\n              this._input += data;\n            this._tokenizeToEnd(callback, false);\n          }\n        }\n      });\n      // Parses until the end\n      input.on('end', () => {\n        if (typeof this._input === 'string')\n          this._tokenizeToEnd(callback, true);\n      });\n      input.on('error', callback);\n    }\n  }\n}\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","module.exports = require('events').EventEmitter;\n","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;"],"sourceRoot":""}