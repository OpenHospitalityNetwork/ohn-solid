{"version":3,"sources":["app/hooks.ts","vocabularies/HOSPEX.js","vocabularies/GEO.js","features/offer/offerAPI.ts","features/offer/offerSlice.ts","features/community/communityAPI.ts","features/community/communitySlice.ts","features/user/userAPI.ts","features/user/userSlice.ts","features/login/loginAPI.ts","features/login/loginSlice.ts","features/login/Login.tsx","features/offer/PopupOffer.tsx","features/offer/Map.tsx","features/offer/OfferMap.tsx","features/Control.tsx","features/community/Community.tsx","features/offer/ConfirmRemoveOffer.tsx","features/offer/Offer.tsx","features/user/User.tsx","features/offer/EditOffer.tsx","features/offer/Offers.tsx","features/community/Communities.tsx","components/Loading.tsx","features/onboarding/onboardingSlice.ts","features/onboarding/FirstTime.tsx","features/onboarding/Onboarding.tsx","App.tsx","features/notification/notificationSlice.ts","app/store.ts","serviceWorker.ts","features/notification/Notification.tsx","AppErrorBoundary.tsx","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","require","_VocabTerm","VocabTerm","getLocalStore","_DataFactory","_namedNode","namedNode","_NS","localName","HOSPEX","PREFIX","NAMESPACE","PREFIX_AND_NAMESPACE","NS","PersonalHospexDocument","addLabel","addComment","Accommodation","Community","memberOf","offers","offeredBy","GEO","SpatialThing","addLabelNoLanguage","addCommentNoLanguage","Point","lat","location","long","alt","lat_long","getHospexUri","webId","baseUrl","exec","Error","getOffersOfUser","a","hospexUri","getSolidDataset","fetch","dataset","things","getThingAll","map","thing","url","getUrl","rdf","type","filter","value","id","asUrl","locationUri","getThing","getDecimal","about","getStringEnglish","rdfs","comment","userId","position","en","offer","createOffer","document","Date","now","locationBuilder","buildThing","setUrl","setDecimal","offerBuilder","setStringWithLocale","userThing","createThing","newUserThing","addUrl","build","newOfferThing","newLocationThing","newDataset","setThing","saveSolidDatasetAt","updateOffer","offerThing","locationThing","offerThingBuilder","setStringEnglish","locationThingBuilder","removeOffer","updatedDataset","removeThing","createAsyncThunk","api","offerSlice","createSlice","name","initialState","byId","allIds","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","forEach","includes","push","selectOffers","createSelector","HttpErrorResponse","response","responseBody","message","status","statusText","Object","setPrototypeOf","prototype","joinCommunity","community","groupId","method","headers","body","vcard","hasMember","ok","text","hospexUser","newOrUpdatedHospexUser","getCommunitiesOfUser","user","communities","uniq","getUrlAll","getCommunity","image","memberIds","communityThing","sioc","has_usergroup","memberDataset","memberThing","console","log","getState","dispatch","login","communityId","userIds","getUser","communitySlice","selectCommunityDict","selectCommunities","ids","dict","selectLoggedUser","users","selectCommunitiesOfLoggedUser","communityDict","communityIds","avatar","hospexDocuments","offerIds","getStringNoLocale","fn","foaf","avatarUrl","hasPhoto","getProtectedImage","note","getStringWithLocale","hospexDataset","userThing2","offerIds1","allThings","offerIds2","blob","objectUrl","URL","createObjectURL","createHospexDocument","uri","createSolidDataset","length","documentId","userSlice","selectUserId","_","selectUser","selectUserOffers","values","selectUserCommunities","oidcIssuer","solidLogin","redirectUrl","globalThis","href","clientName","init","handleIncomingRedirect","restorePreviousSession","logout","solidLogout","isLoggedIn","joinStatus","data","loginSlice","pending","rejected","selectLogin","Login","useState","provider","setProvider","className","src","title","onSubmit","e","preventDefault","htmlFor","onChange","target","PopupOffer","to","encodeURIComponent","Map","MapContainer","center","zoom","TileLayer","attribution","Marker","Popup","Offers","Control","items","icon","FaMap","FaUser","FaHome","FaUsers","FaBug","onClick","FaSignOutAlt","item","classNames","colors","hoverbg100","bg200","bg300","text900","isMember","onJoin","Math","floor","random","color","style","backgroundImage","textShadow","ConfirmRemoveOffer","confirmString","onConfirm","onCancel","promptOpen","setPromptOpen","enteredString","setEnteredString","isOpen","onRequestClose","onAfterClose","contentLabel","closeTimeoutMS","overlayClassName","base","afterOpen","beforeClose","event","autoFocus","disabled","Offer","editable","props","requestingDelete","setRequestingDelete","onClickEdit","hash","SetLocation","useMap","useEffect","setView","Location","attributionControl","scrollWheelZoom","doubleClickZoom","touchZoom","User","params","useParams","decodeURIComponent","loggedUser","EditOffer","submit","editedOffer","setEditedOffer","placeholder","normalizeLng","lng","LocationDrag","onDrag","useMapEvent","getCenter","CurrentLocation","onLocationFound","latlng","flyTo","LocationEdit","setMap","locate","whenCreated","create","setCreate","edit","setEdit","offerToEdit","find","handleUpdate","handleCancel","Communities","userCommunities","Loading","onboardingSlice","onboarding","step","setOnboarding","incrementStep","decrementStep","setStep","actions","selectOnboarding","FirstTime","Onboarding","history","useHistory","steps","useMemo","replace","i","App","path","component","window","OfferMap","detail","notificationSlice","setNotification","clearNotification","addMatcher","isRejected","error","code","trim","selectNotification","notification","store","configureStore","reducer","offerReducer","communityReducer","userReducer","loginReducer","onboardingReducer","notificationReducer","Boolean","hostname","match","NotificationContainer","Notification","escFunction","key","stopPropagation","addEventListener","removeEventListener","tabIndex","AppErrorBoundary","hasError","this","setState","constructor","children","React","Component","connector","connect","Modal","setAppElement","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8f4b6193.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","/**\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\n * as part of artifact: [generated-vocab-hospex], version: [0.0.1]\n * on 'Tuesday, November 9, 2021 9:34 AM'.\n *\n * Vocabulary built from input: [vocabulary.ttl].\n *\n * The hospitality exchange ontology describes hospitality exchange\n */\n\n// We prefix our local variables with underscores to (hopefully!) prevent\n// potential names clashes with terms from vocabularies.\nconst { VocabTerm: _VocabTerm, getLocalStore } = require(\"@inrupt/solid-common-vocab\");\nconst _DataFactory = require(\"@rdfjs/data-model\");\n\nconst { namedNode: _namedNode } = _DataFactory;\n\nfunction _NS(localName) {\n  return _namedNode(`http://w3id.org/hospex/ns#${localName}`);\n}\n\n/**\n * The hospitality exchange ontology describes hospitality exchange\n */\nconst HOSPEX = {\n  PREFIX: \"hospex\",\n  NAMESPACE: \"http://w3id.org/hospex/ns#\",\n  PREFIX_AND_NAMESPACE: { \"hospex\": \"http://w3id.org/hospex/ns#\" },\n  NS: _NS,\n\n  // *****************\n  // All the Classes.\n  // *****************\n\n  /**\n   * A document containing hospitality exchange data of a person\n   *\n   * This term provides descriptions only in English.\n   */\n  PersonalHospexDocument: new _VocabTerm(\n    _NS(\"PersonalHospexDocument\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`Personal Hospex Document`, \"en\")\n    .addComment(`A document containing hospitality exchange data of a person`, \"en\"),\n\n  /**\n   * Accommodation that is offered to travellers\n   *\n   * This term provides descriptions only in English.\n   */\n  Accommodation: new _VocabTerm(\n    _NS(\"Accommodation\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`Accommodation`, \"en\")\n    .addComment(`Accommodation that is offered to travellers`, \"en\"),\n\n  /**\n   * A hospitality exchange community\n   *\n   * This term provides descriptions only in English.\n   */\n  Community: new _VocabTerm(\n    _NS(\"Community\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`Hospitality Exchange Community`, \"en\")\n    .addComment(`A hospitality exchange community`, \"en\"),\n\n\n  // *******************\n  // All the Properties.\n  // *******************\n\n  /**\n   * \n    Membership of a person in a hospitality exchange community.\n    Hospitality exchange community has user group which has members. This property loosely expresses the inverse of that relationship between community and a member of its usergroup.\n    \n   *\n   * This term provides descriptions only in English.\n   */\n  memberOf: new _VocabTerm(\n    _NS(\"memberOf\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`member of`, \"en\")\n    .addComment(`\n    Membership of a person in a hospitality exchange community.\n    Hospitality exchange community has user group which has members. This property loosely expresses the inverse of that relationship between community and a member of its usergroup.\n    `, \"en\"),\n\n  /**\n   * Person offers accommodation\n   *\n   * This term provides descriptions only in English.\n   */\n  offers: new _VocabTerm(\n    _NS(\"offers\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`offers`, \"en\")\n    .addComment(`Person offers accommodation`, \"en\"),\n\n  /**\n   * Accommodation is offered by a person\n   *\n   * This term provides descriptions only in English.\n   */\n  offeredBy: new _VocabTerm(\n    _NS(\"offeredBy\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabel(`offers`, \"en\")\n    .addComment(`Accommodation is offered by a person`, \"en\"),\n\n}\n\nexport default HOSPEX;\n","/**\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\n * as part of artifact: [generated-vocab-geo], version: [0.0.1]\n * on 'Tuesday, November 9, 2021 9:15 AM'.\n *\n * Vocabulary built from input: [geo.ttl].\n *\n * \nRecent changes to this namespace:\n$Log: wgs84_pos.rdf,v $\nRevision 1.22  2009/04/20 15:00:30  timbl\nRemove the time bits which have been deal with elsewhere eg in iCal.\n\nRevision 1.21  2009/04/20 12:52:47  timbl\ntry again\n\nRevision 1.20  2009/04/20 12:42:11  timbl\nAdd Event (edited ages ago and never checked in), and location (following discussion http://chatlogs.planetrdf.com/swig/2009-04-20#T12-36-09)\n\nRevision 1.19  2009/04/20 12:36:31  timbl\nAdd Event (edited ages ago and never checked in), and location (following discussion http://chatlogs.planetrdf.com/swig/2009-04-20#T12-36-09)\n\nRevision 1.18  2006/02/01 22:01:04  danbri\nClarified that lat and long are decimal degrees, and that alt is decimal metres about local reference ellipsoid\n\nRevision 1.17  2004/02/06 17:38:12  danbri\nFixed a bad commit screwup\n\nRevision 1.15  2003/04/19 11:24:08  danbri\nFixed the typo even more.\n\nRevision 1.14  2003/04/19 11:16:56  danbri\nfixed a typo\n\nRevision 1.13  2003/02/19 22:27:27  connolly\nrelaxed domain constraints on lat/long/alt from Point to SpatialThing\n\nRevision 1.12  2003/01/12 01:41:41  danbri\nTrying local copy of XSLT doc.\n\nRevision 1.11  2003/01/12 01:20:18  danbri\nadded a link to morten's xslt rdfs viewer.\n\nRevision 1.10  2003/01/11 18:56:49  danbri\nRemoved datatype range from lat and long properties, since they would\nhave required each occurance of the property to mention the datatype.\n\nRevision 1.9  2003/01/11 11:41:31  danbri\nAnother typo; repaired rdfs:Property to rdf:Property x4\n\nRevision 1.8  2003/01/11 11:05:02  danbri\nAdded an rdfs:range for each lat/long/alt property,\nhttp://www.w3.org/2001/XMLSchema#float\n\nRevision 1.7  2003/01/10 20:25:16  danbri\nLonger rdfs:comment for Point, trying to be Earth-centric and neutral about\ncoordinate system(s) at the same time. Feedback welcomed.\n\nRevision 1.6  2003/01/10 20:18:30  danbri\nAdded CVS log comments into the RDF/XML as an rdfs:comment property of the\nvocabulary. Note that this is not common practice (but seems both harmless\nand potentially useful).\n\n\nrevision 1.5\ndate: 2003/01/10 20:14:31;  author: danbri;  state: Exp;  lines: +16 -5\nUpdated schema:\nAdded a dc:date, added url for more info. Changed the rdfs:label of the\nnamespace from gp to geo. Added a class Point, set as the rdfs:domain of\neach property. Added XML comment on the lat_long property suggesting that\nwe might not need it (based on #rdfig commentary from implementors).\n\nrevision 1.4\ndate: 2003/01/10 20:01:07;  author: danbri;  state: Exp;  lines: +6 -5\nFixed typo; several rdfs:about attributes are now rdf:about. Thanks to MortenF in\n#rdfig for catching this error.\n\nrevision 1.3\ndate: 2003/01/10 11:59:03;  author: danbri;  state: Exp;  lines: +4 -3\nfixed buglet in vocab, added more wgs links\n\nrevision 1.2\ndate: 2003/01/10 11:01:11;  author: danbri;  state: Exp;  lines: +4 -4\nRemoved alt from the as-a-flat-string property, and switched from\nspace separated to comma separated.\n\nrevision 1.1\ndate: 2003/01/10 10:53:23;  author: danbri;  state: Exp;\nbasic geo vocab\n\n\n */\n\n// We prefix our local variables with underscores to (hopefully!) prevent\n// potential names clashes with terms from vocabularies.\nconst { VocabTerm: _VocabTerm, getLocalStore } = require(\"@inrupt/solid-common-vocab\");\nconst _DataFactory = require(\"@rdfjs/data-model\");\n\nconst { namedNode: _namedNode } = _DataFactory;\n\nfunction _NS(localName) {\n  return _namedNode(`http://www.w3.org/2003/01/geo/wgs84_pos#${localName}`);\n}\n\n/**\n * \nRecent changes to this namespace:\n$Log: wgs84_pos.rdf,v $\nRevision 1.22  2009/04/20 15:00:30  timbl\nRemove the time bits which have been deal with elsewhere eg in iCal.\n\nRevision 1.21  2009/04/20 12:52:47  timbl\ntry again\n\nRevision 1.20  2009/04/20 12:42:11  timbl\nAdd Event (edited ages ago and never checked in), and location (following discussion http://chatlogs.planetrdf.com/swig/2009-04-20#T12-36-09)\n\nRevision 1.19  2009/04/20 12:36:31  timbl\nAdd Event (edited ages ago and never checked in), and location (following discussion http://chatlogs.planetrdf.com/swig/2009-04-20#T12-36-09)\n\nRevision 1.18  2006/02/01 22:01:04  danbri\nClarified that lat and long are decimal degrees, and that alt is decimal metres about local reference ellipsoid\n\nRevision 1.17  2004/02/06 17:38:12  danbri\nFixed a bad commit screwup\n\nRevision 1.15  2003/04/19 11:24:08  danbri\nFixed the typo even more.\n\nRevision 1.14  2003/04/19 11:16:56  danbri\nfixed a typo\n\nRevision 1.13  2003/02/19 22:27:27  connolly\nrelaxed domain constraints on lat/long/alt from Point to SpatialThing\n\nRevision 1.12  2003/01/12 01:41:41  danbri\nTrying local copy of XSLT doc.\n\nRevision 1.11  2003/01/12 01:20:18  danbri\nadded a link to morten's xslt rdfs viewer.\n\nRevision 1.10  2003/01/11 18:56:49  danbri\nRemoved datatype range from lat and long properties, since they would\nhave required each occurance of the property to mention the datatype.\n\nRevision 1.9  2003/01/11 11:41:31  danbri\nAnother typo; repaired rdfs:Property to rdf:Property x4\n\nRevision 1.8  2003/01/11 11:05:02  danbri\nAdded an rdfs:range for each lat/long/alt property,\nhttp://www.w3.org/2001/XMLSchema#float\n\nRevision 1.7  2003/01/10 20:25:16  danbri\nLonger rdfs:comment for Point, trying to be Earth-centric and neutral about\ncoordinate system(s) at the same time. Feedback welcomed.\n\nRevision 1.6  2003/01/10 20:18:30  danbri\nAdded CVS log comments into the RDF/XML as an rdfs:comment property of the\nvocabulary. Note that this is not common practice (but seems both harmless\nand potentially useful).\n\n\nrevision 1.5\ndate: 2003/01/10 20:14:31;  author: danbri;  state: Exp;  lines: +16 -5\nUpdated schema:\nAdded a dc:date, added url for more info. Changed the rdfs:label of the\nnamespace from gp to geo. Added a class Point, set as the rdfs:domain of\neach property. Added XML comment on the lat_long property suggesting that\nwe might not need it (based on #rdfig commentary from implementors).\n\nrevision 1.4\ndate: 2003/01/10 20:01:07;  author: danbri;  state: Exp;  lines: +6 -5\nFixed typo; several rdfs:about attributes are now rdf:about. Thanks to MortenF in\n#rdfig for catching this error.\n\nrevision 1.3\ndate: 2003/01/10 11:59:03;  author: danbri;  state: Exp;  lines: +4 -3\nfixed buglet in vocab, added more wgs links\n\nrevision 1.2\ndate: 2003/01/10 11:01:11;  author: danbri;  state: Exp;  lines: +4 -4\nRemoved alt from the as-a-flat-string property, and switched from\nspace separated to comma separated.\n\nrevision 1.1\ndate: 2003/01/10 10:53:23;  author: danbri;  state: Exp;\nbasic geo vocab\n\n\n */\nconst GEO = {\n  PREFIX: \"geo\",\n  NAMESPACE: \"http://www.w3.org/2003/01/geo/wgs84_pos#\",\n  PREFIX_AND_NAMESPACE: { \"geo\": \"http://www.w3.org/2003/01/geo/wgs84_pos#\" },\n  NS: _NS,\n\n  // *****************\n  // All the Classes.\n  // *****************\n\n  /**\n   * Anything with spatial extent, i.e. size, shape, or position.\n e.g. people, places, bowling balls, as well as abstract areas like cubes.\n\n   *\n   * This term provides descriptions only with no explicit locale.\n   */\n  SpatialThing: new _VocabTerm(\n    _NS(\"SpatialThing\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabelNoLanguage(`SpatialThing`)\n    .addCommentNoLanguage(`Anything with spatial extent, i.e. size, shape, or position.\n e.g. people, places, bowling balls, as well as abstract areas like cubes.\n`),\n\n  /**\n   * A point, typically described using a coordinate system relative to Earth, such as WGS84.\n  \n   *\n   * This term provides descriptions only with no explicit locale.\n   */\n  Point: new _VocabTerm(\n    _NS(\"Point\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabelNoLanguage(`point`)\n    .addCommentNoLanguage(`A point, typically described using a coordinate system relative to Earth, such as WGS84.\n  `),\n\n\n  // *******************\n  // All the Properties.\n  // *******************\n\n  /**\n   * The WGS84 latitude of a SpatialThing (decimal degrees).\n   *\n   * This term provides descriptions only with no explicit locale.\n   */\n  lat: new _VocabTerm(\n    _NS(\"lat\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabelNoLanguage(`latitude`)\n    .addCommentNoLanguage(`The WGS84 latitude of a SpatialThing (decimal degrees).`),\n\n  /**\n   * The relation between something and the point, \n or other geometrical thing in space, where it is.  For example, the realtionship between\n a radio tower and a Point with a given lat and long.\n Or a relationship between a park and its outline as a closed arc of points, or a road and\n its location as a arc (a sequence of points).\n Clearly in practice there will be limit to the accuracy of any such statement, but one would expect\n an accuracy appropriate for the size of the object and uses such as mapping .\n \n   *\n   * This term provides descriptions only with no explicit locale.\n   */\n  location: new _VocabTerm(\n    _NS(\"location\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabelNoLanguage(`location`)\n    .addCommentNoLanguage(`The relation between something and the point, \n or other geometrical thing in space, where it is.  For example, the realtionship between\n a radio tower and a Point with a given lat and long.\n Or a relationship between a park and its outline as a closed arc of points, or a road and\n its location as a arc (a sequence of points).\n Clearly in practice there will be limit to the accuracy of any such statement, but one would expect\n an accuracy appropriate for the size of the object and uses such as mapping .\n `),\n\n  /**\n   * The WGS84 longitude of a SpatialThing (decimal degrees).\n   *\n   * This term provides descriptions only with no explicit locale.\n   */\n  long: new _VocabTerm(\n    _NS(\"long\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabelNoLanguage(`longitude`)\n    .addCommentNoLanguage(`The WGS84 longitude of a SpatialThing (decimal degrees).`),\n\n  /**\n   * The WGS84 altitude of a SpatialThing (decimal meters \nabove the local reference ellipsoid).\n   *\n   * This term provides descriptions only with no explicit locale.\n   */\n  alt: new _VocabTerm(\n    _NS(\"alt\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabelNoLanguage(`altitude`)\n    .addCommentNoLanguage(`The WGS84 altitude of a SpatialThing (decimal meters \nabove the local reference ellipsoid).`),\n\n  /**\n   * A comma-separated representation of a latitude, longitude coordinate.\n   *\n   * This term provides descriptions only with no explicit locale.\n   */\n  lat_long: new _VocabTerm(\n    _NS(\"lat_long\"),\n    _DataFactory,\n    getLocalStore(),\n    false\n  )\n    .addLabelNoLanguage(`lat/long`)\n    .addCommentNoLanguage(`A comma-separated representation of a latitude, longitude coordinate.`),\n\n}\n\nexport default GEO;\n","import {\n  asUrl,\n  buildThing,\n  createThing,\n  getDecimal,\n  getSolidDataset,\n  getStringEnglish,\n  getThing,\n  getThingAll,\n  getUrl,\n  removeThing,\n  saveSolidDatasetAt,\n  setThing,\n  ThingPersisted,\n} from '@inrupt/solid-client'\nimport { fetch } from '@inrupt/solid-client-authn-browser'\nimport { LatLngTuple } from 'leaflet'\nimport { rdf, rdfs } from 'rdf-namespaces'\nimport HOSPEX from '../../vocabularies/HOSPEX'\nimport { LanguageString } from '../../types'\nimport { Offer } from './types'\nimport GEO from '../../vocabularies/GEO'\n\nexport const getHospexUri = (webId: string) => {\n  const baseUrl = /^(https?:\\/\\/.*)\\/profile\\/card#me$/g.exec(webId)?.[1]\n  if (!baseUrl) throw new Error('unable to generate hospex uri from webId')\n  return baseUrl + '/public/hospex.ttl'\n}\n\nexport const getOffersOfUser = async (webId: string): Promise<Offer[]> => {\n  // @TODO replace with type indexes\n  const hospexUri = getHospexUri(webId)\n  const dataset = await getSolidDataset(hospexUri, { fetch })\n\n  const things = getThingAll(dataset)\n  const offers = things\n    .map(thing => ({ thing, url: getUrl(thing, rdf.type) }))\n    .filter(\n      ({ thing, url }) =>\n        thing &&\n        (url === HOSPEX.Accommodation.value ||\n          // this is for backwards compatibility only (deprecated)\n          url === 'https://hospex.example.com/terms/0.1#Accommodation'),\n    )\n    .map(({ thing }) => thing)\n    .map(thing => {\n      const id = asUrl(thing)\n\n      const locationUri = getUrl(thing, GEO.location.value)\n\n      if (!locationUri) return null\n\n      const location = getThing(dataset, locationUri)\n\n      const lat = location && getDecimal(location, GEO.lat.value)\n      const long = location && getDecimal(location, GEO.long.value)\n\n      if (lat === null || long === null) return null\n\n      const about = getStringEnglish(thing, rdfs.comment) ?? ''\n\n      return {\n        id,\n        userId: webId,\n        position: [lat, long] as LatLngTuple,\n        about: { en: about } as LanguageString,\n      }\n    })\n    .filter((offer): offer is Offer => offer !== null)\n\n  return offers\n}\n\nexport const createOffer = async (offer: Offer, document: string) => {\n  const dataset = await getSolidDataset(document, { fetch })\n\n  const locationUri = `${document}#location${Date.now()}`\n\n  const locationBuilder = buildThing({ url: locationUri })\n    .setUrl(rdf.type, GEO.Point.value)\n    .setDecimal(GEO.lat.value, offer.position[0])\n    .setDecimal(GEO.long.value, offer.position[1])\n\n  const offerBuilder = buildThing({ url: offer.id })\n    .setUrl(rdf.type, HOSPEX.Accommodation.value)\n    .setUrl(HOSPEX.offeredBy.value, offer.userId)\n    .setUrl(GEO.location.value, locationUri)\n    .setStringWithLocale(rdfs.comment, offer.about.en, 'en')\n\n  const userThing =\n    getThing(dataset, offer.userId) ?? createThing({ url: offer.userId })\n\n  const newUserThing = buildThing(userThing)\n    .addUrl(HOSPEX.offers.value, offer.id)\n    .build()\n\n  const newOfferThing = offerBuilder.build()\n  const newLocationThing = locationBuilder.build()\n\n  let newDataset = setThing(dataset, newOfferThing)\n  newDataset = setThing(newDataset, newLocationThing)\n  newDataset = setThing(newDataset, newUserThing)\n  await saveSolidDatasetAt(document, newDataset, { fetch })\n\n  return offer\n}\n\nexport const updateOffer = async (offer: Offer, document: string) => {\n  const dataset = await getSolidDataset(document, { fetch })\n  const offerThing = getThing(dataset, offer.id) as ThingPersisted\n\n  if (offerThing) {\n    const locationUri = getUrl(offerThing, GEO.location.value) ?? ''\n\n    const locationThing = getThing(dataset, locationUri)\n\n    if (locationThing) {\n      const offerThingBuilder = buildThing(offerThing).setStringEnglish(\n        rdfs.comment,\n        offer.about.en,\n      )\n      const locationThingBuilder = buildThing(locationThing)\n        .setDecimal(GEO.lat.value, offer.position[0])\n        .setDecimal(GEO.long.value, offer.position[1])\n      let newDataset = setThing(dataset, offerThingBuilder.build())\n      newDataset = setThing(newDataset, locationThingBuilder.build())\n      await saveSolidDatasetAt(document, newDataset, { fetch })\n      return offer\n    }\n    throw new Error('location to update not found')\n  }\n  throw new Error('offer to update not found')\n}\n\nexport const removeOffer = async (offer: Offer) => {\n  const dataset = await getSolidDataset(offer.id, { fetch })\n  const offerThing = getThing(dataset, offer.id) as ThingPersisted\n\n  if (offerThing) {\n    const locationUri = getUrl(offerThing, GEO.location.value) ?? ''\n\n    let updatedDataset = removeThing(dataset, locationUri)\n    updatedDataset = removeThing(updatedDataset, offer.id)\n\n    await saveSolidDatasetAt(offer.id, updatedDataset, { fetch })\n    return offer\n  }\n  throw new Error('offer to remove not found')\n}\n","import { createAsyncThunk, createSelector, createSlice } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\nimport * as api from './offerAPI'\nimport { Offer } from './types'\n\nexport interface OfferState {\n  byId: { [id: string]: Offer }\n  allIds: string[]\n}\n\nconst initialState: OfferState = {\n  byId: {},\n  allIds: [],\n}\n\nexport const getOffersOfUser = createAsyncThunk(\n  'offer/getOffersOfUser',\n  async (webId: string) => {\n    return await api.getOffersOfUser(webId)\n  },\n)\n\nexport const createOffer = createAsyncThunk(\n  'offer/create',\n  async ({ offer, document }: { offer: Offer; document: string }) => {\n    return await api.createOffer(offer, document)\n  },\n)\n\nexport const updateOffer = createAsyncThunk(\n  'offer/update',\n  async ({ offer, document }: { offer: Offer; document: string }) => {\n    return await api.updateOffer(offer, document)\n  },\n)\n\nexport const removeOffer = createAsyncThunk(\n  'offer/remove',\n  async (offer: Offer) => {\n    return await api.removeOffer(offer)\n  },\n)\n\nexport const offerSlice = createSlice({\n  name: 'offer',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(getOffersOfUser.fulfilled, (state, action) => {\n        action.payload.forEach(offer => {\n          state.byId[offer.id] = offer\n          if (!state.allIds.includes(offer.id)) {\n            state.allIds.push(offer.id)\n          }\n        })\n      })\n      .addCase(createOffer.fulfilled, (state, action) => {\n        const offer = action.payload\n        state.byId[offer.id] = offer\n        state.allIds.push(offer.id)\n      })\n      .addCase(updateOffer.fulfilled, (state, action) => {\n        const offer = action.payload\n        state.byId[offer.id] = offer\n      })\n      .addCase(removeOffer.fulfilled, (state, action) => {\n        const offer = action.payload\n        delete state.byId[offer.id]\n        state.allIds = state.allIds.filter(id => id !== offer.id)\n      })\n  },\n})\n\n// Selectors\nconst selectRawOffers = (state: RootState) => state.offer\nexport const selectOffers = createSelector(\n  selectRawOffers,\n  ({ byId, allIds }) => allIds.map(id => byId[id]),\n)\n\nexport default offerSlice.reducer\n","import {\n  buildThing,\n  createThing,\n  getSolidDataset,\n  getStringEnglish,\n  getThing,\n  getUrl,\n  getUrlAll,\n  saveSolidDatasetAt,\n  setThing,\n} from '@inrupt/solid-client'\nimport { fetch } from '@inrupt/solid-client-authn-browser'\nimport { sioc, vcard } from 'rdf-namespaces'\nimport { getHospexUri } from '../offer/offerAPI'\nimport { Community } from './types'\nimport HOSPEX from '../../vocabularies/HOSPEX'\nimport uniq from 'lodash/uniq'\n\nclass HttpErrorResponse extends Error {\n  constructor(response: Response, responseBody: string) {\n    const message = `[${response.status} ${response.statusText}]\\n${responseBody}`\n    super(message)\n\n    this.name = 'HttpErrorResponse'\n    Object.setPrototypeOf(this, HttpErrorResponse.prototype)\n  }\n}\n\nexport const joinCommunity = async (community: Community, userId: string) => {\n  // append the user into the group inbox\n  // TODO this must be much more secure, so people don't just add themselves into groups.\n  const response = await fetch(community.groupId, {\n    method: 'PATCH',\n    headers: { 'Content-Type': 'application/sparql-update' },\n    body: `\n        INSERT DATA {\n            <${community.groupId}> <${vcard.hasMember}> <${userId}> .\n        }\n    `,\n  })\n\n  if (!response.ok) throw new HttpErrorResponse(response, await response.text())\n\n  // create :me 'hospex:memberOf' communityId.\n  // in hospex document\n  const hospexUri = getHospexUri(userId)\n  const dataset = await getSolidDataset(hospexUri, { fetch })\n\n  const hospexUser = getThing(dataset, userId)\n\n  const newOrUpdatedHospexUser = buildThing(\n    hospexUser ?? createThing({ url: userId }),\n  )\n    .addUrl(HOSPEX.memberOf.value, community.id)\n    .build()\n\n  await saveSolidDatasetAt(\n    hospexUri,\n    setThing(dataset, newOrUpdatedHospexUser),\n    { fetch },\n  )\n}\n\nexport const getCommunitiesOfUser = async (\n  webId: string,\n): Promise<string[]> => {\n  // @TODO replace with type indexes\n  const hospexUri = getHospexUri(webId)\n  const dataset = await getSolidDataset(hospexUri, { fetch })\n\n  const user = getThing(dataset, webId)\n  if (!user) return []\n\n  const communities = uniq([\n    ...getUrlAll(user, HOSPEX.memberOf.value),\n    // this is for backwards compatibility (deprecated)\n    ...getUrlAll(user, 'https://hospex.example.com/terms/0.1#memberOf'),\n  ])\n\n  return communities\n}\n\nexport const getCommunity = async (id: string): Promise<Community> => {\n  const community: Community = {\n    id,\n    name: {},\n    about: {},\n    groupId: '',\n    image: '', //await getProtectedImage('https://picsum.photos/400'), // TODO implement fetching photo\n    memberIds: [] as string[],\n  }\n\n  const dataset = await getSolidDataset(id, { fetch })\n\n  const communityThing = getThing(dataset, id)\n  if (!communityThing) throw new Error(\"Community couldn't be fetched\")\n\n  community.name.en =\n    getStringEnglish(communityThing, sioc.name) ?? 'Unknown Name'\n  community.groupId = getUrl(communityThing, sioc.has_usergroup) ?? ''\n\n  community.about.en = getStringEnglish(communityThing, sioc.about) ?? ''\n\n  try {\n    const memberDataset = await getSolidDataset(community.groupId, { fetch })\n    const memberThing = getThing(memberDataset, community.groupId)\n    if (memberThing)\n      community.memberIds = getUrlAll(memberThing, vcard.hasMember)\n  } catch (error) {\n    console.log(error)\n  }\n  return community\n}\n","import { createAsyncThunk, createSelector, createSlice } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\nimport { getUser } from '../user/userSlice'\nimport * as api from './communityAPI'\nimport { Community } from './types'\n\nexport interface CommunityState {\n  byId: { [id: string]: Community }\n  allIds: string[]\n}\n\nconst initialState: CommunityState = {\n  byId: {},\n  allIds: [],\n}\n\nexport const joinCommunity = createAsyncThunk(\n  'community/join',\n  async (community: Community, { getState, dispatch }) => {\n    const state = getState() as RootState\n    const userId = state.login.webId\n    await api.joinCommunity(community, userId)\n    dispatch(getCommunity(community.id))\n    return { userId, communityId: community.id }\n  },\n)\n\nexport const getCommunity = createAsyncThunk(\n  'community/getCommunity',\n  async (communityId: string, { getState, dispatch }) => {\n    const community = await api.getCommunity(communityId)\n\n    const state = getState() as RootState\n    const userIds = state.user.allIds\n\n    if (community) {\n      community.memberIds.forEach(id => {\n        if (!userIds.includes(id)) {\n          dispatch(getUser(id))\n        }\n      })\n    }\n\n    return community\n  },\n)\n\nexport const getCommunitiesOfUser = createAsyncThunk(\n  'community/getCommunitiesOfUser',\n  async (webId: string, { getState, dispatch }) => {\n    // fetch community ids of user\n    const communities = await api.getCommunitiesOfUser(webId)\n\n    // fetch communities that haven't been fetched before\n    const state = getState() as RootState\n    communities.forEach(community => {\n      if (!state.community.allIds.includes(community)) {\n        dispatch(getCommunity(community))\n      }\n    })\n    return {\n      userId: webId,\n      communities,\n    }\n  },\n)\n\nexport const communitySlice = createSlice({\n  name: 'community',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getCommunity.fulfilled, (state, action) => {\n      const community = action.payload\n      if (community) {\n        state.byId[community.id] = community\n        if (!state.allIds.includes(community.id)) {\n          state.allIds.push(community.id)\n        }\n      }\n    })\n  },\n})\n\nconst selectCommunityIds = (state: RootState) => state.community.allIds\n\nconst selectCommunityDict = (state: RootState) => state.community.byId\n\nexport const selectCommunities = createSelector(\n  selectCommunityIds,\n  selectCommunityDict,\n  (ids, dict) => ids.map(id => dict[id]).filter(community => !!community),\n)\n\nexport const selectLoggedUser = createSelector(\n  (state: RootState) => state.login.webId,\n  (state: RootState) => state.user.byId,\n  (webId, users) => users[webId],\n)\n\nexport const selectCommunitiesOfLoggedUser = createSelector(\n  selectLoggedUser,\n  selectCommunityDict,\n  (user, communityDict) =>\n    user?.communityIds\n      .map(id => communityDict[id])\n      .filter(community => !!community) ?? [],\n)\n\nexport default communitySlice.reducer\n","import { User } from './types'\nimport {\n  getSolidDataset,\n  getThing,\n  getStringNoLocale,\n  getUrl,\n  getStringWithLocale,\n  getUrlAll,\n  getThingAll,\n  saveSolidDatasetAt,\n  createSolidDataset,\n} from '@inrupt/solid-client'\nimport { fetch } from '@inrupt/solid-client-authn-browser'\nimport { vcard, foaf } from 'rdf-namespaces'\nimport { getHospexUri } from '../offer/offerAPI'\nimport uniq from 'lodash/uniq'\nimport HOSPEX from '../../vocabularies/HOSPEX'\n\nexport const getUser = async (webId: string): Promise<User | null> => {\n  const user: User = {\n    id: webId,\n    name: '',\n    avatar: '',\n    about: { en: '' },\n    communityIds: [],\n    hospexDocuments: [],\n    offerIds: [],\n  }\n\n  const dataset = await getSolidDataset(webId, { fetch })\n\n  const userThing = getThing(dataset, webId)\n  if (!userThing) return null\n  user.name =\n    (getStringNoLocale(userThing, vcard.fn) ||\n      getStringNoLocale(userThing, foaf.name)) ??\n    ''\n  const avatarUrl = getUrl(userThing, vcard.hasPhoto) ?? ''\n  user.avatar = avatarUrl ? await getProtectedImage(avatarUrl) : ''\n  user.about.en =\n    (getStringNoLocale(userThing, vcard.note) ||\n      getStringWithLocale(userThing, vcard.note, 'en')) ??\n    ''\n\n  // here we fetch user's hospex document(s)\n  try {\n    const hospexUri = getHospexUri(webId)\n    const hospexDataset = await getSolidDataset(hospexUri, { fetch })\n\n    user.hospexDocuments.push(hospexUri)\n\n    const userThing2 = getThing(hospexDataset, webId)\n    if (userThing2) {\n      user.communityIds = uniq([\n        ...getUrlAll(userThing2, HOSPEX.memberOf.value),\n        // this is for backwards compatibility (deprecated)\n        ...getUrlAll(\n          userThing2,\n          'https://hospex.example.com/terms/0.1#memberOf',\n        ),\n      ])\n\n      const offerIds1 = uniq([\n        ...getUrlAll(userThing2, HOSPEX.offers.value),\n        // this is for backwards compatibility (deprecated)\n        ...getUrlAll(userThing2, 'https://hospex.example.com/terms/0.1#offers'),\n      ])\n\n      const allThings = getThingAll(hospexDataset)\n      const offerIds2 = allThings\n        .map(thing => ({\n          thing,\n          url:\n            getUrl(thing, HOSPEX.offeredBy.value) ??\n            // this is for backwards compatibility (deprecated)\n            getUrl(thing, 'https://hospex.example.com/terms/0.1#offeredBy'),\n        }))\n        .filter(({ url }) => url === webId)\n        .map(({ thing }) => thing.url)\n\n      user.offerIds = uniq([...offerIds1, ...offerIds2])\n    }\n  } catch (e) {\n    e\n  }\n\n  return user\n}\n\n/**\n * https://alphahydrae.com/2021/02/how-to-display-an-image-protected-by-header-based-authentication/\n */\nexport const getProtectedImage = async (url: string): Promise<string> => {\n  // Fetch the image.\n  const response = await fetch(url)\n\n  // Create an object URL from the data.\n  const blob = await response.blob()\n  const objectUrl = URL.createObjectURL(blob)\n  return objectUrl\n}\n\nexport const createHospexDocument = async (uri: string) => {\n  try {\n    await getSolidDataset(uri, { fetch })\n  } catch (error) {\n    // save the solid dataset to the new place\n\n    return await saveSolidDatasetAt(uri, createSolidDataset(), {\n      fetch,\n    })\n  }\n  throw new Error('document already exists')\n}\n\n/*\n * This is how to query turtle document with SPARQL and rdflib\nexport const queryTurtle = <T extends Record<string, string>>(\n  turtle: string,\n  baseUrl: string,\n  sparql: string,\n): T[] => {\n  const store = rdflib.graph()\n  rdflib.parse(turtle, store, baseUrl, 'text/turtle')\n  const query = rdflib.SPARQLToQuery(sparql, false, store)\n\n  const bindings: Bindings[] = store.querySync(query)\n  return bindings.map(\n    a =>\n      Object.fromEntries(\n        Object.entries(a).map(([key, val]) => [key.substr(1), val.value]),\n      ) as T,\n  )\n}\n*/\n","import { createAsyncThunk, createSelector, createSlice } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\nimport {\n  getCommunitiesOfUser,\n  joinCommunity,\n} from '../community/communitySlice'\nimport { getOffersOfUser } from '../offer/offerSlice'\nimport { User } from './types'\nimport * as api from './userAPI'\n\nexport interface UserState {\n  byId: { [id: string]: User }\n  allIds: string[]\n}\n\nconst initialState: UserState = {\n  byId: {},\n  allIds: [],\n}\n\nexport const getUser = createAsyncThunk(\n  'user/fetchUser',\n  async (webId: string, { dispatch }) => {\n    const response = await api.getUser(webId)\n    if (response && response.hospexDocuments.length > 0) {\n      dispatch(getOffersOfUser(webId))\n      dispatch(getCommunitiesOfUser(webId))\n    }\n    return response\n  },\n)\n\nexport const createHospexDocument = createAsyncThunk(\n  'user/createHospexDocument',\n  async ({ userId, documentId }: { userId: string; documentId: string }) => {\n    await api.createHospexDocument(documentId)\n    return { userId, documentId }\n  },\n)\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(getUser.fulfilled, (state, action) => {\n        const user = action.payload\n        if (user) {\n          state.byId[user.id] = user\n          if (!state.allIds.includes(user.id)) {\n            state.allIds.push(user.id)\n          }\n        }\n      })\n      .addCase(getCommunitiesOfUser.fulfilled, (state, action) => {\n        const { userId, communities } = action.payload\n\n        state.byId[userId].communityIds = communities\n      })\n      .addCase(joinCommunity.fulfilled, (state, action) => {\n        const { userId, communityId } = action.payload\n        if (!state.byId[userId].communityIds.includes(communityId))\n          state.byId[userId].communityIds.push(communityId)\n      })\n      .addCase(createHospexDocument.fulfilled, (state, action) => {\n        const { userId, documentId } = action.payload\n        state.byId[userId].hospexDocuments.push(documentId)\n      })\n  },\n})\n\nexport default userSlice.reducer\n\nconst selectUserId = (_: RootState, webId: string) => webId\n\nexport const selectUsers = (state: RootState) => state.user.byId\n\nexport const selectUser = createSelector(\n  selectUserId,\n  selectUsers,\n  (webId, users) =>\n    users[webId] ?? {\n      id: webId,\n      name: '',\n      avatar: '',\n      about: '',\n      communityIds: [],\n    },\n)\n\nconst selectOffers = (state: RootState) => state.offer.byId\n\nexport const selectUserOffers = createSelector(\n  selectUserId,\n  selectOffers,\n  (userId, offers) =>\n    Object.values(offers).filter(offer => offer.userId === userId),\n)\n\nconst selectCommunities = (state: RootState) => state.community.byId\n\nexport const selectUserCommunities = createSelector(\n  selectUser,\n  selectCommunities,\n  (user, communities) =>\n    Object.values(communities).filter(\n      community =>\n        user?.communityIds?.includes(community.id) &&\n        community.memberIds.includes(user.id),\n    ),\n)\n","import {\n  handleIncomingRedirect,\n  login as solidLogin,\n  logout as solidLogout,\n} from '@inrupt/solid-client-authn-browser'\n\nexport const login = async (oidcIssuer: string) => {\n  return await solidLogin({\n    oidcIssuer,\n    redirectUrl: globalThis.location.href,\n    clientName: 'Open Hospitality Network',\n  })\n}\n\nexport const init = async () =>\n  await handleIncomingRedirect({\n    url: globalThis.location.href,\n    restorePreviousSession: true,\n  })\n\nexport const logout = async () => await solidLogout()\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\nimport { getOffersOfUser } from '../offer/offerSlice'\nimport { getUser } from '../user/userSlice'\nimport * as api from './loginAPI'\n\nexport interface LoginState {\n  webId: string\n  isLoggedIn: boolean\n  status: 'success' | 'pending' | 'failed'\n  joinStatus: 'new' | 'pending' | 'old'\n}\n\nconst initialState: LoginState = {\n  webId: '',\n  isLoggedIn: false,\n  status: 'pending',\n  joinStatus: 'pending',\n}\n\nexport const login = createAsyncThunk('login/login', api.login)\n\nexport const init = createAsyncThunk('login/init', async (_, { dispatch }) => {\n  const data = await api.init()\n  if (data?.isLoggedIn && data?.webId) {\n    dispatch(getUser(data.webId))\n  }\n  return data\n})\n\nexport const logout = createAsyncThunk('login/logout', api.logout)\n\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(login.pending, state => {\n        state.status = 'pending'\n      })\n      .addCase(login.fulfilled, state => {\n        state.status = 'success'\n      })\n      .addCase(init.fulfilled, (state, action) => {\n        state.status = 'success'\n        state.webId = action.payload?.webId ?? ''\n        state.isLoggedIn = action.payload?.isLoggedIn ?? false\n      })\n      .addCase(logout.fulfilled, state => {\n        state.isLoggedIn = initialState.isLoggedIn\n        state.status = 'success'\n        state.webId = initialState.webId\n      })\n      // here we set up flow for new users\n      .addCase(getOffersOfUser.rejected, state => {\n        state.joinStatus = 'new'\n      })\n      .addCase(getOffersOfUser.fulfilled, state => {\n        state.joinStatus = 'old'\n      })\n  },\n})\n\nexport const selectLogin = (state: RootState) => state.login\n\nexport default loginSlice.reducer\n","import React, { FormEvent, useState } from 'react'\nimport { useAppDispatch } from '../../app/hooks'\nimport { login } from './loginSlice'\n\nconst Login = () => {\n  const [provider, setProvider] = useState('https://solidcommunity.net')\n  const dispatch = useAppDispatch()\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    dispatch(login(provider))\n  }\n  return (\n    <div className=\"flex flex-col items-center justify-evenly min-h-screen m-5\">\n      <div className=\"space-y-10\">\n        <section className=\"flex flex-col items-center space-y-2\">\n          <header>\n            <h1>Open Hospitality</h1>\n            <p className=\"italic\">hospitality, decentralized</p>\n          </header>\n          <div className=\"w-80 flex items-center justify-evenly\">\n            <a href=\"https://openhospitality.network\">\n              <img\n                src=\"https://openhospitality.network/assets/img/logo.png\"\n                title=\"Open Hospitality Network\"\n                alt=\"Open Hospitality Network logo\"\n                className=\"h-32\"\n              />\n            </a>\n            <span className=\"text-3xl\">+</span>\n            <a href=\"https://solidproject.org\">\n              <img\n                src=\"https://avatars3.githubusercontent.com/u/14262490?v=3&s=200\"\n                title=\"Solid Project\"\n                alt=\"Solid Project logo\"\n                className=\"h-32 p-5\"\n              />\n            </a>\n          </div>\n        </section>\n        <form\n          className=\"w-96 flex flex-col items-center gap-2\"\n          onSubmit={handleSubmit}\n        >\n          <header className=\"text-xl font-bold\">\n            Sign in with your Solid Identity\n          </header>\n          <label htmlFor=\"provider\">Select your Solid Pod Provider</label>\n          <input\n            className=\"rounded border px-2 py-1 w-full\"\n            id=\"provider\"\n            type=\"text\"\n            value={provider}\n            onChange={e => setProvider(e.target.value)}\n          />\n          <button\n            className=\"bg-pink-300 hover:bg-pink-400 focus:bg-pink-400 text-blue-50 w-full text-lg\"\n            type=\"submit\"\n          >\n            Sign In\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FaUser } from 'react-icons/fa'\nimport { useAppSelector } from '../../app/hooks'\nimport { selectUser } from '../user/userSlice'\nimport { Offer } from './types'\n\nconst PopupOffer: React.FC<{ offer: Offer }> = ({ offer }) => {\n  const user = useAppSelector(state => selectUser(state, offer.userId))\n  return (\n    <div>\n      <Link\n        to={`/users/${encodeURIComponent(user.id)}`}\n        className=\"flex gap-2 items-center\"\n      >\n        {user.avatar ? (\n          <img src={user.avatar} className=\"h-8 rounded\" />\n        ) : (\n          <FaUser className=\"h-8\" />\n        )}\n        {user.name}\n      </Link>\n      <p className=\"whitespace-pre-line text-justify w-56\">{offer.about.en}</p>\n    </div>\n  )\n}\n\nexport default PopupOffer\n","import { LatLngTuple } from 'leaflet'\nimport 'leaflet.markercluster/dist/MarkerCluster.css'\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css'\nimport React, { FC } from 'react'\nimport { MapContainer, Marker, Popup, TileLayer } from 'react-leaflet'\nimport MarkerClusterGroup from 'react-leaflet-markercluster'\nimport PopupOffer from './PopupOffer'\nimport { Offer } from './types'\n\n/* uncomment CurrentLocation to go to user's current location\nconst CurrentLocation = () => {\n  const map = useMap()\n  useEffect(() => {\n    map.locate()\n  }, [map])\n  useMapEvents({\n    locationfound: e => map.setView(e.latlng, 4),\n  })\n\n  return null\n}\n*/\n\nconst Map: FC<{ offers: Offer[] }> = ({ offers }) => {\n  const position: LatLngTuple = [30, 0]\n\n  return (\n    <MapContainer center={position} zoom={2} className=\"w-screen h-screen\">\n      {/*<CurrentLocation />*/}\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png\"\n      />\n      <MarkerClusterGroup>\n        {offers.map(offer => (\n          <Marker key={offer.id} position={offer.position}>\n            <Popup>\n              <PopupOffer offer={offer} />\n            </Popup>\n          </Marker>\n        ))}\n      </MarkerClusterGroup>\n    </MapContainer>\n  )\n}\n\nexport default Map\n","import React from 'react'\nimport { useAppSelector } from '../../app/hooks'\nimport Map from './Map'\nimport { selectOffers } from './offerSlice'\n\nconst Offers = () => {\n  const offers = useAppSelector(selectOffers)\n  return <Map offers={offers} />\n}\n\nexport default Offers\n","import React from 'react'\nimport { useAppDispatch, useAppSelector } from '../app/hooks'\nimport { logout, selectLogin } from './login/loginSlice'\nimport { Link } from 'react-router-dom'\nimport {\n  FaMap,\n  FaUser,\n  FaHome,\n  FaSignOutAlt,\n  FaUsers,\n  FaBug,\n} from 'react-icons/fa'\nimport { IconType } from 'react-icons'\n\ntype LinkConfig = {\n  type: 'link'\n  to: string\n  icon: IconType\n  title: string\n}\n\ntype ButtonConfig = {\n  type: 'button'\n  icon: IconType\n  title: string\n  onClick: React.MouseEventHandler<HTMLButtonElement>\n}\n\nconst Control = () => {\n  const login = useAppSelector(selectLogin)\n  const dispatch = useAppDispatch()\n\n  const items: Array<LinkConfig | ButtonConfig> = [\n    { type: 'link', to: '/', title: 'map', icon: FaMap },\n    {\n      type: 'link',\n      to: `/users/${encodeURIComponent(login.webId)}`,\n      title: 'my profile',\n      icon: FaUser,\n    },\n    { type: 'link', to: '/offers', title: 'my offers', icon: FaHome },\n    { type: 'link', to: '/communities', title: 'communities', icon: FaUsers },\n    { type: 'link', to: '/bug', title: 'report a bug', icon: FaBug },\n    {\n      type: 'button',\n      onClick: () => dispatch(logout()),\n      title: 'sign out',\n      icon: FaSignOutAlt,\n    },\n  ]\n  return (\n    <nav className=\"fixed top-4 right-4 z-500 flex items-center gap-0 bg-opacity-50 bg-white text-gray-400 rounded\">\n      {items.map(item => {\n        const icon = <item.icon title={item.title} className=\"text-4xl p-2\" />\n\n        const classNames =\n          'p-0 hover:text-white hover:bg-opacity-100 hover:bg-black rounded'\n\n        return item.type === 'link' ? (\n          <Link key={item.title} className={classNames} to={item.to}>\n            {icon}\n          </Link>\n        ) : (\n          <button\n            key={item.title}\n            className={classNames}\n            onClick={item.onClick}\n          >\n            {icon}\n          </button>\n        )\n      })}\n    </nav>\n  )\n}\n\nexport default Control\n","import React, { useState } from 'react'\nimport { Community as CommunityType } from './types'\n\nconst colors = [\n  // red\n  {\n    hoverbg100: 'hover:bg-red-100',\n    bg200: 'bg-red-200',\n    bg300: 'bg-red-300',\n    text900: 'text-red-900',\n  },\n  // yellow\n  {\n    hoverbg100: 'hover:bg-yellow-100',\n    bg200: 'bg-yellow-200',\n    bg300: 'bg-yellow-300',\n    text900: 'text-yellow-900',\n  },\n  // green\n  {\n    hoverbg100: 'hover:bg-green-100',\n    bg200: 'bg-green-200',\n    bg300: 'bg-green-300',\n    text900: 'text-green-900',\n  },\n  // blue\n  {\n    hoverbg100: 'hover:bg-blue-100',\n    bg200: 'bg-blue-200',\n    bg300: 'bg-blue-300',\n    text900: 'text-blue-900',\n  },\n  // indigo\n  {\n    hoverbg100: 'hover:bg-indigo-100',\n    bg200: 'bg-indigo-200',\n    bg300: 'bg-indigo-300',\n    text900: 'text-indigo-900',\n  },\n  // purple\n  {\n    hoverbg100: 'hover:bg-purple-100',\n    bg200: 'bg-purple-200',\n    bg300: 'bg-purple-300',\n    text900: 'text-purple-900',\n  },\n  // pink\n  {\n    hoverbg100: 'hover:bg-pink-100',\n    bg200: 'bg-pink-200',\n    bg300: 'bg-pink-300',\n    text900: 'text-pink-900',\n  },\n]\n\nconst Community: React.FC<{\n  community: CommunityType\n  isMember: boolean\n  onJoin: () => void\n}> = ({ community, isMember, onJoin }) => {\n  const [color] = useState(colors[Math.floor(Math.random() * colors.length)])\n\n  return (\n    <div className={`w-64 p-4 ${color.bg300} rounded flex flex-col gap-4`}>\n      <header\n        style={{\n          backgroundImage: `url(\"${community.image}\")`,\n          textShadow: '0 0 5px white',\n        }}\n        className=\"py-16 text-center -m-4 rounded-t bg-cover bg-center text-xl font-bold\"\n      >\n        {community.name.en}\n      </header>\n      <section className=\"mt-2 whitespace-pre-line text-justify\">\n        {community.about.en}\n      </section>\n      {isMember ? (\n        <div className=\"text-center\">Member</div>\n      ) : (\n        <button\n          className={`${color.bg200} ${color.hoverbg100} ${color.text900}`}\n          onClick={onJoin}\n        >\n          Join\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default Community\n","/**\n * Inspired by Penny's ConfirmOperation component\n * https://gitlab.com/vincenttunru/penny/-/blob/main/src/components/ConfirmOperation.tsx\n */\n\nimport React, { FC, FormEventHandler, useState } from 'react'\nimport Modal from 'react-modal'\n\ninterface Props {\n  confirmString: string\n  onConfirm: () => void\n  onCancel: () => void\n}\n\nconst ConfirmRemoveOffer: FC<Props> = ({\n  confirmString,\n  onConfirm,\n  onCancel,\n}) => {\n  const [promptOpen, setPromptOpen] = useState(true)\n  const [enteredString, setEnteredString] = useState('')\n\n  const handleSubmit: FormEventHandler = event => {\n    event.preventDefault()\n\n    if (enteredString === confirmString) {\n      onConfirm()\n    }\n  }\n\n  return (\n    <Modal\n      isOpen={promptOpen}\n      onRequestClose={() => setPromptOpen(false)}\n      onAfterClose={onCancel}\n      contentLabel=\"Are you sure?\"\n      closeTimeoutMS={150}\n      overlayClassName={{\n        base: 'bg-opacity-90 bg-gray-900 fixed top-0 left-0 bottom-0 right-0 z-5000',\n        afterOpen: '',\n        beforeClose: '',\n      }}\n    >\n      <h1>Are you sure you want to remove offer?</h1>\n      <form onSubmit={handleSubmit} className=\"flex flex-col gap-2\">\n        <label>\n          Please enter{' '}\n          <samp>\n            <kbd>{confirmString}</kbd>\n          </samp>{' '}\n          below\n        </label>\n        <input\n          className=\"border rounded\"\n          type=\"text\"\n          value={enteredString}\n          onChange={e => setEnteredString(e.target.value)}\n          autoFocus\n        />\n        <button\n          type=\"submit\"\n          disabled={confirmString !== enteredString}\n          className=\"disabled:opacity-50 bg-red-400 disabled:cursor-not-allowed cursor-pointer\"\n        >\n          Confirm\n        </button>\n        <button className=\"border\" onClick={onCancel}>\n          Cancel\n        </button>\n      </form>\n    </Modal>\n  )\n}\n\nexport default ConfirmRemoveOffer\n/*\n      className={{\n        base: '',\n        afterOpen: '',\n        beforeClose: '',\n      }}\n      */\n","import { LatLngTuple } from 'leaflet'\nimport React, { MouseEventHandler, useEffect, useState } from 'react'\nimport { MapContainer, Marker, TileLayer, useMap } from 'react-leaflet'\nimport { useAppDispatch } from '../../app/hooks'\nimport ConfirmRemoveOffer from './ConfirmRemoveOffer'\nimport { removeOffer } from './offerSlice'\nimport { Offer as OfferType } from './types'\n\ninterface OfferProps {\n  offer: OfferType\n  editable?: false\n}\n\ninterface EditableOfferProps {\n  offer: OfferType\n  onClickEdit: MouseEventHandler<HTMLButtonElement>\n  editable: true\n}\n\nconst Offer: React.FC<OfferProps | EditableOfferProps> = ({\n  offer,\n  editable = false,\n  ...props\n}) => {\n  const dispatch = useAppDispatch()\n  const [requestingDelete, setRequestingDelete] = useState(false)\n  const handleRemove = () => {\n    dispatch(removeOffer(offer))\n    setRequestingDelete(false)\n  }\n  return (\n    <div className=\"w-64 p-4 bg-blue-50 rounded flex flex-col gap-4\">\n      <Location location={offer.position} className=\"w-56 h-56\" />\n      <section className=\"whitespace-pre-line text-justify\">\n        {offer.about.en}\n      </section>\n      {editable && 'onClickEdit' in props && (\n        <>\n          <button className=\"bg-white\" onClick={props.onClickEdit}>\n            edit\n          </button>\n          <button\n            className=\"bg-red-400\"\n            onClick={() => setRequestingDelete(true)}\n          >\n            remove\n          </button>\n          {requestingDelete && (\n            <ConfirmRemoveOffer\n              confirmString={new globalThis.URL(offer.id).hash}\n              onConfirm={handleRemove}\n              onCancel={() => setRequestingDelete(false)}\n            />\n          )}\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Offer\n\nconst SetLocation = ({ location }: { location: LatLngTuple }) => {\n  const map = useMap()\n  useEffect(() => {\n    map.setView(location, 12)\n  }, [location, map])\n\n  return null\n}\n\nconst Location: React.FC<{ location: LatLngTuple; className?: string }> = ({\n  location,\n  className = '',\n}) => {\n  return (\n    <MapContainer\n      attributionControl={false}\n      center={location}\n      zoom={12}\n      scrollWheelZoom=\"center\"\n      doubleClickZoom=\"center\"\n      touchZoom=\"center\"\n      className={className}\n    >\n      <SetLocation location={location} />\n      <TileLayer url=\"https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png\" />\n      <Marker position={location} />\n    </MapContainer>\n  )\n}\n","import React from 'react'\nimport { FaExternalLinkAlt } from 'react-icons/fa'\nimport { useParams } from 'react-router'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { RootState } from '../../app/store'\nimport Community from '../community/Community'\nimport { joinCommunity, selectLoggedUser } from '../community/communitySlice'\nimport Offer from '../offer/Offer'\nimport {\n  selectUser,\n  selectUserCommunities,\n  selectUserOffers,\n} from './userSlice'\n\nconst User = () => {\n  const params = useParams<{ webId: string }>()\n  const webId = decodeURIComponent(params.webId)\n  const user = useAppSelector((state: RootState) => selectUser(state, webId))\n  const offers = useAppSelector((state: RootState) =>\n    selectUserOffers(state, webId),\n  )\n  const loggedUser = useAppSelector(selectLoggedUser)\n  const communities = useAppSelector((state: RootState) =>\n    selectUserCommunities(state, webId),\n  )\n\n  const dispatch = useAppDispatch()\n\n  return (\n    <div className=\"flex flex-col items-center gap-4 my-8\">\n      <header className=\"flex items-center gap-2\">\n        <h1 className=\"italic\">\n          Profile of <span className=\"not-italic\">{user.name}</span>\n        </h1>{' '}\n        <a href={user.id}>\n          <FaExternalLinkAlt className=\"text-xs text-gray-400 hover:text-gray-800\" />\n        </a>\n      </header>\n      {user.avatar && (\n        <img\n          className=\"w-56 max-h-56\"\n          src={user.avatar}\n          alt={`image of ${user.name}`}\n        />\n      )}\n      <p className=\"w-56 whitespace-pre-line text-justify\">\n        {user.about.en || (\n          <span className=\"text-gray-500 italic\">\n            This user has no description\n          </span>\n        )}\n      </p>\n\n      <h2>Offers ({offers.length})</h2>\n      <section>\n        <ul className=\"flex flex-wrap gap-6 justify-center\">\n          {offers.map(offer => (\n            <li key={offer.id}>\n              <Offer offer={offer} />\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <h2>Communities ({communities.length})</h2>\n      <section>\n        <ul className=\"flex flex-wrap gap-6 justify-center\">\n          {communities.map(community => (\n            <li key={community.id}>\n              <Community\n                community={community}\n                isMember={\n                  loggedUser.communityIds.includes(community.id) &&\n                  community.memberIds.includes(loggedUser.id)\n                }\n                onJoin={() => dispatch(joinCommunity(community))}\n              />\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  )\n}\n\nexport default User\n","import { LatLngTuple, Map } from 'leaflet'\nimport React, { FormEventHandler, useEffect, useState } from 'react'\nimport { MapContainer, Marker, TileLayer, useMapEvent } from 'react-leaflet'\nimport { Offer } from './types'\n\nconst EditOffer = ({\n  offer,\n  onSubmit,\n  onCancel,\n  submit,\n}: {\n  offer: Offer\n  onSubmit: (offer: Offer) => void\n  onCancel: () => void\n  submit: 'Create' | 'Update'\n}) => {\n  const [editedOffer, setEditedOffer] = useState(offer)\n\n  useEffect(() => {\n    setEditedOffer(offer)\n  }, [offer])\n\n  const handleChangeAbout: React.ChangeEventHandler<HTMLTextAreaElement> =\n    e => {\n      setEditedOffer(offer => ({\n        ...offer,\n        about: {\n          en: e.target.value,\n        },\n      }))\n    }\n\n  const handleChangePosition = (position: LatLngTuple) => {\n    setEditedOffer((offer: Offer) => ({\n      ...offer,\n      position,\n    }))\n  }\n\n  const handleSubmit: FormEventHandler<HTMLFormElement> = e => {\n    e.preventDefault()\n    onSubmit(editedOffer)\n  }\n\n  return (\n    <form\n      className=\"w-64 p-4 bg-blue-200 rounded flex flex-col gap-4\"\n      onSubmit={handleSubmit}\n    >\n      <LocationEdit\n        location={editedOffer.position}\n        onChange={handleChangePosition}\n        className=\"w-56 h-56\"\n      />\n      <textarea\n        className=\"h-40 p-1\"\n        value={editedOffer.about.en ?? ''}\n        onChange={handleChangeAbout}\n        placeholder=\"What can you and your place offer to guests?\"\n      />\n      <button className=\"bg-green-300 hover:bg-green-400\" type=\"submit\">\n        {submit}\n      </button>\n      <button className=\"hover:bg-gray-100\" type=\"button\" onClick={onCancel}>\n        Cancel\n      </button>\n    </form>\n  )\n}\n\nexport default EditOffer\n\nconst normalizeLng = (lng: number) => (((lng % 360) - 180 * 3) % 360) + 180\n\nconst LocationDrag = ({\n  onDrag,\n}: {\n  onDrag: (location: LatLngTuple) => void\n}) => {\n  const map = useMapEvent('drag', () => {\n    const { lat, lng } = map.getCenter()\n    onDrag([lat, normalizeLng(lng)])\n    map.setView([lat, normalizeLng(lng)])\n  })\n\n  return null\n}\n\nconst CurrentLocation = ({\n  onLocationFound,\n}: {\n  onLocationFound: (location: LatLngTuple) => void\n}) => {\n  const map = useMapEvent('locationfound', e => {\n    const { lat, lng } = e.latlng\n    onLocationFound([lat, lng])\n    map.flyTo([lat, normalizeLng(lng)])\n  })\n  return null\n}\n\nconst LocationEdit: React.FC<{\n  location: LatLngTuple\n  onChange: (location: LatLngTuple) => void\n  className?: string\n}> = ({ location, className = '', onChange }) => {\n  const [map, setMap] = useState<Map>()\n\n  return (\n    <div>\n      <section className=\"bg-yellow-200 p-2 text-sm italic\">\n        drag map to a new location or{' '}\n        <button\n          className=\"bg-yellow-50\"\n          type=\"button\"\n          onClick={() => map?.locate()}\n        >\n          find your location\n        </button>\n      </section>\n      <MapContainer\n        attributionControl={false}\n        center={location}\n        zoom={12}\n        scrollWheelZoom=\"center\"\n        doubleClickZoom=\"center\"\n        touchZoom=\"center\"\n        className={className}\n        whenCreated={setMap}\n      >\n        <CurrentLocation onLocationFound={onChange} />\n        <LocationDrag onDrag={onChange} />\n        <TileLayer url=\"https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png\" />\n        <Marker position={location} />\n      </MapContainer>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { selectLoggedUser } from '../community/communitySlice'\nimport { selectLogin } from '../login/loginSlice'\nimport { selectUserOffers } from '../user/userSlice'\nimport EditOfferForm from './EditOffer'\nimport OfferItem from './Offer'\nimport { getHospexUri } from './offerAPI'\nimport { createOffer, updateOffer } from './offerSlice'\nimport { Offer } from './types'\n\nconst Offers = () => {\n  const user = useAppSelector(selectLoggedUser)\n  const { webId: userId } = useAppSelector(selectLogin)\n  const offers = useAppSelector(state => selectUserOffers(state, userId))\n  const dispatch = useAppDispatch()\n  const document = getHospexUri(userId)\n\n  const [create, setCreate] = useState(false)\n  const [edit, setEdit] = useState('')\n\n  const offerToEdit = offers.find(offer => offer.id === edit)\n\n  const handleClickAdd = () => {\n    setCreate(true)\n    setEdit('')\n  }\n\n  const handleClickEdit = (id: string) => {\n    setEdit('')\n    setCreate(false)\n    setEdit(id)\n  }\n\n  const handleCreate = (offer: Offer) => {\n    dispatch(createOffer({ offer, document }))\n    setCreate(false)\n  }\n\n  const handleUpdate = (offer: Offer) => {\n    dispatch(updateOffer({ offer, document }))\n    setEdit('')\n  }\n\n  const handleCancel = () => {\n    setCreate(false)\n    setEdit('')\n  }\n\n  return (\n    <div className=\"flex flex-col items-center justify-evenly my-8\">\n      <header>\n        <h1>\n          Offers of{' '}\n          <Link to={`/users/${encodeURIComponent(userId)}`}>\n            {user?.name ?? 'user'}\n          </Link>\n        </h1>\n      </header>\n      <ul className=\"flex flex-wrap gap-6 justify-center\">\n        {offers.map(offer => (\n          <li key={offer.id}>\n            {offer === offerToEdit ? (\n              <EditOfferForm\n                offer={offerToEdit}\n                onSubmit={handleUpdate}\n                onCancel={handleCancel}\n                submit=\"Update\"\n              />\n            ) : (\n              <OfferItem\n                offer={offer}\n                editable\n                onClickEdit={() => handleClickEdit(offer.id)}\n              />\n            )}\n          </li>\n        ))}\n        <li>\n          {create ? (\n            <EditOfferForm\n              offer={{\n                id: `${document}#offer${Date.now()}`,\n                userId,\n                position: [51.477, 0],\n                about: {\n                  en: '',\n                },\n              }}\n              onSubmit={handleCreate}\n              onCancel={handleCancel}\n              submit=\"Create\"\n            />\n          ) : !edit ? (\n            <button\n              className=\"w-64 h-64 p-4 bg-blue-400 rounded flex items-center justify-center text-5xl font-bold text-indigo-50\"\n              onClick={handleClickAdd}\n            >\n              + Add\n            </button>\n          ) : null}\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Offers\n","import React from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport Community from './Community'\nimport { joinCommunity, selectLoggedUser } from './communitySlice'\nimport {\n  selectCommunities,\n  selectCommunitiesOfLoggedUser,\n} from './communitySlice'\n\nconst Communities = () => {\n  const communities = useAppSelector(selectCommunities)\n  const userCommunities = useAppSelector(selectCommunitiesOfLoggedUser)\n  const loggedUser = useAppSelector(selectLoggedUser)\n  const dispatch = useAppDispatch()\n  return (\n    <div className=\"flex flex-col items-center justify-evenly my-8\">\n      <header>\n        <h1>Communities</h1>\n      </header>\n      <ul className=\"flex flex-wrap gap-6 justify-center\">\n        {communities.map(community => (\n          <li key={community.id}>\n            <Community\n              key={community.id}\n              community={community}\n              isMember={\n                userCommunities.includes(community) &&\n                community.memberIds.includes(loggedUser.id)\n              }\n              onJoin={() => dispatch(joinCommunity(community))}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Communities\n","import React from 'react'\n\nconst Loading = ({ message = 'Loading' }: { message?: string }) => (\n  <div className=\"flex items-center justify-center h-screen w-screen\">\n    {message}\n  </div>\n)\n\nexport default Loading\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\n\nexport interface OnboardingState {\n  onboarding: boolean\n  step: number\n}\n\nconst initialState: OnboardingState = {\n  onboarding: false,\n  step: 0,\n}\n\nexport const onboardingSlice = createSlice({\n  name: 'onboarding',\n  initialState,\n  reducers: {\n    setOnboarding: (state, action: PayloadAction<boolean>) => {\n      state.onboarding = action.payload\n    },\n    incrementStep: state => {\n      state.step++\n    },\n    decrementStep: state => {\n      state.step--\n    },\n    setStep: (state, action: PayloadAction<number>) => {\n      state.step = action.payload\n    },\n  },\n})\n\nexport const { setOnboarding, incrementStep, decrementStep, setStep } =\n  onboardingSlice.actions\n\nexport const selectOnboarding = (state: RootState) => state.onboarding\n\nexport default onboardingSlice.reducer\n","import React from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { selectLogin } from '../login/loginSlice'\nimport { getHospexUri } from '../offer/offerAPI'\nimport { createHospexDocument } from '../user/userSlice'\nimport { setOnboarding } from './onboardingSlice'\n\nconst FirstTime = () => {\n  const dispatch = useAppDispatch()\n  const login = useAppSelector(selectLogin)\n\n  const hospexUri = getHospexUri(login.webId)\n\n  return (\n    <div className=\"h-screen flex flex-col items-center justify-center gap-4\">\n      <h1>It&apos;s your first time...</h1>\n      <button\n        className=\"bg-yellow-500\"\n        onClick={() => {\n          dispatch(setOnboarding(true))\n          dispatch(\n            createHospexDocument({\n              documentId: hospexUri,\n              userId: login.webId,\n            }),\n          )\n        }}\n      >\n        Let&apos;s get started!\n      </button>\n    </div>\n  )\n}\n\nexport default FirstTime\n","import React, { useEffect, useMemo } from 'react'\nimport { useHistory } from 'react-router'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { selectLogin } from '../login/loginSlice'\nimport {\n  decrementStep,\n  incrementStep,\n  selectOnboarding,\n  setOnboarding,\n} from './onboardingSlice'\n\nconst Onboarding = () => {\n  const onboarding = useAppSelector(selectOnboarding)\n  const dispatch = useAppDispatch()\n  const login = useAppSelector(selectLogin)\n  const history = useHistory()\n\n  const steps = useMemo(\n    () => [\n      {\n        url: '/communities',\n        text: 'Join some communities so you can meet people',\n      },\n      {\n        url: `/users/${encodeURIComponent(login.webId)}`,\n        text: 'Edit your profile',\n      },\n      {\n        url: '/offers',\n        text: 'If you can, offer hosting to others',\n      },\n      {\n        url: '/',\n        text: 'Map is where you can find Hosts',\n      },\n    ],\n    [login.webId],\n  )\n\n  useEffect(() => {\n    history.replace(steps[onboarding.step].url)\n  }, [history, onboarding.step, steps])\n\n  if (!onboarding.onboarding) return null\n\n  return (\n    <>\n      <div className=\"h-32 w-screen z-2000 fixed flex flex-col items-center justify-evenly bg-purple-400\">\n        <div className=\"flex gap-1\">\n          {[0, 1, 2, 3].map(i => (\n            <div\n              key={i}\n              className={`${\n                i <= onboarding.step ? 'bg-purple-300' : 'bg-purple-50'\n              } h-2 w-2 rounded-full`}\n            />\n          ))}\n        </div>\n        <div>{steps[onboarding.step].text}</div>\n        <div className=\"flex justify-evenly w-full\">\n          {onboarding.step > 0 && (\n            <button\n              className=\"bg-purple-300 hover:bg-purple-50\"\n              onClick={() => dispatch(decrementStep())}\n            >\n              Back\n            </button>\n          )}\n          {onboarding.step < steps.length - 1 && (\n            <button\n              className=\"bg-purple-300 hover:bg-purple-50\"\n              onClick={() => dispatch(incrementStep())}\n            >\n              Next\n            </button>\n          )}\n          {onboarding.step === steps.length - 1 && (\n            <button\n              className=\"bg-purple-300 hover:bg-purple-50\"\n              onClick={() => dispatch(setOnboarding(false))}\n            >\n              Finish\n            </button>\n          )}\n        </div>\n      </div>\n      <div className=\"h-32\" />\n    </>\n  )\n}\n\nexport default Onboarding\n","import React, { useEffect } from 'react'\nimport { useAppDispatch, useAppSelector } from './app/hooks'\nimport Login from './features/login/Login'\nimport { init, selectLogin } from './features/login/loginSlice'\nimport OfferMap from './features/offer/OfferMap'\nimport Control from './features/Control'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport User from './features/user/User'\nimport Offers from './features/offer/Offers'\nimport Communities from './features/community/Communities'\nimport {\n  getCommunity,\n  selectLoggedUser,\n} from './features/community/communitySlice'\nimport Loading from './components/Loading'\nimport FirstTime from './features/onboarding/FirstTime'\nimport Onboarding from './features/onboarding/Onboarding'\n\nfunction App() {\n  const login = useAppSelector(selectLogin)\n  const dispatch = useAppDispatch()\n  const loggedUser = useAppSelector(selectLoggedUser)\n  useEffect(() => {\n    dispatch(init())\n  }, [dispatch])\n\n  // fetch featured communities\n  useEffect(() => {\n    if (login.isLoggedIn) {\n      ;['https://mrkvon.inrupt.net/hospex/sleepy-bike/community#us'].forEach(\n        id => {\n          dispatch(getCommunity(id))\n        },\n      )\n    }\n  }, [login.isLoggedIn, dispatch])\n\n  if (login.status === 'pending') return <Loading message=\"Initializing...\" />\n\n  if (!login.isLoggedIn) return <Login />\n\n  if (!loggedUser) return <Loading message=\"Fetching your profile...\" />\n\n  if (loggedUser.hospexDocuments.length === 0) return <FirstTime />\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Onboarding />\n        <Control />\n        <Switch>\n          <Route path=\"/users/:webId\">\n            <User />\n          </Route>\n          <Route path=\"/offers\">\n            <Offers />\n          </Route>\n          <Route path=\"/communities\">\n            <Communities />\n          </Route>\n          <Route\n            path=\"/bug\"\n            component={() => {\n              window.location.href =\n                'https://github.com/OpenHospitalityNetwork/sleepy.bike/issues/new'\n              return null\n            }}\n          />\n          <Route path=\"/\">\n            <OfferMap />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import { createSlice, isRejected, PayloadAction } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\n\ninterface NotificationState {\n  type: 'success' | 'error' | 'info' | ''\n  title: string\n  detail: string\n}\n\nconst initialState: NotificationState = {\n  type: '',\n  title: '',\n  detail: '',\n}\n\nconst notificationSlice = createSlice({\n  name: 'notification',\n  initialState,\n  reducers: {\n    setNotification: (state, action: PayloadAction<NotificationState>) =>\n      action.payload,\n    clearNotification: () => initialState,\n  },\n  extraReducers: builder =>\n    builder.addMatcher(isRejected, (_, action) => {\n      return {\n        type: 'error',\n        title: (action.error.code ?? '' + ' ' + action.error.name ?? '').trim(),\n        detail: action.error.message ?? '',\n      }\n    }),\n})\n\nexport const { setNotification, clearNotification } = notificationSlice.actions\n\nexport const selectNotification = (state: RootState) => state.notification\n\nexport default notificationSlice.reducer\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport offerReducer from '../features/offer/offerSlice'\nimport loginReducer from '../features/login/loginSlice'\nimport userReducer from '../features/user/userSlice'\nimport communityReducer from '../features/community/communitySlice'\nimport onboardingReducer from '../features/onboarding/onboardingSlice'\nimport notificationReducer from '../features/notification/notificationSlice'\n\nexport const store = configureStore({\n  reducer: {\n    offer: offerReducer,\n    community: communityReducer,\n    user: userReducer,\n    login: loginReducer,\n    onboarding: onboardingReducer,\n    notification: notificationReducer,\n  },\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { clearNotification, selectNotification } from './notificationSlice'\nimport { FaTimes } from 'react-icons/fa'\n\nconst NotificationContainer = () => {\n  const notification = useAppSelector(selectNotification)\n  if (notification.type === '') return null\n  return <Notification notification={notification as NotificationType} />\n}\n\nexport default NotificationContainer\n\ntype NotificationType = {\n  type: 'success' | 'error' | 'info'\n  title: 'string'\n  detail: string\n}\n\nconst Notification = ({ notification }: { notification: NotificationType }) => {\n  const dispatch = useAppDispatch()\n\n  const escFunction = useMemo(\n    () => (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        console.log(e.key)\n        e.stopPropagation()\n        dispatch(clearNotification())\n      }\n    },\n    [dispatch],\n  )\n\n  useEffect(() => {\n    document.addEventListener('keydown', escFunction, false)\n\n    return () => {\n      document.removeEventListener('keydown', escFunction, false)\n    }\n  }, [escFunction])\n\n  const color =\n    notification.type === 'error'\n      ? 'bg-red-500'\n      : notification.type === 'success'\n      ? 'bg-green-500'\n      : 'bg-yellow-500'\n\n  return (\n    <div\n      tabIndex={0}\n      title=\"click to close\"\n      className={`${color} p-4 fixed z-5000 bottom-0 bg-opacity-80 hover:bg-opacity-90 rounded-none max-h-screen w-full overflow-auto`}\n    >\n      <button\n        className={`absolute top-3 right-3 p-1 rounded-full ${color}`}\n        onClick={() => dispatch(clearNotification())}\n      >\n        <FaTimes />\n      </button>\n      <header>{notification.title}</header>\n      <section>\n        <pre>{notification.detail}</pre>\n      </section>\n    </div>\n  )\n}\n","import React, { ReactNode } from 'react'\nimport { FaSadCry } from 'react-icons/fa'\nimport { connect, ConnectedProps } from 'react-redux'\nimport { setNotification } from './features/notification/notificationSlice'\n\ninterface Props extends PropsFromRedux {\n  children: ReactNode\n}\n\ninterface State {\n  hasError: boolean\n}\n\nclass AppErrorBoundary extends React.Component<Props, State> {\n  public state: State = {\n    hasError: false,\n  }\n\n  /*\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n  */\n\n  componentDidCatch(error: Error /*, errorInfo: ErrorInfo*/) {\n    // You can also log the error to an error reporting service\n    this.setState({ hasError: true })\n    this.props.setNotification({\n      type: 'error',\n      title: error.constructor.name,\n      detail: error.message,\n    })\n  }\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <div className=\"w-screen h-screen flex flex-col items-center justify-evenly font-bold text-2xl text-center\">\n          <FaSadCry className=\"text-5xl text-indigo-700\" />\n          <p>\n            Sorry, something went terribly wrong.\n            <br />\n            Please, let us know.\n            <br />\n            And reload...\n          </p>\n        </div>\n      )\n    }\n    return this.props.children\n  }\n}\n\nconst connector = connect(null, { setNotification })\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\nexport default connector(AppErrorBoundary)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { store } from './app/store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport Modal from 'react-modal'\nimport Notification from './features/notification/Notification'\nimport AppErrorBoundary from './AppErrorBoundary'\n\n// this is required by react-modal library for proper modal accessibility\nModal.setAppElement('#root')\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AppErrorBoundary>\n        <App />\n      </AppErrorBoundary>\n      <Notification />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}