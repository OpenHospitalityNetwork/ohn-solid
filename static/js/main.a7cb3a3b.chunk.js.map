{"version":3,"sources":["app/hooks.ts","features/offer/offerAPI.ts","features/offer/offerSlice.ts","features/community/communityAPI.ts","features/community/communitySlice.ts","features/user/userAPI.ts","features/user/userSlice.ts","features/login/loginAPI.ts","features/login/loginSlice.ts","features/login/Login.tsx","features/offer/Map.tsx","features/offer/OfferMap.tsx","features/Control.tsx","features/community/Community.tsx","features/offer/ConfirmRemoveOffer.tsx","features/offer/Offer.tsx","features/user/User.tsx","features/offer/EditOffer.tsx","features/offer/Offers.tsx","features/community/Communities.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","wgs84","a","getHospexUri","webId","exec","getOffersOfUser","hospexUri","getSolidDataset","fetch","dataset","things","getThingAll","offers","map","thing","url","getUrl","rdf","type","filter","id","asUrl","locationUri","location","getThing","lat","getDecimal","long","about","getStringByLocaleAll","rdfs","comment","userId","position","Object","fromEntries","offer","createHospexDocument","uri","saveSolidDatasetAt","createSolidDataset","Error","createOffer","document","Date","now","locationBuilder","buildThing","setUrl","setDecimal","offerBuilder","setStringWithLocale","en","newOfferThing","build","newLocationThing","newDataset","setThing","updateOffer","offerThing","locationThing","offerThingBuilder","setStringEnglish","locationThingBuilder","removeOffer","updatedDataset","removeThing","createAsyncThunk","api","offerSlice","createSlice","name","initialState","byId","allIds","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","forEach","includes","push","selectOffers","createSelector","joinCommunity","community","groupId","method","headers","body","vcard","hasMember","hospexUser","newOrUpdatedHospexUser","createThing","addUrl","getCommunitiesOfUser","user","communities","getUrlAll","getCommunity","image","memberIds","communityThing","getStringEnglish","sioc","has_usergroup","memberDataset","memberThing","console","log","getState","dispatch","login","communityId","userIds","getUser","communitySlice","selectCommunityDict","selectCommunities","ids","dict","selectLoggedUser","users","selectCommunitiesOfLoggedUser","communityDict","communityIds","getStringNoLocale","fn","foaf","avatarUrl","hasPhoto","displayProtectedImage","avatar","note","getStringWithLocale","response","blob","objectUrl","URL","createObjectURL","userSlice","selectUserId","_","selectUser","selectUserOffers","values","selectUserCommunities","oidcIssuer","solidLogin","redirectUrl","globalThis","href","clientName","init","handleIncomingRedirect","restorePreviousSession","logout","solidLogout","isLoggedIn","status","joinStatus","data","loginSlice","pending","rejected","selectLogin","Login","useState","provider","setProvider","className","src","title","alt","onSubmit","e","preventDefault","htmlFor","value","onChange","target","Map","points","MapContainer","center","zoom","TileLayer","attribution","Marker","Popup","entries","lang","texts","join","Offers","Control","items","to","icon","FaMap","encodeURIComponent","FaUser","FaHome","FaUsers","onClick","FaSignOutAlt","item","classNames","colors","Community","isMember","onJoin","Math","floor","random","length","color","style","backgroundImage","textShadow","ConfirmRemoveOffer","confirmString","onConfirm","onCancel","promptOpen","setPromptOpen","enteredString","setEnteredString","isOpen","onRequestClose","onAfterClose","contentLabel","closeTimeoutMS","overlayClassName","base","afterOpen","beforeClose","event","autoFocus","disabled","Offer","editable","props","requestingDelete","setRequestingDelete","onClickEdit","hash","SetLocation","useMap","useEffect","setView","Location","attributionControl","scrollWheelZoom","doubleClickZoom","touchZoom","User","params","useParams","decodeURIComponent","loggedUser","EditOffer","submit","editedOffer","setEditedOffer","placeholder","normalizeLng","lng","LocationDrag","onDrag","useMapEvent","getCenter","CurrentLocation","onLocationFound","latlng","flyTo","LocationEdit","setMap","locate","whenCreated","create","setCreate","edit","setEdit","offerToEdit","find","handleUpdate","handleCancel","Communities","userCommunities","App","path","OfferMap","store","configureStore","reducer","offerReducer","communityReducer","userReducer","loginReducer","Boolean","window","hostname","match","Modal","setAppElement","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a7cb3a3b.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { Offer } from './types'\nimport { fetch } from '@inrupt/solid-client-authn-browser'\nimport {\n  asUrl,\n  buildThing,\n  createSolidDataset,\n  getDecimal,\n  getSolidDataset,\n  getStringByLocaleAll,\n  getThing,\n  getThingAll,\n  getUrl,\n  removeThing,\n  saveSolidDatasetAt,\n  setThing,\n  ThingPersisted,\n} from '@inrupt/solid-client'\nimport { rdf, rdfs } from 'rdf-namespaces'\nimport { LatLngTuple } from 'leaflet'\n\nconst wgs84 = (a: string) => 'http://www.w3.org/2003/01/geo/wgs84_pos#' + a\n\nexport const getHospexUri = (webId: string) => {\n  const baseUrl = /^(https:\\/\\/.*)\\/profile\\/card#me$/g.exec(webId)?.[1]\n  return baseUrl + '/public/hospex.ttl'\n}\n\nexport const getOffersOfUser = async (webId: string): Promise<Offer[]> => {\n  // @TODO replace with type indexes\n  const hospexUri = getHospexUri(webId)\n  const dataset = await getSolidDataset(hospexUri, { fetch })\n\n  const things = getThingAll(dataset)\n  const offers = things\n    .map(thing => ({ thing, url: getUrl(thing, rdf.type) }))\n    .filter(\n      ({ thing, url }) =>\n        thing && url === 'https://hospex.example.com/terms/0.1#Accommodation',\n    )\n    .map(({ thing }) => thing)\n    .map(thing => {\n      const id = asUrl(thing)\n\n      const locationUri = getUrl(thing, wgs84('location'))\n\n      if (!locationUri) return null\n\n      const location = getThing(dataset, locationUri)\n\n      const lat = location && getDecimal(location, wgs84('lat'))\n      const long = location && getDecimal(location, wgs84('long'))\n\n      if (lat === null || long === null) return null\n\n      const about = getStringByLocaleAll(thing, rdfs.comment)\n\n      return {\n        id,\n        userId: webId,\n        position: [lat, long] as LatLngTuple,\n        about: Object.fromEntries(about),\n      }\n    })\n    .filter((offer): offer is Offer => offer !== null)\n\n  return offers\n}\n\nexport const createHospexDocument = async (uri: string) => {\n  try {\n    await getSolidDataset(uri, { fetch })\n  } catch (error) {\n    // save the solid dataset to the new place\n\n    await saveSolidDatasetAt(uri, createSolidDataset(), {\n      fetch,\n    })\n  }\n  throw new Error('document already exists')\n}\n\nexport const createOffer = async (offer: Offer, document: string) => {\n  const dataset = await getSolidDataset(document, { fetch })\n\n  const locationUri = `${document}#location${Date.now()}`\n\n  const locationBuilder = buildThing({ url: locationUri })\n    .setUrl(rdf.type, wgs84('Point'))\n    .setDecimal(wgs84('lat'), offer.position[0])\n    .setDecimal(wgs84('long'), offer.position[1])\n\n  const offerBuilder = buildThing({ url: offer.id })\n    .setUrl(rdf.type, 'https://hospex.example.com/terms/0.1#Accommodation')\n    .setUrl('https://hospex.example.com/terms/0.1#offeredBy', offer.userId)\n    .setUrl(wgs84('location'), locationUri)\n    .setStringWithLocale(rdfs.comment, offer.about.en[0], 'en')\n\n  const newOfferThing = offerBuilder.build()\n  const newLocationThing = locationBuilder.build()\n\n  let newDataset = setThing(dataset, newOfferThing)\n  newDataset = setThing(newDataset, newLocationThing)\n  await saveSolidDatasetAt(document, newDataset, { fetch })\n\n  return offer\n}\n\nexport const updateOffer = async (offer: Offer, document: string) => {\n  const dataset = await getSolidDataset(document, { fetch })\n  const offerThing = getThing(dataset, offer.id) as ThingPersisted\n\n  if (offerThing) {\n    const locationUri = getUrl(offerThing, wgs84('location')) ?? ''\n\n    const locationThing = getThing(dataset, locationUri)\n\n    if (locationThing) {\n      const offerThingBuilder = buildThing(offerThing).setStringEnglish(\n        rdfs.comment,\n        offer.about.en[0],\n      )\n      const locationThingBuilder = buildThing(locationThing)\n        .setDecimal(wgs84('lat'), offer.position[0])\n        .setDecimal(wgs84('long'), offer.position[1])\n      let newDataset = setThing(dataset, offerThingBuilder.build())\n      newDataset = setThing(newDataset, locationThingBuilder.build())\n      await saveSolidDatasetAt(document, newDataset, { fetch })\n      return offer\n    }\n    throw new Error('location to update not found')\n  }\n  throw new Error('offer to update not found')\n}\n\nexport const removeOffer = async (offer: Offer) => {\n  const dataset = await getSolidDataset(offer.id, { fetch })\n  const offerThing = getThing(dataset, offer.id) as ThingPersisted\n\n  if (offerThing) {\n    const locationUri = getUrl(offerThing, wgs84('location')) ?? ''\n\n    let updatedDataset = removeThing(dataset, locationUri)\n    updatedDataset = removeThing(updatedDataset, offer.id)\n\n    await saveSolidDatasetAt(offer.id, updatedDataset, { fetch })\n    return offer\n  }\n  throw new Error('offer to remove not found')\n}\n","import { createAsyncThunk, createSelector, createSlice } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\nimport * as api from './offerAPI'\nimport { Offer } from './types'\n\nexport interface OfferState {\n  byId: { [id: string]: Offer }\n  allIds: string[]\n}\n\nconst initialState: OfferState = {\n  byId: {},\n  allIds: [],\n}\n\nexport const getOffersOfUser = createAsyncThunk(\n  'offer/getOffersOfUser',\n  async (webId: string) => {\n    try {\n      return await api.getOffersOfUser(webId)\n    } catch (error) {\n      // if we fail, we create hospex document\n      await api.createHospexDocument(api.getHospexUri(webId))\n      throw error\n    }\n  },\n)\n\nexport const createOffer = createAsyncThunk(\n  'offer/create',\n  async ({ offer, document }: { offer: Offer; document: string }) => {\n    return await api.createOffer(offer, document)\n  },\n)\n\nexport const updateOffer = createAsyncThunk(\n  'offer/update',\n  async ({ offer, document }: { offer: Offer; document: string }) => {\n    return await api.updateOffer(offer, document)\n  },\n)\n\nexport const removeOffer = createAsyncThunk(\n  'offer/remove',\n  async (offer: Offer) => {\n    return await api.removeOffer(offer)\n  },\n)\n\nexport const offerSlice = createSlice({\n  name: 'offer',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(getOffersOfUser.fulfilled, (state, action) => {\n        action.payload.forEach(offer => {\n          state.byId[offer.id] = offer\n          if (!state.allIds.includes(offer.id)) {\n            state.allIds.push(offer.id)\n          }\n        })\n      })\n      .addCase(createOffer.fulfilled, (state, action) => {\n        const offer = action.payload\n        state.byId[offer.id] = offer\n        state.allIds.push(offer.id)\n      })\n      .addCase(updateOffer.fulfilled, (state, action) => {\n        const offer = action.payload\n        state.byId[offer.id] = offer\n      })\n      .addCase(removeOffer.fulfilled, (state, action) => {\n        const offer = action.payload\n        delete state.byId[offer.id]\n        state.allIds = state.allIds.filter(id => id !== offer.id)\n      })\n  },\n})\n\n// Selectors\nconst selectRawOffers = (state: RootState) => state.offer\nexport const selectOffers = createSelector(\n  selectRawOffers,\n  ({ byId, allIds }) => allIds.map(id => byId[id]),\n)\n\nexport default offerSlice.reducer\n","import {\n  buildThing,\n  createThing,\n  getSolidDataset,\n  getStringEnglish,\n  getThing,\n  getUrl,\n  getUrlAll,\n  saveSolidDatasetAt,\n  setThing,\n} from '@inrupt/solid-client'\nimport { fetch } from '@inrupt/solid-client-authn-browser'\nimport { sioc, vcard } from 'rdf-namespaces'\nimport { getHospexUri } from '../offer/offerAPI'\nimport { Community } from './types'\n\nexport const joinCommunity = async (community: Community, userId: string) => {\n  // append the user into the group inbox\n  // TODO this must be much more secure, so people don't just add themselves into groups.\n  // TODO this must be APPEND\n  fetch(community.groupId, {\n    method: 'PATCH',\n    headers: { 'Content-Type': 'application/sparql-update' },\n    body: `\n        INSERT DATA {\n            <${community.groupId}> <${vcard.hasMember}> <${userId}> .\n        }\n    `,\n  })\n\n  // create :me 'https://hospex.example.com/terms/0.1#memberOf' communityId.\n  // in hospex document\n  const hospexUri = getHospexUri(userId)\n  const dataset = await getSolidDataset(hospexUri, { fetch })\n\n  const hospexUser = getThing(dataset, userId)\n\n  const newOrUpdatedHospexUser = buildThing(\n    hospexUser ?? createThing({ url: userId }),\n  )\n    .addUrl('https://hospex.example.com/terms/0.1#memberOf', community.id)\n    .build()\n\n  await saveSolidDatasetAt(\n    hospexUri,\n    setThing(dataset, newOrUpdatedHospexUser),\n    { fetch },\n  )\n}\n\nexport const getCommunitiesOfUser = async (\n  webId: string,\n): Promise<string[]> => {\n  // @TODO replace with type indexes\n  const hospexUri = getHospexUri(webId)\n  const dataset = await getSolidDataset(hospexUri, { fetch })\n\n  const user = getThing(dataset, webId)\n  if (!user) return []\n\n  const communities = getUrlAll(\n    user,\n    'https://hospex.example.com/terms/0.1#memberOf',\n  )\n\n  return communities\n}\n\nexport const getCommunity = async (id: string): Promise<Community> => {\n  const community: Community = {\n    id,\n    name: {},\n    about: {},\n    groupId: '',\n    image: 'https://picsum.photos/400', // TODO implement fetching photo\n    memberIds: [] as string[],\n  }\n\n  const dataset = await getSolidDataset(id, { fetch })\n\n  const communityThing = getThing(dataset, id)\n  if (!communityThing) throw new Error(\"Community couldn't be fetched\")\n\n  community.name.en =\n    getStringEnglish(communityThing, sioc.name) ?? 'Unknown Name'\n  community.groupId = getUrl(communityThing, sioc.has_usergroup) ?? ''\n\n  community.about.en = getStringEnglish(communityThing, sioc.about) ?? ''\n\n  try {\n    const memberDataset = await getSolidDataset(community.groupId, { fetch })\n    const memberThing = getThing(memberDataset, community.groupId)\n    if (memberThing)\n      community.memberIds = getUrlAll(memberThing, vcard.hasMember)\n  } catch (error) {\n    console.log(error)\n  }\n  return community\n}\n","import { createAsyncThunk, createSelector, createSlice } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\nimport { getUser } from '../user/userSlice'\nimport * as api from './communityAPI'\nimport { Community } from './types'\n\nexport interface CommunityState {\n  byId: { [id: string]: Community }\n  allIds: string[]\n}\n\nconst initialState: CommunityState = {\n  byId: {},\n  allIds: [],\n}\n\nexport const joinCommunity = createAsyncThunk(\n  'community/join',\n  async (community: Community, { getState, dispatch }) => {\n    const state = getState() as RootState\n    const userId = state.login.webId\n    await api.joinCommunity(community, userId)\n    dispatch(getCommunity(community.id))\n    return { userId, communityId: community.id }\n  },\n)\n\nexport const getCommunity = createAsyncThunk(\n  'community/getCommunity',\n  async (communityId: string, { getState, dispatch }) => {\n    const community = await api.getCommunity(communityId)\n\n    const state = getState() as RootState\n    const userIds = state.user.allIds\n\n    if (community) {\n      community.memberIds.forEach(id => {\n        if (!userIds.includes(id)) {\n          dispatch(getUser(id))\n        }\n      })\n    }\n\n    return community\n  },\n)\n\nexport const getCommunitiesOfUser = createAsyncThunk(\n  'community/getCommunitiesOfUser',\n  async (webId: string, { getState, dispatch }) => {\n    // fetch community ids of user\n    const communities = await api.getCommunitiesOfUser(webId)\n\n    // fetch communities that haven't been fetched before\n    const state = getState() as RootState\n    communities.forEach(community => {\n      if (!state.community.allIds.includes(community)) {\n        dispatch(getCommunity(community))\n      }\n    })\n    return {\n      userId: webId,\n      communities,\n    }\n  },\n)\n\nexport const communitySlice = createSlice({\n  name: 'community',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getCommunity.fulfilled, (state, action) => {\n      const community = action.payload\n      if (community) {\n        state.byId[community.id] = community\n        if (!state.allIds.includes(community.id)) {\n          state.allIds.push(community.id)\n        }\n      }\n    })\n  },\n})\n\nconst selectCommunityIds = (state: RootState) => state.community.allIds\n\nconst selectCommunityDict = (state: RootState) => state.community.byId\n\nexport const selectCommunities = createSelector(\n  selectCommunityIds,\n  selectCommunityDict,\n  (ids, dict) => ids.map(id => dict[id]).filter(community => !!community),\n)\n\nexport const selectLoggedUser = createSelector(\n  (state: RootState) => state.login.webId,\n  (state: RootState) => state.user.byId,\n  (webId, users) => users[webId],\n)\n\nexport const selectCommunitiesOfLoggedUser = createSelector(\n  selectLoggedUser,\n  selectCommunityDict,\n  (user, communityDict) =>\n    user?.communityIds\n      .map(id => communityDict[id])\n      .filter(community => !!community) ?? [],\n)\n\nexport default communitySlice.reducer\n","import { User } from './types'\nimport {\n  getSolidDataset,\n  getThing,\n  getStringNoLocale,\n  getUrl,\n  getStringWithLocale,\n} from '@inrupt/solid-client'\nimport { fetch } from '@inrupt/solid-client-authn-browser'\nimport { vcard, foaf } from 'rdf-namespaces'\n\nexport const getUser = async (webId: string): Promise<User | null> => {\n  const dataset = await getSolidDataset(webId, { fetch })\n\n  const user = getThing(dataset, webId)\n  if (!user) return null\n  const name =\n    (getStringNoLocale(user, vcard.fn) || getStringNoLocale(user, foaf.name)) ??\n    ''\n  const avatarUrl = getUrl(user, vcard.hasPhoto) ?? ''\n  const avatar = avatarUrl ? await displayProtectedImage(avatarUrl) : ''\n  const about =\n    (getStringNoLocale(user, vcard.note) ||\n      getStringWithLocale(user, vcard.note, 'en')) ??\n    ''\n  return {\n    id: webId,\n    name,\n    avatar,\n    about: { en: about },\n    communityIds: [],\n  }\n}\n\n/**\n * https://alphahydrae.com/2021/02/how-to-display-an-image-protected-by-header-based-authentication/\n */\nconst displayProtectedImage = async (url: string): Promise<string> => {\n  // Fetch the image.\n  const response = await fetch(url)\n\n  // Create an object URL from the data.\n  const blob = await response.blob()\n  const objectUrl = URL.createObjectURL(blob)\n  return objectUrl\n}\n","import { createAsyncThunk, createSelector, createSlice } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\nimport {\n  getCommunitiesOfUser,\n  joinCommunity,\n} from '../community/communitySlice'\nimport { getOffersOfUser } from '../offer/offerSlice'\nimport { User } from './types'\nimport * as api from './userAPI'\n\nexport interface UserState {\n  byId: { [id: string]: User }\n  allIds: string[]\n}\n\nconst initialState: UserState = {\n  byId: {},\n  allIds: [],\n}\n\nexport const getUser = createAsyncThunk(\n  'user/fetchUser',\n  async (webId: string, { dispatch }) => {\n    const response = await api.getUser(webId)\n    dispatch(getOffersOfUser(webId))\n    dispatch(getCommunitiesOfUser(webId))\n    return response\n  },\n)\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(getUser.fulfilled, (state, action) => {\n        const user = action.payload\n        if (user) {\n          state.byId[user.id] = user\n          if (!state.allIds.includes(user.id)) {\n            state.allIds.push(user.id)\n          }\n        }\n      })\n      .addCase(getCommunitiesOfUser.fulfilled, (state, action) => {\n        const { userId, communities } = action.payload\n\n        state.byId[userId].communityIds = communities\n      })\n      .addCase(joinCommunity.fulfilled, (state, action) => {\n        const { userId, communityId } = action.payload\n        if (!state.byId[userId].communityIds.includes(communityId))\n          state.byId[userId].communityIds.push(communityId)\n      })\n  },\n})\n\nexport default userSlice.reducer\n\nconst selectUserId = (_: RootState, webId: string) => webId\n\nexport const selectUsers = (state: RootState) => state.user.byId\n\nexport const selectUser = createSelector(\n  selectUserId,\n  selectUsers,\n  (webId, users) =>\n    users[webId] ?? {\n      id: webId,\n      name: '',\n      avatar: '',\n      about: '',\n      communityIds: [],\n    },\n)\n\nconst selectOffers = (state: RootState) => state.offer.byId\n\nexport const selectUserOffers = createSelector(\n  selectUserId,\n  selectOffers,\n  (userId, offers) =>\n    Object.values(offers).filter(offer => offer.userId === userId),\n)\n\nconst selectCommunities = (state: RootState) => state.community.byId\n\nexport const selectUserCommunities = createSelector(\n  selectUser,\n  selectCommunities,\n  (user, communities) =>\n    Object.values(communities).filter(\n      community =>\n        user?.communityIds?.includes(community.id) &&\n        community.memberIds.includes(user.id),\n    ),\n)\n","import {\n  handleIncomingRedirect,\n  login as solidLogin,\n  logout as solidLogout,\n} from '@inrupt/solid-client-authn-browser'\n\nexport const login = async (oidcIssuer: string) => {\n  return await solidLogin({\n    oidcIssuer,\n    redirectUrl: globalThis.location.href,\n    clientName: 'Open Hospitality Network',\n  })\n}\n\nexport const init = async () =>\n  await handleIncomingRedirect({\n    url: globalThis.location.href,\n    restorePreviousSession: true,\n  })\n\nexport const logout = async () => await solidLogout()\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\nimport { getOffersOfUser } from '../offer/offerSlice'\nimport { getUser } from '../user/userSlice'\nimport * as api from './loginAPI'\n\nexport interface LoginState {\n  webId: string\n  isLoggedIn: boolean\n  status: 'success' | 'pending' | 'failed'\n  joinStatus: 'new' | 'pending' | 'old'\n}\n\nconst initialState: LoginState = {\n  webId: '',\n  isLoggedIn: false,\n  status: 'pending',\n  joinStatus: 'pending',\n}\n\nexport const login = createAsyncThunk('login/login', api.login)\n\nexport const init = createAsyncThunk('login/init', async (_, { dispatch }) => {\n  const data = await api.init()\n  if (data?.isLoggedIn && data?.webId) {\n    dispatch(getUser(data.webId))\n  }\n  return data\n})\n\nexport const logout = createAsyncThunk('login/logout', api.logout)\n\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(login.pending, state => {\n        state.status = 'pending'\n      })\n      .addCase(login.fulfilled, state => {\n        state.status = 'success'\n      })\n      .addCase(init.fulfilled, (state, action) => {\n        state.status = 'success'\n        state.webId = action.payload?.webId ?? ''\n        state.isLoggedIn = action.payload?.isLoggedIn ?? false\n      })\n      .addCase(logout.fulfilled, state => {\n        state.isLoggedIn = initialState.isLoggedIn\n        state.status = 'success'\n        state.webId = initialState.webId\n      })\n      // here we set up flow for new users\n      .addCase(getOffersOfUser.rejected, state => {\n        state.joinStatus = 'new'\n      })\n      .addCase(getOffersOfUser.fulfilled, state => {\n        state.joinStatus = 'old'\n      })\n  },\n})\n\nexport const selectLogin = (state: RootState) => state.login\n\nexport default loginSlice.reducer\n","import React, { FormEvent, useState } from 'react'\nimport { useAppDispatch } from '../../app/hooks'\nimport { login } from './loginSlice'\n\nconst Login = () => {\n  const [provider, setProvider] = useState('https://solidcommunity.net')\n  const dispatch = useAppDispatch()\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    dispatch(login(provider))\n  }\n  return (\n    <div className=\"flex flex-col items-center justify-evenly min-h-screen m-5\">\n      <div className=\"space-y-10\">\n        <section className=\"flex flex-col items-center space-y-2\">\n          <header>\n            <h1>Open Hospitality</h1>\n            <p className=\"italic\">hospitality, decentralized</p>\n          </header>\n          <div className=\"w-80 flex items-center justify-evenly\">\n            <a href=\"https://openhospitality.network\">\n              <img\n                src=\"https://openhospitality.network/assets/img/logo.png\"\n                title=\"Open Hospitality Network\"\n                alt=\"Open Hospitality Network logo\"\n                className=\"h-32\"\n              />\n            </a>\n            <span className=\"text-3xl\">+</span>\n            <a href=\"https://solidproject.org\">\n              <img\n                src=\"https://avatars3.githubusercontent.com/u/14262490?v=3&s=200\"\n                title=\"Solid Project\"\n                alt=\"Solid Project logo\"\n                className=\"h-32 p-5\"\n              />\n            </a>\n          </div>\n        </section>\n        <form\n          className=\"w-96 flex flex-col items-center space-y-2\"\n          onSubmit={handleSubmit}\n        >\n          <header className=\"text-xl font-bold\">\n            Sign in with your Solid Identity\n          </header>\n          <label htmlFor=\"provider\">Select your Solid Pod Provider</label>\n          <input\n            className=\"rounded border px-2 py-1 w-full\"\n            id=\"provider\"\n            type=\"text\"\n            value={provider}\n            onChange={e => setProvider(e.target.value)}\n          />\n          <button className=\"bg-blue-900 text-blue-50 w-full\" type=\"submit\">\n            Sign In\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import { LatLngTuple } from 'leaflet'\nimport 'leaflet.markercluster/dist/MarkerCluster.css'\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css'\nimport React, { FC } from 'react'\nimport { MapContainer, Marker, Popup, TileLayer } from 'react-leaflet'\nimport MarkerClusterGroup from 'react-leaflet-markercluster'\nimport { Offer } from './types'\n\n/* uncomment CurrentLocation to go to user's current location\nconst CurrentLocation = () => {\n  const map = useMap()\n  useEffect(() => {\n    map.locate()\n  }, [map])\n  useMapEvents({\n    locationfound: e => map.setView(e.latlng, 4),\n  })\n\n  return null\n}\n*/\n\nconst Map: FC<{ points: Offer[] }> = ({ points }) => {\n  const position: LatLngTuple = [30, 0]\n\n  return (\n    <MapContainer center={position} zoom={2} className=\"w-screen h-screen\">\n      {/*<CurrentLocation />*/}\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png\"\n      />\n      <MarkerClusterGroup>\n        {points.map(offer => (\n          <Marker key={offer.id} position={offer.position}>\n            <Popup>\n              <p>{offer.id}</p>\n              <p>{offer.userId}</p>\n              <p>\n                {Object.entries(offer.about).map(([lang, texts]) => (\n                  <li key={lang}>\n                    <b>{lang}</b> <span>{texts.join('----')}</span>\n                  </li>\n                ))}\n              </p>\n            </Popup>\n          </Marker>\n        ))}\n      </MarkerClusterGroup>\n    </MapContainer>\n  )\n}\n\nexport default Map\n","import React from 'react'\nimport { useAppSelector } from '../../app/hooks'\nimport Map from './Map'\nimport { selectOffers } from './offerSlice'\n\nconst Offers = () => {\n  const offers = useAppSelector(selectOffers)\n  return <Map points={offers} />\n}\n\nexport default Offers\n","import React from 'react'\nimport { useAppDispatch, useAppSelector } from '../app/hooks'\nimport { logout, selectLogin } from './login/loginSlice'\nimport { Link } from 'react-router-dom'\nimport { FaMap, FaUser, FaHome, FaSignOutAlt, FaUsers } from 'react-icons/fa'\nimport { IconType } from 'react-icons'\n\ntype LinkConfig = {\n  type: 'link'\n  to: string\n  icon: IconType\n  title: string\n}\n\ntype ButtonConfig = {\n  type: 'button'\n  icon: IconType\n  title: string\n  onClick: React.MouseEventHandler<HTMLButtonElement>\n}\n\nconst Control = () => {\n  const login = useAppSelector(selectLogin)\n  const dispatch = useAppDispatch()\n\n  const items: Array<LinkConfig | ButtonConfig> = [\n    { type: 'link', to: '/', title: 'map', icon: FaMap },\n    {\n      type: 'link',\n      to: `/users/${encodeURIComponent(login.webId)}`,\n      title: 'my profile',\n      icon: FaUser,\n    },\n    { type: 'link', to: '/offers', title: 'my offers', icon: FaHome },\n    { type: 'link', to: '/communities', title: 'communities', icon: FaUsers },\n    {\n      type: 'button',\n      onClick: () => dispatch(logout()),\n      title: 'sign out',\n      icon: FaSignOutAlt,\n    },\n  ]\n  return (\n    <nav className=\"fixed top-4 right-4 z-500 flex items-center gap-0 bg-opacity-50 bg-white text-gray-400 rounded\">\n      {items.map(item => {\n        const icon = <item.icon title={item.title} className=\"text-4xl p-2\" />\n\n        const classNames =\n          'p-0 hover:text-white hover:bg-opacity-100 hover:bg-black rounded'\n\n        return item.type === 'link' ? (\n          <Link key={item.title} className={classNames} to={item.to}>\n            {icon}\n          </Link>\n        ) : (\n          <button\n            key={item.title}\n            className={classNames}\n            onClick={item.onClick}\n          >\n            {icon}\n          </button>\n        )\n      })}\n    </nav>\n  )\n}\n\nexport default Control\n","import React, { useState } from 'react'\nimport { Community as CommunityType } from './types'\n\nconst colors = ['red', 'yellow', 'green', 'blue', 'indigo', 'purple', 'pink']\n\nconst Community: React.FC<{\n  community: CommunityType\n  isMember: boolean\n  onJoin: () => void\n}> = ({ community, isMember, onJoin }) => {\n  const [color] = useState(colors[Math.floor(Math.random() * colors.length)])\n\n  return (\n    <div className={`w-64 p-4 bg-${color}-300 rounded flex flex-col gap-4`}>\n      <header\n        style={{\n          backgroundImage: `url(\"${community.image}\")`,\n          textShadow: '0 0 5px white',\n        }}\n        className=\"py-16 text-center -m-4 rounded-t bg-cover bg-center text-xl font-bold\"\n      >\n        {community.name.en}\n      </header>\n      <section className=\"mt-2 whitespace-pre-line text-justify\">\n        {community.about.en}\n      </section>\n      {isMember ? (\n        <div className=\"text-center\">Member</div>\n      ) : (\n        <button\n          className={`bg-${color}-200 hover:bg-${color}-100 text-${color}-900`}\n          onClick={onJoin}\n        >\n          Join\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default Community\n","/**\n * Inspired by Penny's ConfirmOperation component\n * https://gitlab.com/vincenttunru/penny/-/blob/main/src/components/ConfirmOperation.tsx\n */\n\nimport React, { FC, FormEventHandler, useState } from 'react'\nimport Modal from 'react-modal'\n\ninterface Props {\n  confirmString: string\n  onConfirm: () => void\n  onCancel: () => void\n}\n\nconst ConfirmRemoveOffer: FC<Props> = ({\n  confirmString,\n  onConfirm,\n  onCancel,\n}) => {\n  const [promptOpen, setPromptOpen] = useState(true)\n  const [enteredString, setEnteredString] = useState('')\n\n  const handleSubmit: FormEventHandler = event => {\n    event.preventDefault()\n\n    if (enteredString === confirmString) {\n      onConfirm()\n    }\n  }\n\n  return (\n    <Modal\n      isOpen={promptOpen}\n      onRequestClose={() => setPromptOpen(false)}\n      onAfterClose={onCancel}\n      contentLabel=\"Are you sure?\"\n      closeTimeoutMS={150}\n      overlayClassName={{\n        base: 'bg-opacity-90 bg-gray-900 fixed top-0 left-0 bottom-0 right-0 z-5000',\n        afterOpen: '',\n        beforeClose: '',\n      }}\n    >\n      <h1>Are you sure you want to remove offer?</h1>\n      <form onSubmit={handleSubmit} className=\"flex flex-col gap-2\">\n        <label>\n          Please enter{' '}\n          <samp>\n            <kbd>{confirmString}</kbd>\n          </samp>{' '}\n          below\n        </label>\n        <input\n          className=\"border rounded\"\n          type=\"text\"\n          value={enteredString}\n          onChange={e => setEnteredString(e.target.value)}\n          autoFocus\n        />\n        <button\n          type=\"submit\"\n          disabled={confirmString !== enteredString}\n          className=\"disabled:opacity-50 bg-red-400 disabled:cursor-not-allowed cursor-pointer\"\n        >\n          Confirm\n        </button>\n        <button className=\"border\" onClick={onCancel}>\n          Cancel\n        </button>\n      </form>\n    </Modal>\n  )\n}\n\nexport default ConfirmRemoveOffer\n/*\n      className={{\n        base: '',\n        afterOpen: '',\n        beforeClose: '',\n      }}\n      */\n","import { LatLngTuple } from 'leaflet'\nimport React, { MouseEventHandler, useEffect, useState } from 'react'\nimport { MapContainer, Marker, TileLayer, useMap } from 'react-leaflet'\nimport { useAppDispatch } from '../../app/hooks'\nimport ConfirmRemoveOffer from './ConfirmRemoveOffer'\nimport { removeOffer } from './offerSlice'\nimport { Offer as OfferType } from './types'\n\ninterface OfferProps {\n  offer: OfferType\n  editable?: false\n}\n\ninterface EditableOfferProps {\n  offer: OfferType\n  onClickEdit: MouseEventHandler<HTMLButtonElement>\n  editable: true\n}\n\nconst Offer: React.FC<OfferProps | EditableOfferProps> = ({\n  offer,\n  editable = false,\n  ...props\n}) => {\n  const dispatch = useAppDispatch()\n  const [requestingDelete, setRequestingDelete] = useState(false)\n  const handleRemove = () => {\n    dispatch(removeOffer(offer))\n    setRequestingDelete(false)\n  }\n  return (\n    <div className=\"w-64 p-4 bg-blue-50 rounded flex flex-col gap-4\">\n      <Location location={offer.position} className=\"w-56 h-56\" />\n      <section className=\"whitespace-pre-line text-justify\">\n        {offer.about.en}\n      </section>\n      {editable && 'onClickEdit' in props && (\n        <>\n          <button className=\"bg-white\" onClick={props.onClickEdit}>\n            edit\n          </button>\n          <button\n            className=\"bg-red-400\"\n            onClick={() => setRequestingDelete(true)}\n          >\n            remove\n          </button>\n          {requestingDelete && (\n            <ConfirmRemoveOffer\n              confirmString={new globalThis.URL(offer.id).hash}\n              onConfirm={handleRemove}\n              onCancel={() => setRequestingDelete(false)}\n            />\n          )}\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Offer\n\nconst SetLocation = ({ location }: { location: LatLngTuple }) => {\n  const map = useMap()\n  useEffect(() => {\n    map.setView(location, 12)\n  }, [location, map])\n\n  return null\n}\n\nconst Location: React.FC<{ location: LatLngTuple; className?: string }> = ({\n  location,\n  className = '',\n}) => {\n  return (\n    <MapContainer\n      attributionControl={false}\n      center={location}\n      zoom={12}\n      scrollWheelZoom=\"center\"\n      doubleClickZoom=\"center\"\n      touchZoom=\"center\"\n      className={className}\n    >\n      <SetLocation location={location} />\n      <TileLayer url=\"https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png\" />\n      <Marker position={location} />\n    </MapContainer>\n  )\n}\n","import React from 'react'\nimport { FaExternalLinkAlt } from 'react-icons/fa'\nimport { useParams } from 'react-router'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { RootState } from '../../app/store'\nimport Community from '../community/Community'\nimport { joinCommunity, selectLoggedUser } from '../community/communitySlice'\nimport Offer from '../offer/Offer'\nimport {\n  selectUser,\n  selectUserCommunities,\n  selectUserOffers,\n} from './userSlice'\n\nconst User = () => {\n  const params = useParams<{ webId: string }>()\n  const webId = decodeURIComponent(params.webId)\n  const user = useAppSelector((state: RootState) => selectUser(state, webId))\n  const offers = useAppSelector((state: RootState) =>\n    selectUserOffers(state, webId),\n  )\n  const loggedUser = useAppSelector(selectLoggedUser)\n  const communities = useAppSelector((state: RootState) =>\n    selectUserCommunities(state, webId),\n  )\n\n  const dispatch = useAppDispatch()\n\n  return (\n    <div className=\"flex flex-col items-center gap-4 my-8\">\n      <header className=\"flex items-center gap-2\">\n        <h1 className=\"italic\">\n          Profile of <span className=\"not-italic\">{user.name}</span>\n        </h1>{' '}\n        <a href={user.id}>\n          <FaExternalLinkAlt className=\"text-xs text-gray-400 hover:text-gray-800\" />\n        </a>\n      </header>\n      {user.avatar && (\n        <img\n          className=\"w-56 max-h-56\"\n          src={user.avatar}\n          alt={`image of ${user.name}`}\n        />\n      )}\n      <p className=\"w-56 whitespace-pre-line text-justify\">\n        {user.about.en || (\n          <span className=\"text-gray-500 italic\">\n            This user has no description\n          </span>\n        )}\n      </p>\n\n      <h2>Offers ({offers.length})</h2>\n      <section>\n        <ul className=\"flex flex-wrap gap-6 justify-center\">\n          {offers.map(offer => (\n            <li key={offer.id}>\n              <Offer offer={offer} />\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <h2>Communities ({communities.length})</h2>\n      <section>\n        <ul className=\"flex flex-wrap gap-6 justify-center\">\n          {communities.map(community => (\n            <li key={community.id}>\n              <Community\n                community={community}\n                isMember={\n                  loggedUser.communityIds.includes(community.id) &&\n                  community.memberIds.includes(loggedUser.id)\n                }\n                onJoin={() => dispatch(joinCommunity(community))}\n              />\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  )\n}\n\nexport default User\n","import { LatLngTuple, Map } from 'leaflet'\nimport React, { FormEventHandler, useEffect, useState } from 'react'\nimport { MapContainer, Marker, TileLayer, useMapEvent } from 'react-leaflet'\nimport { Offer } from './types'\n\nconst EditOffer = ({\n  offer,\n  onSubmit,\n  onCancel,\n  submit,\n}: {\n  offer: Offer\n  onSubmit: (offer: Offer) => void\n  onCancel: () => void\n  submit: 'Create' | 'Update'\n}) => {\n  const [editedOffer, setEditedOffer] = useState(offer)\n\n  useEffect(() => {\n    setEditedOffer(offer)\n  }, [offer])\n\n  const handleChangeAbout: React.ChangeEventHandler<HTMLTextAreaElement> =\n    e => {\n      setEditedOffer(offer => ({\n        ...offer,\n        about: {\n          en: [e.target.value],\n        },\n      }))\n    }\n\n  const handleChangePosition = (position: LatLngTuple) => {\n    setEditedOffer((offer: Offer) => ({\n      ...offer,\n      position,\n    }))\n  }\n\n  const handleSubmit: FormEventHandler<HTMLFormElement> = e => {\n    e.preventDefault()\n    onSubmit(editedOffer)\n  }\n\n  return (\n    <form\n      className=\"w-64 p-4 bg-blue-200 rounded flex flex-col gap-4\"\n      onSubmit={handleSubmit}\n    >\n      <LocationEdit\n        location={editedOffer.position}\n        onChange={handleChangePosition}\n        className=\"w-56 h-56\"\n      />\n      <textarea\n        value={editedOffer.about.en[0] ?? ''}\n        onChange={handleChangeAbout}\n        placeholder=\"about\"\n      />\n      <button className=\"bg-green-300 hover:bg-green-400\" type=\"submit\">\n        {submit}\n      </button>\n      <button className=\"hover:bg-gray-100\" type=\"button\" onClick={onCancel}>\n        Cancel\n      </button>\n    </form>\n  )\n}\n\nexport default EditOffer\n\nconst normalizeLng = (lng: number) => (((lng % 360) - 180 * 3) % 360) + 180\n\nconst LocationDrag = ({\n  onDrag,\n}: {\n  onDrag: (location: LatLngTuple) => void\n}) => {\n  const map = useMapEvent('drag', () => {\n    const { lat, lng } = map.getCenter()\n    onDrag([lat, normalizeLng(lng)])\n    map.setView([lat, normalizeLng(lng)])\n  })\n\n  return null\n}\n\nconst CurrentLocation = ({\n  onLocationFound,\n}: {\n  onLocationFound: (location: LatLngTuple) => void\n}) => {\n  const map = useMapEvent('locationfound', e => {\n    const { lat, lng } = e.latlng\n    onLocationFound([lat, lng])\n    map.flyTo([lat, normalizeLng(lng)])\n  })\n  return null\n}\n\nconst LocationEdit: React.FC<{\n  location: LatLngTuple\n  onChange: (location: LatLngTuple) => void\n  className?: string\n}> = ({ location, className = '', onChange }) => {\n  const [map, setMap] = useState<Map>()\n\n  return (\n    <div>\n      <section className=\"bg-yellow-200 p-2 text-sm italic\">\n        drag map to a new location or{' '}\n        <button\n          className=\"bg-yellow-50\"\n          type=\"button\"\n          onClick={() => map?.locate()}\n        >\n          find your location\n        </button>\n      </section>\n      <MapContainer\n        attributionControl={false}\n        center={location}\n        zoom={12}\n        scrollWheelZoom=\"center\"\n        doubleClickZoom=\"center\"\n        touchZoom=\"center\"\n        className={className}\n        whenCreated={setMap}\n      >\n        <CurrentLocation onLocationFound={onChange} />\n        <LocationDrag onDrag={onChange} />\n        <TileLayer url=\"https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png\" />\n        <Marker position={location} />\n      </MapContainer>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { selectLoggedUser } from '../community/communitySlice'\nimport { selectLogin } from '../login/loginSlice'\nimport { selectUserOffers } from '../user/userSlice'\nimport EditOfferForm from './EditOffer'\nimport OfferItem from './Offer'\nimport { getHospexUri } from './offerAPI'\nimport { createOffer, updateOffer } from './offerSlice'\nimport { Offer } from './types'\n\nconst Offers = () => {\n  const user = useAppSelector(selectLoggedUser)\n  const { webId: userId } = useAppSelector(selectLogin)\n  const offers = useAppSelector(state => selectUserOffers(state, userId))\n  const dispatch = useAppDispatch()\n  const document = getHospexUri(userId)\n\n  const [create, setCreate] = useState(false)\n  const [edit, setEdit] = useState('')\n\n  const offerToEdit = offers.find(offer => offer.id === edit)\n\n  const handleClickAdd = () => {\n    setCreate(true)\n    setEdit('')\n  }\n\n  const handleClickEdit = (id: string) => {\n    setEdit('')\n    setCreate(false)\n    setEdit(id)\n  }\n\n  const handleCreate = (offer: Offer) => {\n    dispatch(createOffer({ offer, document }))\n    setCreate(false)\n  }\n\n  const handleUpdate = (offer: Offer) => {\n    dispatch(updateOffer({ offer, document }))\n    setEdit('')\n  }\n\n  const handleCancel = () => {\n    setCreate(false)\n    setEdit('')\n  }\n\n  return (\n    <div className=\"flex flex-col items-center justify-evenly my-8\">\n      <header>\n        <h1>\n          Offers of{' '}\n          <Link to={`/users/${encodeURIComponent(userId)}`}>\n            {user?.name ?? 'user'}\n          </Link>\n        </h1>\n      </header>\n      <ul className=\"flex flex-wrap gap-6 justify-center\">\n        {offers.map(offer => (\n          <li key={offer.id}>\n            {offer === offerToEdit ? (\n              <EditOfferForm\n                offer={offerToEdit}\n                onSubmit={handleUpdate}\n                onCancel={handleCancel}\n                submit=\"Update\"\n              />\n            ) : (\n              <OfferItem\n                offer={offer}\n                editable\n                onClickEdit={() => handleClickEdit(offer.id)}\n              />\n            )}\n          </li>\n        ))}\n        {create && (\n          <EditOfferForm\n            offer={{\n              id: `${document}#offer${Date.now()}`,\n              userId,\n              position: [0, 0],\n              about: {\n                en: [''],\n              },\n            }}\n            onSubmit={handleCreate}\n            onCancel={handleCancel}\n            submit=\"Create\"\n          />\n        )}\n      </ul>\n      {!create && <button onClick={handleClickAdd}>Add Offer</button>}\n    </div>\n  )\n}\n\nexport default Offers\n","import React from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport Community from './Community'\nimport { joinCommunity, selectLoggedUser } from './communitySlice'\nimport {\n  selectCommunities,\n  selectCommunitiesOfLoggedUser,\n} from './communitySlice'\n\nconst Communities = () => {\n  const communities = useAppSelector(selectCommunities)\n  const userCommunities = useAppSelector(selectCommunitiesOfLoggedUser)\n  const loggedUser = useAppSelector(selectLoggedUser)\n  const dispatch = useAppDispatch()\n  return (\n    <div className=\"flex flex-col items-center justify-evenly my-8\">\n      <header>\n        <h1>Communities</h1>\n      </header>\n      <ul className=\"flex flex-wrap gap-6 justify-center\">\n        {communities.map(community => (\n          <li key={community.id}>\n            <Community\n              key={community.id}\n              community={community}\n              isMember={\n                userCommunities.includes(community) &&\n                community.memberIds.includes(loggedUser.id)\n              }\n              onJoin={() => dispatch(joinCommunity(community))}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Communities\n","import React, { useEffect } from 'react'\nimport { useAppDispatch, useAppSelector } from './app/hooks'\nimport Login from './features/login/Login'\nimport { init, selectLogin } from './features/login/loginSlice'\nimport OfferMap from './features/offer/OfferMap'\nimport Control from './features/Control'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport User from './features/user/User'\nimport Offers from './features/offer/Offers'\nimport Communities from './features/community/Communities'\nimport { getCommunity } from './features/community/communitySlice'\n\nfunction App() {\n  const login = useAppSelector(selectLogin)\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    dispatch(init())\n  }, [dispatch])\n\n  // fetch featured communities\n  useEffect(() => {\n    if (login.isLoggedIn) {\n      ;[\n        'https://hospex-group-test.solidcommunity.net/profile/card#us',\n        'https://mrkvon.inrupt.net/hospex/sleepy-bike/community#us',\n      ].forEach(id => {\n        dispatch(getCommunity(id))\n      })\n    }\n  }, [login.isLoggedIn, dispatch])\n\n  return (\n    <div className=\"App\">\n      {login.status === 'pending' ? (\n        <i>Loading</i>\n      ) : login.isLoggedIn ? (\n        <Router>\n          <Control />\n          <Switch>\n            <Route path=\"/users/:webId\">\n              <User />\n            </Route>\n            <Route path=\"/offers\">\n              <Offers />\n            </Route>\n            <Route path=\"/communities\">\n              <Communities />\n            </Route>\n            <Route path=\"/\">\n              <OfferMap />\n            </Route>\n          </Switch>\n        </Router>\n      ) : (\n        <Login />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport offerReducer from '../features/offer/offerSlice'\nimport loginReducer from '../features/login/loginSlice'\nimport userReducer from '../features/user/userSlice'\nimport communityReducer from '../features/community/communitySlice'\n\nexport const store = configureStore({\n  reducer: {\n    offer: offerReducer,\n    community: communityReducer,\n    user: userReducer,\n    login: loginReducer,\n  },\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { store } from './app/store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport Modal from 'react-modal'\n\n// this is required by react-modal library for proper modal accessibility\nModal.setAppElement('#root')\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}